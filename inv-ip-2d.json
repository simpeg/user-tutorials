{"version":2,"kind":"Notebook","sha256":"7763248cba7cb6ff5a1f5a6938cabb3468bf891104c332b539224d946b73945e","slug":"inv-ip-2d","location":"/notebooks/06-ip/inv_ip_2d.ipynb","dependencies":[],"frontmatter":{"title":"2.5D IP Inversion","authors":[{"id":"devincowan","nameParsed":{"literal":"Devin Cowan","given":"Devin","family":"Cowan"},"name":"Devin Cowan","orcid":"0000-0002-0089-402X","roles":["Writing – original draft","Writing – review & editing","Software"],"affiliations":["ubc"]}],"kernelspec":{"name":"python3","display_name":"Python 3 (ipykernel)","language":"python"},"license":{"content":{"id":"CC-BY-4.0","url":"https://creativecommons.org/licenses/by/4.0/","name":"Creative Commons Attribution 4.0 International","free":true,"CC":true},"code":{"id":"MIT","url":"https://opensource.org/licenses/MIT","name":"MIT License","free":true,"osi":true}},"github":"https://github.com/simpeg/user-tutorials","subject":"SimPEG User Tutorials","keywords":["geophysics","inversions","python","open-source"],"affiliations":[{"id":"ubc","name":"University of British Columbia","department":"Department of Earth, Ocean and Atmospheric Sciences","address":"2020 – 2207 Main Mall","city":"Vancouver","state":"British Columbia","postal_code":"V6T 1Z4","country":"Canada","isni":"0000 0001 2288 9830","ror":"https://ror.org/03rmrcq20","phone":"604 822 2449"},{"id":"kobold","name":"Kobold Metals"}],"numbering":{"title":{"offset":1}},"source_url":"https://github.com/simpeg/user-tutorials/blob/main/notebooks/06-ip/inv_ip_2d.ipynb","edit_url":"https://github.com/simpeg/user-tutorials/edit/main/notebooks/06-ip/inv_ip_2d.ipynb","exports":[{"format":"ipynb","filename":"inv_ip_2d.ipynb","url":"/user-tutorials/build/inv_ip_2d-6d90d131b4776ac0e4a7d5c7ddb28673.ipynb"}]},"widgets":{},"mdast":{"type":"root","children":[{"type":"block","kind":"notebook-content","children":[{"type":"admonition","children":[{"type":"admonitionTitle","children":[{"type":"text","value":"Intermediate notebook","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"VfRQs7kSg4"}],"key":"ETEo8OYGgM"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"This tutorial focusses on intermediate level functionality within SimPEG. Basic functionality within SimPEG is not discussed in detail, as we assume the user is already familiar.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"q8NCWQsGOS"}],"key":"J8pwf7r20N"}],"class":"caution","key":"cVvYRpfISQ"}],"key":"OGw2Lt5zij"},{"type":"block","kind":"notebook-content","children":[{"type":"admonition","children":[{"type":"admonitionTitle","children":[{"type":"text","value":"Light-weight notebook","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"oRSr6lAEUB"}],"key":"TEcVo9mjrP"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"This tutorial requires minimal computational resources and can be executed quickly in the background while other computer processes are running.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"WSLVeC2whE"}],"key":"SQbt16DDum"}],"class":"hint","key":"SZPbUTrOy5"}],"key":"I5SvOqE8xc"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"strong","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Keywords:","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"xs0WVkVIvi"}],"key":"s0eCGUjNBK"},{"type":"text","value":" induced polarization, 2.5D inversion, sparse norm, tree mesh.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"LKgtAr76td"}],"key":"HIbo5GUqAR"},{"type":"paragraph","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"strong","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Summary:","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"djsGkkrpAp"}],"key":"h84hQ1LtO2"},{"type":"text","value":" Here we invert IP data to recover the subsurface chargeability distribution on a tree mesh. We demonstrate two inversion approaches for recovering a chargeability model:","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"zPu4dVpYMw"}],"key":"su5NOjAMjM"},{"type":"list","ordered":true,"start":1,"spread":false,"position":{"start":{"line":7,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"paragraph","children":[{"type":"text","value":"Weighted least-squares inversion","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"ECr7KW0C5t"}],"key":"rcPck6U6Qo"}],"key":"WREUkkEFaz"},{"type":"listItem","spread":true,"position":{"start":{"line":8,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"paragraph","children":[{"type":"text","value":"Iteratively re-weighted least-squares (IRLS) inversion","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"fNJ0Rs80u4"}],"key":"cUT3HAmVTe"}],"key":"KjoDvUmZeL"}],"key":"L6bk7faw1g"},{"type":"paragraph","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"text","value":"Almost all of the details of defining and carrying out weighted least-squares and iteratively weighted least squares inversion were covered in the ","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"uBqRezQfgJ"},{"type":"link","url":"fwd_dcr_2d.ipynb","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"text","value":"2.5D DC Resistivity Inversion","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"NZ0DPsXPjj"}],"urlSource":"fwd_dcr_2d.ipynb","key":"upTK3bmg8O"},{"type":"text","value":" tutorial. And functionality specific to defining the IP forward simulation was covered in the ","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"grNoH21PUi"},{"type":"link","url":"fwd_dcr_2d.ipynb","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"text","value":"2.5D IP Forward Simulation","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"RWsjbTo3UB"}],"urlSource":"fwd_dcr_2d.ipynb","key":"cTszB0rY9S"},{"type":"text","value":" tutorial. As we will focus primarily on content specific to IP inversion, we strongly urge the reader to work through the aforementioned tutorials prior to working through this one.","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"zsyBvaWox3"}],"key":"ha5YkD30FC"},{"type":"paragraph","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"children":[{"type":"strong","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"children":[{"type":"text","value":"Learning Objectives:","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"key":"ktWbE53px8"}],"key":"l2oajF6wBu"}],"key":"E1nkwo1ZkB"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":16,"column":1},"end":{"line":19,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"children":[{"type":"paragraph","children":[{"type":"text","value":"Assigning appropriate uncertainties to IP data","position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"key":"EODlSCj2SK"}],"key":"NFgUTRrohJ"}],"key":"bY1Q40QlMj"},{"type":"listItem","spread":true,"position":{"start":{"line":17,"column":1},"end":{"line":17,"column":1}},"children":[{"type":"paragraph","children":[{"type":"text","value":"Designing a mesh for IP inversion","position":{"start":{"line":17,"column":1},"end":{"line":17,"column":1}},"key":"CJrk3HcLwr"}],"key":"vMQytuFBQv"}],"key":"I2jdNSAWFk"},{"type":"listItem","spread":true,"position":{"start":{"line":18,"column":1},"end":{"line":18,"column":1}},"children":[{"type":"paragraph","children":[{"type":"text","value":"Obtaining a background conductivity/resistivity model for the IP inversion","position":{"start":{"line":18,"column":1},"end":{"line":18,"column":1}},"key":"pAtmb97vGH"}],"key":"SOPERh61Hj"}],"key":"qd1vHcZFYm"},{"type":"listItem","spread":true,"position":{"start":{"line":19,"column":1},"end":{"line":19,"column":1}},"children":[{"type":"paragraph","children":[{"type":"text","value":"Analyzing inversion results","position":{"start":{"line":19,"column":1},"end":{"line":19,"column":1}},"key":"P36rAQvbXI"}],"key":"m9wnIXGqsf"}],"key":"HUSrPQ9Cp4"}],"key":"Vs3uBE12Oc"}],"key":"Zyzu1KZTHX"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Import Modules","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"LAy0N32BHZ"}],"identifier":"import-modules","label":"Import Modules","html_id":"import-modules","implicit":true,"key":"fdm5Ps9CrW"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Here, we import all of the functionality required to run the notebook for the tutorial exercise.\nAll of the functionality specific to IP is imported from ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"T8ShnlSKWr"},{"type":"link","url":"https://docs.simpeg.xyz/latest/content/api/simpeg.electromagnetics.static.induced_polarization.html#module-simpeg.electromagnetics.static.induced_polarization","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"simpeg​.electromagnetics​.static​.induced​_polarization","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"OesWYgqiyA"}],"urlSource":"xref:simpeg#simpeg.electromagnetics.static.induced_polarization","internal":false,"protocol":"xref:sphinx","key":"A8mc2xHFLj"},{"type":"text","value":".\nWe also import some useful utility functions from ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"jXgyOROp5q"},{"type":"link","url":"https://docs.simpeg.xyz/latest/content/api/simpeg.utils.html#module-simpeg.utils","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"simpeg.utils","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"p2dwYFghNE"}],"urlSource":"xref:simpeg#simpeg.utils","internal":false,"protocol":"xref:sphinx","key":"wxChvJjvu0"},{"type":"text","value":". Classes required to define the data misfit, regularization, optimization, etc... are imported from elsewhere within SimPEG. We also import some useful utility functions from ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"NoQ8eFxZSE"},{"type":"link","url":"https://docs.simpeg.xyz/latest/content/api/simpeg.utils.html#module-simpeg.utils","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"simpeg.utils","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"QLcjTD2R8Q"}],"urlSource":"xref:simpeg#simpeg.utils","internal":false,"protocol":"xref:sphinx","key":"zoGnqsRtMo"},{"type":"text","value":". To generate the mesh used for the inversion, we use the ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"uPO7jCh1Sv"},{"type":"link","url":"https://discretize.simpeg.xyz/en/main","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"discretize","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"Js3kU9D88I"}],"urlSource":"https://discretize.simpeg.xyz/en/main","key":"f5cGRxgYFg"},{"type":"text","value":" package.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"xzjboNeL68"}],"key":"Prk1jUgFyG"}],"key":"M9R3DYL7qM"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2025-05-23T16:56:05.039155Z","iopub.status.busy":"2025-05-23T16:56:05.038684Z","iopub.status.idle":"2025-05-23T16:56:06.619475Z","shell.execute_reply":"2025-05-23T16:56:06.618735Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"# SimPEG functionality\nfrom simpeg.electromagnetics.static import induced_polarization as ip\nfrom simpeg.electromagnetics.static.utils.static_utils import (\n    plot_pseudosection,\n)\nfrom simpeg.utils.io_utils.io_utils_electromagnetics import read_dcip2d_ubc\nfrom simpeg.utils import download, model_builder\nfrom simpeg import (\n    maps,\n    data_misfit,\n    regularization,\n    optimization,\n    inverse_problem,\n    inversion,\n    directives,\n)\n\n# discretize functionality\nfrom discretize import TreeMesh\nfrom discretize.utils import active_from_xyz\n\n# Basic Python functionality\nimport os\nimport numpy as np\nimport matplotlib as mpl\nimport matplotlib.pyplot as plt\nfrom matplotlib.colors import Normalize, LogNorm\nimport tarfile\n\nmpl.rcParams.update({\"font.size\": 14})  # default font size\ncmap = mpl.cm.RdYlBu_r  # default colormap","key":"QEZAhiqtDG"},{"type":"output","id":"8dGIFTLJ4vhrqNTmeGHUV","data":[],"key":"dyj5wGFikJ"}],"key":"jmeV1wbR48"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Load and Plot Tutorial Data","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"pIhnI7mAe4"}],"identifier":"load-and-plot-tutorial-data","label":"Load and Plot Tutorial Data","html_id":"load-and-plot-tutorial-data","implicit":true,"key":"Q0BoeS5n3k"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"For most geophysical inversion projects, a reasonable inversion result can be obtained so long as the practitioner has observed data, the survey geometry and topography. For this tutorial, the observed data and topography files are provided. Here, we download and import the observed data and topography into the SimPEG framework.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"oRitIDPdG7"}],"key":"O3UkCApFqV"}],"key":"IasmAlLEnp"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2025-05-23T16:56:06.622539Z","iopub.status.busy":"2025-05-23T16:56:06.622217Z","iopub.status.idle":"2025-05-23T16:56:07.163318Z","shell.execute_reply":"2025-05-23T16:56:07.162233Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"# URL to download from repository assets\ndata_source = \"https://github.com/simpeg/user-tutorials/raw/main/assets/06-ip/inv_ip_2d_files.tar.gz\"\n\n# download the data\ndownloaded_data = download(data_source, overwrite=True)\n\n# unzip the tarfile\ntar = tarfile.open(downloaded_data, \"r\")\ntar.extractall()\ntar.close()\n\n# path to the directory containing our data\ndir_path = downloaded_data.split(\".\")[0] + os.path.sep\n\n# files to work with\ntopo_filename = dir_path + \"topo_2d.txt\"\ndata_filename = dir_path + \"ip_data.obs\"","key":"mPb9kvISyn"},{"type":"output","id":"rRd9FWOpOe5Z5EWq-_GfW","data":[{"name":"stdout","output_type":"stream","text":"Downloading https://github.com/simpeg/user-tutorials/raw/main/assets/06-ip/inv_ip_2d_files.tar.gz\n"},{"name":"stdout","output_type":"stream","text":"   saved to: /home/ssoler/git/user-tutorials/notebooks/06-ip/inv_ip_2d_files.tar.gz\nDownload completed!\n"},{"name":"stderr","output_type":"stream","text":"/tmp/ipykernel_978590/2163865962.py:9: DeprecationWarning: Python 3.14 will, by default, filter extracted tar archives and reject files or modify their metadata. Use the filter argument to control this behavior.\n  tar.extractall()\n"}],"key":"SQKsDb2UBr"}],"key":"KiCcUeKcCS"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Load the Topography","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"BV5SQ7D9bz"}],"identifier":"load-the-topography","label":"Load the Topography","html_id":"load-the-topography","implicit":true,"key":"Uu3ozerOGv"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"True surface topography is defined as an (N, 3) ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"qGOhy2p7C4"},{"type":"link","url":"https://numpy.org/doc/stable/reference/generated/numpy.ndarray.html#numpy.ndarray","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"numpy.ndarray","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"Og9f2tQ5hX"}],"urlSource":"xref:numpy#numpy.ndarray","internal":false,"protocol":"xref:sphinx","key":"WRNOmgEvyD"},{"type":"text","value":".\nFor the 2.5D problem geometry however, topography is an (N, 2) ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"OvFAp0MXJL"},{"type":"link","url":"https://numpy.org/doc/stable/reference/generated/numpy.ndarray.html#numpy.ndarray","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"numpy.ndarray","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"xm79vzJMWf"}],"urlSource":"xref:numpy#numpy.ndarray","internal":false,"protocol":"xref:sphinx","key":"XdbwVI0uVb"},{"type":"text","value":", where the first coordinate represent along-line position and the second coordinate represents the vertical position. In this tutorial, we assume the topography and electrode locations are defined according to the 2.5D geometry.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"KpmgkFsYAP"}],"key":"jPIIp8E4g2"}],"key":"DTqLpxL4Cr"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2025-05-23T16:56:07.167141Z","iopub.status.busy":"2025-05-23T16:56:07.166837Z","iopub.status.idle":"2025-05-23T16:56:07.171671Z","shell.execute_reply":"2025-05-23T16:56:07.170860Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"# Load 2D topography\ntopo_2d = np.loadtxt(str(topo_filename))","key":"jc7qBv9Rwd"},{"type":"output","id":"hgH49pR3UclUB5CIKmccz","data":[],"key":"ZMhtmlCazA"}],"key":"eNjef87h5d"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2025-05-23T16:56:07.175370Z","iopub.status.busy":"2025-05-23T16:56:07.175019Z","iopub.status.idle":"2025-05-23T16:56:07.453624Z","shell.execute_reply":"2025-05-23T16:56:07.452926Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"# Plot 2D topography\nfig = plt.figure(figsize=(10, 2))\nax = fig.add_axes([0.1, 0.1, 0.8, 0.8])\nax.plot(topo_2d[:, 0], topo_2d[:, -1], color=\"b\", linewidth=1)\nax.set_xlim([topo_2d[:, 0].min(), topo_2d[:, 0].max()])\nax.set_xlabel(\"x (m)\", labelpad=5)\nax.set_ylabel(\"z (m)\", labelpad=5)\nax.grid(True)\nax.set_title(\"Topography (Exaggerated z-axis)\", fontsize=16, pad=10)\nplt.show(fig)","key":"Phaoa0yemc"},{"type":"output","id":"WNvEG8JZzjA7QNf6dFGcb","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"3eab067d736ad4ee3f20e57d3a1abb1c","path":"/user-tutorials/build/3eab067d736ad4ee3f20e57d3a1abb1c.png"},"text/plain":{"content":"<Figure size 1000x200 with 1 Axes>","content_type":"text/plain"}}}],"key":"newleOFO8W"}],"key":"X9yHGliDrD"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Load the IP Data","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"fYxWuoDEwF"}],"identifier":"load-the-ip-data","label":"Load the IP Data","html_id":"load-the-ip-data","implicit":true,"key":"ym3vJeCFbb"}],"key":"JdyeFqEtbD"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"strong","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Option A: DCIP2D formatted data","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"tIxNqZnhdS"}],"key":"dtoSG7aCMh"}],"key":"ZpGWK9HSJj"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"For this tutorial, the observed data are organized with a UBC-GIF DCIP2D formatted data file. We can use the ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"XXaUxGvGcb"},{"type":"link","url":"https://docs.simpeg.xyz/latest/content/api/generated/simpeg.utils.io_utils.read_dcip2d_ubc.html#simpeg.utils.io_utils.read_dcip2d_ubc","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"read_dcip2d_ubc","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"O5ruti2QCy"}],"urlSource":"xref:simpeg#simpeg.utils.io_utils.read_dcip2d_ubc","internal":false,"protocol":"xref:sphinx","key":"kxOqrUgHOC"},{"type":"text","value":" utility function to load data in this format. This function outputs a SimPEG ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"V4ZofoWX3g"},{"type":"link","url":"https://docs.simpeg.xyz/latest/content/api/generated/simpeg.data.Data.html#simpeg.data.data","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Data","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"V1MCLltSF2"}],"urlSource":"xref:simpeg#simpeg.data.Data","internal":false,"protocol":"xref:sphinx","key":"tG2kzhXpVr"},{"type":"text","value":" object. The data are apparent chargeabilities in V/V.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"Q9niRzvWEu"}],"key":"R7ZCl1lxqQ"}],"key":"K0X54jjfy2"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2025-05-23T16:56:07.457241Z","iopub.status.busy":"2025-05-23T16:56:07.456981Z","iopub.status.idle":"2025-05-23T16:56:07.468674Z","shell.execute_reply":"2025-05-23T16:56:07.468079Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"ip_data = read_dcip2d_ubc(data_filename, \"apparent_chargeability\", \"general\")","key":"AeRn3KLPp6"},{"type":"output","id":"UZEYfod8lKrS8sUNTH2jO","data":[],"key":"NxXxgqfU6y"}],"key":"f99nKGAePr"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"strong","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Option B: Survey from ABMN electrode locations","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"CAyOQYwjXy"}],"key":"biVFC0d1ED"}],"key":"I0KEcnqgfW"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"If you have CSV-formatted data containing the ABMN electrode locations, you will need to:","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"WBqtZSHPwh"}],"key":"WgcOSeBywv"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":5,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"paragraph","children":[{"type":"text","value":"load the file into a ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"mGlGUlGx0r"},{"type":"link","url":"https://numpy.org/doc/stable/reference/generated/numpy.ndarray.html#numpy.ndarray","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"numpy.ndarray","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"mYiBzqrKXE"}],"urlSource":"xref:numpy#numpy.ndarray","internal":false,"protocol":"xref:sphinx","key":"NvzFeWdXA4"}],"key":"BMD01m7KU2"}],"key":"L9tPfbUqbx"},{"type":"listItem","spread":true,"position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"paragraph","children":[{"type":"text","value":"extract the data column and the A, B, M and N electrode locations","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"d5s7OaQHju"}],"key":"rckPkbW0hw"}],"key":"FwKAnGKIJi"},{"type":"listItem","spread":true,"position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"paragraph","children":[{"type":"text","value":"transform the electrode locations to the 2.5D geometry if necessary; i.e. (N, 2) ","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"WZMI8lOHBb"},{"type":"link","url":"https://numpy.org/doc/stable/reference/generated/numpy.ndarray.html#numpy.ndarray","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"numpy.ndarray","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"B44qF7eMwV"}],"urlSource":"xref:numpy#numpy.ndarray","internal":false,"protocol":"xref:sphinx","key":"MoSORidrvU"}],"key":"pG9aGj8fUo"}],"key":"WlwJCVxy8M"},{"type":"listItem","spread":true,"position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"paragraph","children":[{"type":"text","value":"use the ","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"wJhqrW8cua"},{"type":"link","url":"https://docs.simpeg.xyz/latest/content/api/generated/simpeg.electromagnetics.static.utils.generate_survey_from_abmn_locations.html#simpeg.electromagnetics.static.utils.generate_survey_from_abmn_locations","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"generate​_survey​_from​_abmn​_locations","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"m4J9rQ3M5Y"}],"urlSource":"xref:simpeg#simpeg.electromagnetics.static.utils.generate_survey_from_abmn_locations","internal":false,"protocol":"xref:sphinx","key":"NCifePjNIa"},{"type":"text","value":" to generate a ","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"d0nyaLtxvu"},{"type":"link","url":"https://docs.simpeg.xyz/latest/content/api/generated/simpeg.electromagnetics.static.resistivity.Survey.html#simpeg.electromagnetics.static.resistivity.survey","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"survey","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"xpHbjAou3n"}],"urlSource":"xref:simpeg#simpeg.electromagnetics.static.resistivity.Survey","internal":false,"protocol":"xref:sphinx","key":"Tp3HVzzBQu"},{"type":"text","value":" object automatically.","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"GJCjdA9vPI"}],"key":"cvQY0vKLo1"}],"key":"CDNnjFBAYj"},{"type":"listItem","spread":true,"position":{"start":{"line":9,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"paragraph","children":[{"type":"text","value":"Define a ","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"l39iepzVCz"},{"type":"link","url":"https://docs.simpeg.xyz/latest/content/api/generated/simpeg.data.Data.html#simpeg.data.data","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"Data","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"IcsGlDack8"}],"urlSource":"xref:simpeg#simpeg.data.Data","internal":false,"protocol":"xref:sphinx","key":"MeJJKiI0Vd"},{"type":"text","value":" object attached to the survey and observed data.","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"nwyg3hXoYb"}],"key":"eppCHt85Tf"}],"key":"Nb4KxPxouJ"}],"key":"uYK0mIsOXV"},{"type":"paragraph","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"children":[{"type":"text","value":"E.g. for a file containing electrode locations already formatted for a 2.5D geometry:","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"lJ8rV28cSn"}],"key":"vTS8QeuPAI"},{"type":"code","lang":"","value":"data_array = np.loadtxt(data_filename, skiprows=1)\n\ndobs = data_array[:, -1]\nA = data_array[:, 0:2]\nB = data_array[:, 2:4]\nM = data_array[:, 4:6]\nN = data_array[:, 6:8]\n\nsurvey = generate_survey_from_abmn_locations(\n    locations_a=A,\n    locations_b=B,\n    locations_m=M,\n    locations_n=M,\n    data_type='apparent_chargeability'\n)\n\ndc_data = data.Data(survey, dobs=dobs)","position":{"start":{"line":12,"column":1},"end":{"line":30,"column":1}},"key":"wJ0mZArhFz"}],"key":"DOiTHzFNXt"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Plot IP Data in Pseudo-Section","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"p0NA93FppO"}],"identifier":"plot-ip-data-in-pseudo-section","label":"Plot IP Data in Pseudo-Section","html_id":"plot-ip-data-in-pseudo-section","implicit":true,"key":"AfK5zW8abx"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Here we use the ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"C6KE6YEZlM"},{"type":"link","url":"simpeg#simpeg.electromagnetics.static.utils.plot_pseudosection","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"plot_pseudosection","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"VQTnyXQqqL"}],"urlSource":"simpeg#simpeg.electromagnetics.static.utils.plot_pseudosection","key":"GNHZA9ZG0M"},{"type":"text","value":" utility function to represent the observed apparent chargeability data in pseudosection. In this case, the apparent chargeabilities are represented in V/V.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"YjeboIoHIi"}],"key":"P1eoMVHooz"},{"type":"paragraph","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"strong","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"In the case of secondary voltage data,","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"MsWOGy11nk"}],"key":"ewcmuNJvhG"},{"type":"text","value":" you would need to convert the values to apparent chargeabilities. This accomplished by normalizing the secondary IP voltages by the DC voltages.","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"ZpzKGJEcBs"}],"key":"GVpvhJhQPg"}],"key":"S64UEym0Kc"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2025-05-23T16:56:07.472235Z","iopub.status.busy":"2025-05-23T16:56:07.471922Z","iopub.status.idle":"2025-05-23T16:56:07.698638Z","shell.execute_reply":"2025-05-23T16:56:07.698015Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"# Plot apparent conductivity using pseudo-section\nmpl.rcParams.update({\"font.size\": 12})\n\napparent_chargeability = ip_data.dobs\n\nfig = plt.figure(figsize=(12, 5))\nax1 = fig.add_axes([0.1, 0.15, 0.75, 0.78])\nplot_pseudosection(\n    ip_data.survey,\n    apparent_chargeability,\n    \"contourf\",\n    ax=ax1,\n    scale=\"linear\",\n    cbar_label=\"V/V\",\n    mask_topography=True,\n    contourf_opts={\"levels\": 20, \"cmap\": mpl.cm.plasma},\n)\nax1.set_title(\"Apparent Chargeability\")\nplt.show()","key":"cEfAhxmWg9"},{"type":"output","id":"6zXkGtiU29PFKXQ8PsEqG","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"8c6e87d347012a3e0e7c91aea55b0b13","path":"/user-tutorials/build/8c6e87d347012a3e0e7c91aea55b0b13.png"},"text/plain":{"content":"<Figure size 1200x500 with 2 Axes>","content_type":"text/plain"}}}],"key":"FWPLI18Xwo"}],"key":"XYBPNcZHVe"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Assign Uncertainties","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"DxMjicBP3u"}],"identifier":"assign-uncertainties","label":"Assign Uncertainties","html_id":"assign-uncertainties","implicit":true,"key":"gR8ShMkl9H"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Inversion with SimPEG requires that we define the uncertainties on our data; that is, an estimate of the standard deviation of the noise on our data assuming it is uncorrelated Gaussian with zero mean. An online resource explaining uncertainties and their role in the inversion can be found ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"UEVNbLfLSV"},{"type":"link","url":"https://giftoolscookbook.readthedocs.io/en/latest/content/fundamentals/Uncertainties.html","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"here","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"NQTPBU6ltM"}],"urlSource":"https://giftoolscookbook.readthedocs.io/en/latest/content/fundamentals/Uncertainties.html","key":"xVXtivfTAW"},{"type":"text","value":".","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"n4STNmJBB8"}],"key":"EH5OGrtLIQ"},{"type":"paragraph","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"strong","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"For secondary voltage data,","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"kgTnwe7i0i"}],"key":"vZvV6kB9YS"},{"type":"text","value":" we generally apply a percent uncertainty and a very small floor uncertainty to all data. Differences in electrode spacing and subsurface conductivity result in secondary voltage IP data that span many orders of magnitude. A percent uncertainty ensures all data are fit equally. Depending on the quality of the data, we may choose a percent uncertainty between 2% - 10%. The floor uncertainty ensures stability when there are zero-crossings or erroneously small voltages.","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"kEeca7LvO8"}],"key":"WeKOOWmJyd"},{"type":"paragraph","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"strong","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"For apparent chargeability data,","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"EIVla0ABxL"}],"key":"RlfIrbyxI3"},{"type":"text","value":" we generally apply a floor uncertainty to all data. This is because apparent chargeability data is obtained by normalizing the secondary voltage defining the IP signature by the DC voltage. This effectively removes the influence of electrode spacing on the amplitude of the datum. Here, we apply a floor uncertainty of 5e-3 V/V to all data.","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"HcSfJSjMDN"}],"key":"B8VXTeK86v"}],"key":"myZ1p8zOl7"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2025-05-23T16:56:07.702003Z","iopub.status.busy":"2025-05-23T16:56:07.701694Z","iopub.status.idle":"2025-05-23T16:56:07.704993Z","shell.execute_reply":"2025-05-23T16:56:07.704485Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"ip_data.standard_deviation = 5e-3 * np.ones_like(ip_data.dobs)","key":"ppDUotzERw"},{"type":"output","id":"0k0B1NdVMrtlhgRVNrFPl","data":[],"key":"lt9wSHZu2I"}],"key":"mvTJflvYgD"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Design a (Tree) Mesh","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"s6jPwr16ZX"}],"identifier":"design-a-tree-mesh","label":"Design a (Tree) Mesh","html_id":"design-a-tree-mesh","implicit":true,"key":"MNvyUKqNJr"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"IP inversion is carried out on the same mesh that is used for DC resistivity inversion. Here, we reproduce the survey-based meshing approach that was used in the  ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"g9YHV7S488"},{"type":"link","url":"/inv-dcr-2d","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"2.5D Inversion of DC Resistivity Data","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"IamwIM9ceN"}],"urlSource":"../05-dcr/inv_dcr_2d.ipynb","dataUrl":"/inv-dcr-2d.json","internal":true,"protocol":"file","key":"NgYskndC9r"},{"type":"text","value":" tutorial. The best-practices for meshes design for DC/IP problems is provided in the ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"eQ3DchJ21U"},{"type":"link","url":"/fwd-dcr-2d","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"2.5D Forward Simulation of DC Resistivity Data","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"WQMp4BwgAC"}],"urlSource":"../05-dcr/fwd_dcr_2d.ipynb","dataUrl":"/fwd-dcr-2d.json","internal":true,"protocol":"file","key":"ayUmdvBf6d"},{"type":"text","value":" tutorial.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"T99gmkOiyW"}],"key":"lhv11X5TtL"},{"type":"paragraph","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"strong","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Tutorial mesh:","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"Z1anK2zfYM"}],"key":"pRmRmUXj0Z"},{"type":"text","value":" Here, a minimum cell width of 4 m (or 1/10 the minimum electrode spacing) is used within our survey region. The largest electrode spacing was 400 m, so a the padding was extended at least 1200 m from the survey region. Using the ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"hTScYOd2d9"},{"type":"link","url":"https://discretize.simpeg.xyz/en/main/api/generated/discretize.TreeMesh.refine_surface.html#discretize.treemesh.refine_surface","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"refine_surface","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"EIUDKVSMVi"}],"urlSource":"xref:discretize#discretize.TreeMesh.refine_surface","internal":false,"protocol":"xref:sphinx","key":"ztIYdhuaVI"},{"type":"text","value":" method, we refine the tree mesh where there is significant topography. And using the ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"yIG2pPCOL9"},{"type":"link","url":"https://discretize.simpeg.xyz/en/main/api/generated/discretize.TreeMesh.refine_points.html#discretize.treemesh.refine_points","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"refine_points","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"Lj03HB9NCz"}],"urlSource":"xref:discretize#discretize.TreeMesh.refine_points","internal":false,"protocol":"xref:sphinx","key":"rIVdf8Q1q4"},{"type":"text","value":" methods, we refine based on electrodes locations. Visit the ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"nbj3tkqROS"},{"type":"link","url":"https://discretize.simpeg.xyz/en/main/api/generated/discretize.TreeMesh.html#discretize.treemesh","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"tree mesh","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"KR6o6K2AkV"}],"urlSource":"xref:discretize#discretize.TreeMesh","internal":false,"protocol":"xref:sphinx","key":"LnNKo5goAe"},{"type":"text","value":" API to see additional refinement methods.","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"OzZyKYUTxb"}],"key":"sdsfPai9uF"}],"key":"F7RD19XXtN"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2025-05-23T16:56:07.708445Z","iopub.status.busy":"2025-05-23T16:56:07.708091Z","iopub.status.idle":"2025-05-23T16:56:07.748930Z","shell.execute_reply":"2025-05-23T16:56:07.748316Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"dh = 4  # base cell width\ndom_width_x = 3200.0  # domain width x\ndom_width_z = 2400.0  # domain width z\nnbcx = 2 ** int(np.round(np.log(dom_width_x / dh) / np.log(2.0)))  # num. base cells x\nnbcz = 2 ** int(np.round(np.log(dom_width_z / dh) / np.log(2.0)))  # num. base cells z\n\n# Define the base mesh with top at z = 0 m\nhx = [(dh, nbcx)]\nhz = [(dh, nbcz)]\nmesh = TreeMesh([hx, hz], x0=\"CN\", diagonal_balance=True)\n\n# Shift top to maximum topography\nmesh.origin = mesh.origin + np.r_[0.0, topo_2d[:, -1].max()]\n\n# Mesh refinement based on topography\nmesh.refine_surface(\n    topo_2d,\n    padding_cells_by_level=[0, 0, 4, 4],\n    finalize=False,\n)\n\n# Extract unique electrode locations.\nunique_locations = ip_data.survey.unique_electrode_locations\n\n# Mesh refinement near electrodes.\nmesh.refine_points(\n    unique_locations, padding_cells_by_level=[8, 12, 6, 6], finalize=False\n)\n\nmesh.finalize()","key":"JHbxgKFwrj"},{"type":"output","id":"eC4M-_XpYBvn5GebqRZ-M","data":[],"key":"BeH95iUuXk"}],"key":"aiYxZvIJEk"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Define the Active Cells","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"mLk3vliJh5"}],"identifier":"define-the-active-cells","label":"Define the Active Cells","html_id":"define-the-active-cells","implicit":true,"key":"MADEGGrtAv"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Use the ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"SjTIK4kwBw"},{"type":"link","url":"https://discretize.simpeg.xyz/en/main/api/generated/discretize.utils.active_from_xyz.html#discretize.utils.active_from_xyz","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"active_from_xyz","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"Wy5ha0C6nj"}],"urlSource":"xref:discretize#discretize.utils.active_from_xyz","internal":false,"protocol":"xref:sphinx","key":"Ipn3YU0nIY"},{"type":"text","value":" utility function to obtain the indices of the active mesh cells from topography (e.g. cells below surface).","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"uvtO0amJdV"}],"key":"rrC1ySmzld"}],"key":"r1angM2iIm"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2025-05-23T16:56:07.752228Z","iopub.status.busy":"2025-05-23T16:56:07.751918Z","iopub.status.idle":"2025-05-23T16:56:07.756352Z","shell.execute_reply":"2025-05-23T16:56:07.755844Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"# Indices of the active mesh cells from topography (e.g. cells below surface)\nactive_cells = active_from_xyz(mesh, topo_2d)\n\n# number of active cells\nn_active = np.sum(active_cells)","key":"BwxkH0UdLI"},{"type":"output","id":"CAYOtpT1Tf8SiTWjLQizN","data":[],"key":"KjEM9UuK8Y"}],"key":"CglwlvFeXD"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Project Electrodes to Discretized Topography","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"h9XAN6TsnV"}],"identifier":"project-electrodes-to-discretized-topography","label":"Project Electrodes to Discretized Topography","html_id":"project-electrodes-to-discretized-topography","implicit":true,"key":"lJa0J8iRyX"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Surface IP data will not be modeled accurately if the electrodes are modeled as living above or below the surface. It is especially problematic when electrodes are modeled as living in the air. Prior to inverting surface IP data, we must project the electrodes from their true elevation to the surface of the ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"yFpWQ1vPHv"},{"type":"emphasis","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"discretized","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"i3qStJABKb"}],"key":"TSOV8dA4qk"},{"type":"text","value":" topography. This is done using the ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"CyNnXVPK8Y"},{"type":"link","url":"https://docs.simpeg.xyz/latest/content/api/generated/simpeg.electromagnetics.static.resistivity.Survey.drape_electrodes_on_topography.html#simpeg.electromagnetics.static.resistivity.survey.drape_electrodes_on_topography","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"drape​_electrodes​_on​_topography","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"qHlyWxGncb"}],"urlSource":"xref:simpeg#simpeg.electromagnetics.static.resistivity.Survey.drape_electrodes_on_topography","internal":false,"protocol":"xref:sphinx","key":"PXfFIjV9Hg"},{"type":"text","value":" method.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"IbSc9fcNw8"}],"key":"EE6REIG2oP"}],"key":"bD91HvgEuM"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2025-05-23T16:56:07.759466Z","iopub.status.busy":"2025-05-23T16:56:07.759167Z","iopub.status.idle":"2025-05-23T16:56:07.764530Z","shell.execute_reply":"2025-05-23T16:56:07.763953Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"ip_data.survey.drape_electrodes_on_topography(mesh, active_cells, option=\"top\")","key":"yxB45cZiU6"},{"type":"output","id":"tR-rV7E3FGkSK-iJxxoPE","data":[],"key":"jBXLAH4ixF"}],"key":"DxbcnTCRh5"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Define the Background Conductivity/Resistivity","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"P1ReBMIwrz"}],"identifier":"define-the-background-conductivity-resistivity","label":"Define the Background Conductivity/Resistivity","html_id":"define-the-background-conductivity-resistivity","implicit":true,"key":"ZV9qNGhP5V"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"In order to invert IP data, we require the background conductivity/resistivity model. ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"Wnr3TCLZMt"},{"type":"strong","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"In practice,","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"ddGlMp1mq2"}],"key":"xwseEsXi8Q"},{"type":"text","value":" a conductivity/resistivity model is recovered by inverting DC resistivity data; see the ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"F9LO5KFjzV"},{"type":"link","url":"/inv-dcr-2d","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"2.5D Inversion of DC Resistivity Data","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"R0BAwKRWuO"}],"urlSource":"../05-dcr/inv_dcr_2d.ipynb","dataUrl":"/inv-dcr-2d.json","internal":true,"protocol":"file","key":"UgD8ZLUd5H"},{"type":"text","value":" tutorial. Since the conductivity/resistivity model greatly impacts the sensitivities for the IP problem, IP inversion is most successful when the recovered conductivity/resistivity model accurately characterizes the true subsurface distribution of electrical properties.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"c7pXJ27sa8"}],"key":"WFytCuCKml"},{"type":"paragraph","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"strong","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"For the tutorial,","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"DhV3YIyb6z"}],"key":"Yoapb6Qspw"},{"type":"text","value":" we will demonstrate the importance of using an appropriate background conductivity model for IP inversion. For our weighted least-squares inversion approach, we use a halfspace as the background conductivity model. For the iteratively re-weighted least-squares inversion approach, we use the true subsurface conductivity model. In both cases, the model is defined on the active mesh cells, and we must use the ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"Eg67N8bPkX"},{"type":"link","url":"https://docs.simpeg.xyz/latest/content/api/generated/simpeg.maps.InjectActiveCells.html#simpeg.maps.injectactivecells","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"simpeg​.maps​.InjectActiveCells","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"R4ceenoSYK"}],"urlSource":"xref:simpeg#simpeg.maps.InjectActiveCells","internal":false,"protocol":"xref:sphinx","key":"RPklNRs1Ru"},{"type":"text","value":" mapping to map from the model space to the conductivities on the entire mesh.","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"GO5Vt29g98"}],"key":"ZWz7fPx5OI"}],"key":"ru0STWAvgk"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2025-05-23T16:56:07.766805Z","iopub.status.busy":"2025-05-23T16:56:07.766599Z","iopub.status.idle":"2025-05-23T16:56:07.769735Z","shell.execute_reply":"2025-05-23T16:56:07.769223Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"# Define electrical conductivities in S/m\nair_conductivity = 1e-8\nbackground_conductivity = 1e-2\nconductor_conductivity = 1e-1\nresistor_conductivity = 1e-3","key":"vW1NpnbnEo"},{"type":"output","id":"_xDKvWoFzJDM_q-mmMu1a","data":[],"key":"xngR11OBXK"}],"key":"uXbZOUN3c0"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2025-05-23T16:56:07.772399Z","iopub.status.busy":"2025-05-23T16:56:07.772115Z","iopub.status.idle":"2025-05-23T16:56:07.777108Z","shell.execute_reply":"2025-05-23T16:56:07.776531Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"# Define halfspace conductivity model\nhalfspace_conductivity_model = background_conductivity * np.ones(n_active)\n\n# Define true conductivit model\ntrue_conductivity_model = halfspace_conductivity_model.copy()\n\nind_conductor = model_builder.get_indices_sphere(\n    np.r_[-120.0, 40.0], 60.0, mesh.cell_centers[active_cells, :]\n)\ntrue_conductivity_model[ind_conductor] = conductor_conductivity\n\nind_resistor = model_builder.get_indices_sphere(\n    np.r_[120.0, 72.0], 60.0, mesh.cell_centers[active_cells, :]\n)\ntrue_conductivity_model[ind_resistor] = resistor_conductivity","key":"XRsk5rdand"},{"type":"output","id":"YJ7FaDN9_lnLec853gEvf","data":[],"key":"DHyLkeQHTP"}],"key":"ysMbyyHQfr"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2025-05-23T16:56:07.779791Z","iopub.status.busy":"2025-05-23T16:56:07.779536Z","iopub.status.idle":"2025-05-23T16:56:07.784367Z","shell.execute_reply":"2025-05-23T16:56:07.783757Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"# Mapping from conductivity model to conductivity on all cells\nconductivity_map = maps.InjectActiveCells(mesh, active_cells, air_conductivity)","key":"wuNzi0mz7Q"},{"type":"output","id":"R6UUh210MSUOmt4lan0ZW","data":[],"key":"RdOJ3DkntA"}],"key":"DeRXwOHOqf"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2025-05-23T16:56:07.786949Z","iopub.status.busy":"2025-05-23T16:56:07.786684Z","iopub.status.idle":"2025-05-23T16:56:07.791240Z","shell.execute_reply":"2025-05-23T16:56:07.790674Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"# Mapping to neglect air cells in plot\nplotting_map = maps.InjectActiveCells(mesh, active_cells, np.nan)","key":"YHUmAxJx8m"},{"type":"output","id":"KO180yHkV1Mwmb1_h7cMA","data":[],"key":"dr92eEk4Dg"}],"key":"tjA9a1olr3"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2025-05-23T16:56:07.794239Z","iopub.status.busy":"2025-05-23T16:56:07.793920Z","iopub.status.idle":"2025-05-23T16:56:08.169712Z","shell.execute_reply":"2025-05-23T16:56:08.169132Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"fig = plt.figure(figsize=(9, 4))\n\nnorm = LogNorm(vmin=1e-3, vmax=1e-1)\n\nax1 = fig.add_axes([0.14, 0.17, 0.68, 0.7])\nmesh.plot_image(\n    plotting_map * true_conductivity_model,\n    ax=ax1,\n    grid=False,\n    pcolor_opts={\"norm\": norm, \"cmap\": mpl.cm.RdYlBu_r},\n)\nax1.set_xlim(-500, 500)\nax1.set_ylim(-300, 200)\nax1.set_title(\"True Background Conductivity\")\nax1.set_xlabel(\"x (m)\")\nax1.set_ylabel(\"z (m)\")\n\nax2 = fig.add_axes([0.84, 0.17, 0.03, 0.7])\ncbar = mpl.colorbar.ColorbarBase(\n    ax2, norm=norm, orientation=\"vertical\", cmap=mpl.cm.RdYlBu_r\n)\ncbar.set_label(r\"$\\sigma$ (S/m)\", rotation=270, labelpad=15, size=12)\n\nplt.show()","key":"Y4P8A3VraO"},{"type":"output","id":"nrY7ZnhXAw-1VjDAv6v0q","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"9814b8d2247f14a182108b74fbdf58e6","path":"/user-tutorials/build/9814b8d2247f14a182108b74fbdf58e6.png"},"text/plain":{"content":"<Figure size 900x400 with 2 Axes>","content_type":"text/plain"}}}],"key":"DI4Ywu80YS"}],"key":"G2K7OpMiLT"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Weighted Least-Squares Inversion","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"TdfVt3omfX"}],"identifier":"weighted-least-squares-inversion","label":"Weighted Least-Squares Inversion","html_id":"weighted-least-squares-inversion","implicit":true,"key":"Nz0rWk5reu"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Here, a weighted least-squares inversion approach is used to apparent chargeability data to recover an intrinsic chargeability model.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"oSBNz7M6dX"}],"key":"ZWQiNu9Tnx"}],"key":"UbotAxbD2c"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Mapping from the Model to the Mesh","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"AAEBzhZkBF"}],"identifier":"mapping-from-the-model-to-the-mesh","label":"Mapping from the Model to the Mesh","html_id":"mapping-from-the-model-to-the-mesh","implicit":true,"key":"gdz2lxK2Kw"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"In SimPEG, the term ‘model’ is not synonymous with the physical property values defined on the mesh. For whatever model we choose, we must define a mapping from the set of model parameters (a ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"Hc0kHZW2Kk"},{"type":"link","url":"https://numpy.org/doc/stable/reference/generated/numpy.ndarray.html#numpy.ndarray","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"1D numpy.ndarray","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"KrZKdBQ0TY"}],"urlSource":"xref:numpy#numpy.ndarray","internal":false,"protocol":"xref:sphinx","key":"Xhz8Bj4zH1"},{"type":"text","value":") to the physical property values of all cells in the mesh. Mappings are created using the ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"lf0pRgYXqZ"},{"type":"link","url":"https://docs.simpeg.xyz/latest/content/api/generated/simpeg.maps.IdentityMap.html#simpeg.maps.identitymap","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"simpeg.maps","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"nM1Wg0on8l"}],"urlSource":"xref:simpeg#simpeg.maps.IdentityMap","internal":false,"protocol":"xref:sphinx","key":"ZI1VHqOn2y"},{"type":"text","value":" module.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"or0msY7dF3"}],"key":"BfNdwbH7vl"},{"type":"paragraph","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"SimPEG uses a linearized formulation for simulating IP data; see ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"X0nIOn824p"},{"type":"link","url":"https://docs.simpeg.xyz/latest/content/api/generated/simpeg.electromagnetics.static.induced_polarization.Simulation2DCellCentered.html#simpeg.electromagnetics.static.induced_polarization.simulation2dcellcentered","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Simulation2DCellCentered","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"wONEDA47QD"}],"urlSource":"xref:simpeg#simpeg.electromagnetics.static.induced_polarization.Simulation2DCellCentered","internal":false,"protocol":"xref:sphinx","key":"q2WdM54xo3"},{"type":"text","value":" or ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"OEmo23QRiv"},{"type":"link","url":"https://docs.simpeg.xyz/latest/content/api/generated/simpeg.electromagnetics.static.induced_polarization.Simulation2DNodal.html#simpeg.electromagnetics.static.induced_polarization.simulation2dnodal","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Simulation2DNodal","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"fN9lK8gJBJ"}],"urlSource":"xref:simpeg#simpeg.electromagnetics.static.induced_polarization.Simulation2DNodal","internal":false,"protocol":"xref:sphinx","key":"I1iJgpYMmd"},{"type":"text","value":". In this formulation, any standard definition of the chargeability can be inverted. And the units of the recovered chargeability values is the same as the data units; e.g. intrinsic chargeability (V/V or mV/V) or integrated chargeability (ms). If you are inverting secondary voltages however, the chargeability model must represent intrinsic chargeabilities (","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"moUNtXHb8l"},{"type":"inlineMath","value":"0 \\leq \\eta \\leq 1","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>0</mn><mo>≤</mo><mi>η</mi><mo>≤</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">0 \\leq \\eta \\leq 1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7804em;vertical-align:-0.136em;\"></span><span class=\"mord\">0</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8304em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">η</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1</span></span></span></span>","key":"MGMxILUdqp"},{"type":"text","value":") in V/V.","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"jYf70lzwUv"}],"key":"wV7ilphnnU"},{"type":"paragraph","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"strong","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"In this tutorial,","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"rdyJeN3SeF"}],"key":"Lsi3piMnMi"},{"type":"text","value":" the model parameters are the subsurface chargeabilities (","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"VMa4ocpxdr"},{"type":"inlineMath","value":"0 \\leq \\eta \\leq 1","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>0</mn><mo>≤</mo><mi>η</mi><mo>≤</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">0 \\leq \\eta \\leq 1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7804em;vertical-align:-0.136em;\"></span><span class=\"mord\">0</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8304em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">η</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1</span></span></span></span>","key":"DaucKOeFb0"},{"type":"text","value":") in V/V. We use the ","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"S89c7vsA39"},{"type":"link","url":"https://docs.simpeg.xyz/latest/content/api/generated/simpeg.maps.InjectActiveCells.html#simpeg.maps.injectactivecells","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"simpeg​.maps​.InjectActiveCells","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"PLT47yD6b2"}],"urlSource":"xref:simpeg#simpeg.maps.InjectActiveCells","internal":false,"protocol":"xref:sphinx","key":"U9nEAs2DkT"},{"type":"text","value":" map to project the active cell chargeabilities to the entire mesh.","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"oxJtKHHOYR"}],"key":"cT9bOmFEEV"}],"key":"FX6Vwf1FmJ"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2025-05-23T16:56:08.173277Z","iopub.status.busy":"2025-05-23T16:56:08.173048Z","iopub.status.idle":"2025-05-23T16:56:08.177016Z","shell.execute_reply":"2025-05-23T16:56:08.176516Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"chargeability_map = maps.InjectActiveCells(mesh, active_cells, 0.0)","key":"C12NPP5qSL"},{"type":"output","id":"VihPRbvTRpOegb0-eyBo1","data":[],"key":"wGFsaz46Or"}],"key":"cV6tYQh1MI"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Starting and Reference Models for IP Inversion","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"f0I76uG3Wx"}],"identifier":"starting-and-reference-models-for-ip-inversion","label":"Starting and Reference Models for IP Inversion","html_id":"starting-and-reference-models-for-ip-inversion","implicit":true,"key":"cA07jUEIhz"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Here, we would create starting and/or reference models for the IP inversion as well as the mapping from the model space to the active cells. Starting and reference models can be a constant background value or contain a-priori structures. Here, the starting model is the 1e-6 V/V. It should be noted that the starting model ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"I2LxhDhCAC"},{"type":"strong","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"cannot be vector of zeros,","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"xyvMek7TrP"}],"key":"AhoyTfWjuw"},{"type":"text","value":" otherwise the inversion will be unable to compute a gradient direction at the first iteration.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"Ud5JRHrKAt"}],"key":"XIPzBjd53p"}],"key":"W2oWgX5Q4B"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2025-05-23T16:56:08.180280Z","iopub.status.busy":"2025-05-23T16:56:08.179942Z","iopub.status.idle":"2025-05-23T16:56:08.183763Z","shell.execute_reply":"2025-05-23T16:56:08.182983Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"# Create starting model from log-conductivity\nstarting_chargeability_model = 1e-6 * np.ones(n_active)\n\n# Zero reference conductivity model\nreference_chargeability_model = np.zeros_like(starting_chargeability_model)","key":"VoK3ltC1bc"},{"type":"output","id":"NnADvf5omPCPZWelcgCrL","data":[],"key":"f64gFO4wDA"}],"key":"FwmJPXzsCz"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Define the Forward Simulation","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"uBzE75Aui5"}],"identifier":"define-the-forward-simulation","label":"Define the Forward Simulation","html_id":"define-the-forward-simulation","implicit":true,"key":"jzPR8cD3J3"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"A simulation object defining the forward problem is required in order to predict data and calculate misfits for recovered models. A comprehensive description of the simulation object for 2.5D IP was discussed in the ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"edQqih5swi"},{"type":"link","url":"fwd_dcip_2d.ipynb","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"2.5D IP Forward Simulation","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"QKOv4Xlojz"}],"urlSource":"fwd_dcip_2d.ipynb","key":"nAo62YKGlg"},{"type":"text","value":" tutorial. Here, we use the ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"P7ezhyFKLL"},{"type":"link","url":"https://docs.simpeg.xyz/latest/content/api/generated/simpeg.electromagnetics.static.induced_polarization.Simulation2DNodal.html#simpeg.electromagnetics.static.induced_polarization.simulation2dnodal","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Simulation2DNodal","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"aC70dmdXj2"}],"urlSource":"xref:simpeg#simpeg.electromagnetics.static.induced_polarization.Simulation2DNodal","internal":false,"protocol":"xref:sphinx","key":"YBp4oQ0V9B"},{"type":"text","value":" simulation which solves for the electric potential on mesh nodes.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"FCiHrvqITY"}],"key":"lINSQVyZub"},{"type":"paragraph","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Since we are using a background ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"Fwtf95d8h8"},{"type":"emphasis","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"conductivity","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"DKzy14KfEe"}],"key":"NuEVRCc9Kx"},{"type":"text","value":" model, we use ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"a0DqTfAjGJ"},{"type":"inlineCode","value":"sigma","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"q9qG07nyIG"},{"type":"text","value":" to define the background conductivity on the entire mesh. Because the IP problem has been linearized, we store the sensitivities for the inversion using ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"vWNtGs24p1"},{"type":"inlineCode","value":"storeJ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"nuTYWwhO62"},{"type":"text","value":".","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"cTC5keBkgE"}],"key":"uQ2wrlbmOn"}],"key":"slmYt7AYSC"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2025-05-23T16:56:08.186276Z","iopub.status.busy":"2025-05-23T16:56:08.185951Z","iopub.status.idle":"2025-05-23T16:56:08.635219Z","shell.execute_reply":"2025-05-23T16:56:08.634484Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"simulation_L2 = ip.Simulation2DNodal(\n    mesh,\n    survey=ip_data.survey,\n    sigma=conductivity_map * halfspace_conductivity_model,\n    etaMap=chargeability_map,\n    storeJ=True,\n)","key":"VdpHse2MfA"},{"type":"output","id":"jdcZidxpScvTDJqwnCfYm","data":[],"key":"SEA0bDCw8I"}],"key":"Q7b45wTmb9"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Define the Data Misfit","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"LptKQmqdtC"}],"identifier":"define-the-data-misfit","label":"Define the Data Misfit","html_id":"define-the-data-misfit","implicit":true,"key":"P7SJ4VQfd2"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"To understand the role of the data misfit in the inversion, please visit ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"XhqKL23KAf"},{"type":"link","url":"https://giftoolscookbook.readthedocs.io/en/latest/content/fundamentals/Uncertainties.html","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"this online resource","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"iedrbwBDl3"}],"urlSource":"https://giftoolscookbook.readthedocs.io/en/latest/content/fundamentals/Uncertainties.html","key":"PeeyB4PiqT"},{"type":"text","value":".\nHere, we use the ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"Sz5T0HXsZi"},{"type":"link","url":"https://docs.simpeg.xyz/latest/content/api/generated/simpeg.data_misfit.L2DataMisfit.html#simpeg.data_misfit.l2datamisfit","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"L2DataMisfit","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"o0EVV6bn9l"}],"urlSource":"xref:simpeg#simpeg.data_misfit.L2DataMisfit","internal":false,"protocol":"xref:sphinx","key":"LmWGXCVPhd"},{"type":"text","value":" class to define the data misfit. In this case, the data misfit is the L2 norm of the weighted residual between the observed data and the data predicted for a given model. When instantiating the data misfit object within SimPEG, we must assign an appropriate ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"lvK9Nie4wl"},{"type":"emphasis","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"data object","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"lRPxeBvscF"}],"key":"vXEd68PTit"},{"type":"text","value":" and ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"YUykTX0wit"},{"type":"emphasis","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"simulation object","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"isidu1apcx"}],"key":"kOwIh0sKWr"},{"type":"text","value":" as properties.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"zbFPNGLQzk"}],"key":"qzm6TUqNfY"}],"key":"uiEKlGy9kr"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2025-05-23T16:56:08.638534Z","iopub.status.busy":"2025-05-23T16:56:08.638230Z","iopub.status.idle":"2025-05-23T16:56:08.641427Z","shell.execute_reply":"2025-05-23T16:56:08.640921Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"dmis_L2 = data_misfit.L2DataMisfit(simulation=simulation_L2, data=ip_data)","key":"UctVz5RQdc"},{"type":"output","id":"GZ0ThgmtgvI3q2UhhV2x2","data":[],"key":"ouvpls7ExM"}],"key":"JYsoDW4MlV"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Define the Regularization","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"GPhmyAeZsi"}],"identifier":"define-the-regularization","label":"Define the Regularization","html_id":"define-the-regularization","implicit":true,"key":"wv2aAmiiDM"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"To understand the role of the regularization in the inversion, please visit ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"RZw4K8DD67"},{"type":"link","url":"https://giftoolscookbook.readthedocs.io/en/latest/content/fundamentals/ObjectiveFunction.html","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"this online resource","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"OcW1qoJ1wR"}],"urlSource":"https://giftoolscookbook.readthedocs.io/en/latest/content/fundamentals/ObjectiveFunction.html","key":"DMrcF8JqxF"},{"type":"text","value":". Here, we use the ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"gGyqTGjIfG"},{"type":"link","url":"https://docs.simpeg.xyz/latest/content/api/generated/simpeg.regularization.WeightedLeastSquares.html#simpeg.regularization.weightedleastsquares","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"WeightedLeastSquares","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"vyv3mE6Fb5"}],"urlSource":"xref:simpeg#simpeg.regularization.WeightedLeastSquares","internal":false,"protocol":"xref:sphinx","key":"hSvE1m2P9h"},{"type":"text","value":" regularization class to constrain the inversion result. Length scales along x and y are used to balance the smallness and smoothness terms. Here, length scales of 5 are used to emphasize more smoothness in the recovered model. The reference model is only applied to the smallness term.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"gghr6v0TYA"}],"key":"N5jNPDY0zh"},{"type":"paragraph","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"By default, the regularization acts on the model parameters; which in the case are the chargeabilities of the active cells. So we need to specify which cells are active in the regularization. And if we wanted to apply the regularization to a function of the model parameters, we would need to set an approprate mapping object using the ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"fSESEt56kI"},{"type":"inlineCode","value":"mapping","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"Ah4wvFSt9K"},{"type":"text","value":" keyword argument.","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"AHEieJUbU8"}],"key":"hp7XLvx6pj"}],"key":"GJXI7QuSDN"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2025-05-23T16:56:08.644686Z","iopub.status.busy":"2025-05-23T16:56:08.644401Z","iopub.status.idle":"2025-05-23T16:56:08.676783Z","shell.execute_reply":"2025-05-23T16:56:08.676139Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"reg_L2 = regularization.WeightedLeastSquares(\n    mesh,\n    active_cells=active_cells,\n    length_scale_x=5.0,\n    length_scale_y=5.0,\n    reference_model=reference_chargeability_model,\n    reference_model_in_smooth=False,\n)","key":"IGqbQmeov4"},{"type":"output","id":"yTFjhLfkDNaEe3oXxUh5U","data":[],"key":"xiLDafzCzo"}],"key":"YRTIP9OaRd"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Define the Optimization Algorithm","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"rJRT0W6AUZ"}],"identifier":"define-the-optimization-algorithm","label":"Define the Optimization Algorithm","html_id":"define-the-optimization-algorithm","implicit":true,"key":"Y9dsGHX5hK"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Here, we use the ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"mUeFS3Z0iK"},{"type":"link","url":"https://docs.simpeg.xyz/latest/content/api/generated/simpeg.optimization.ProjectedGNCG.html#simpeg.optimization.projectedgncg","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"ProjectedGNCG","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"zwBbVvqRDL"}],"urlSource":"xref:simpeg#simpeg.optimization.ProjectedGNCG","internal":false,"protocol":"xref:sphinx","key":"jXkpfq0iL5"},{"type":"text","value":" class to solve the optimization problem using projected Gauss-Newton with conjugate gradietn solver. Reasonable default values have generally been set for the properties of each optimization class. However, the user may choose to set custom values; e.g. the accuracy tolerance for the conjugate gradient solver or the number of line searches. Here, the ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"MlNqlXcYzo"},{"type":"inlineCode","value":"lower","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"RZkCKq3Jz7"},{"type":"text","value":" property is set to 0 to ensure recovered chargeability values are positive.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"ooWYOLGFCi"}],"key":"qOCVJmRTGb"}],"key":"YubnA78dUk"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2025-05-23T16:56:08.679272Z","iopub.status.busy":"2025-05-23T16:56:08.679057Z","iopub.status.idle":"2025-05-23T16:56:08.682623Z","shell.execute_reply":"2025-05-23T16:56:08.682032Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"opt_L2 = optimization.ProjectedGNCG(\n    maxIter=40, lower=0.0, maxIterLS=20, maxIterCG=20, tolCG=1e-2\n)","key":"fnCnkKaRz3"},{"type":"output","id":"301JVNXXnO0NGPnlci9r1","data":[],"key":"xj93STDfPo"}],"key":"B8Dm0h6hZ2"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Define the Inverse Problem","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"xQPYJZsjii"}],"identifier":"define-the-inverse-problem","label":"Define the Inverse Problem","html_id":"define-the-inverse-problem","implicit":true,"key":"juJfn4BvI8"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"We use the ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"wmTnfiENYb"},{"type":"link","url":"https://docs.simpeg.xyz/latest/content/api/generated/simpeg.inverse_problem.BaseInvProblem.html#simpeg.inverse_problem.baseinvproblem","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"BaseInvProblem","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"uawyJWEgjm"}],"urlSource":"xref:simpeg#simpeg.inverse_problem.BaseInvProblem","internal":false,"protocol":"xref:sphinx","key":"ybxLrzT8Ra"},{"type":"text","value":" class to fully define the inverse problem that is solved at each beta (trade-off parameter) iteration. The inverse problem requires appropriate ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"XSISyH2cbl"},{"type":"emphasis","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"data misfit","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"AUvTtsdFVz"}],"key":"kstMudgW3H"},{"type":"text","value":", ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"lWxbvFYBBD"},{"type":"emphasis","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"regularization","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"pbixUnwl9W"}],"key":"C4JroGtNSw"},{"type":"text","value":" and ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"H53tjOMZf7"},{"type":"emphasis","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"optimization","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"EL1G1ShaJO"}],"key":"G8ZNCM3MwZ"},{"type":"text","value":" objects.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"n13d2Wa8zJ"}],"key":"l3x0f78AMK"}],"key":"UlCDnDykAi"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2025-05-23T16:56:08.685672Z","iopub.status.busy":"2025-05-23T16:56:08.685381Z","iopub.status.idle":"2025-05-23T16:56:08.688480Z","shell.execute_reply":"2025-05-23T16:56:08.687972Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"inv_prob_L2 = inverse_problem.BaseInvProblem(dmis_L2, reg_L2, opt_L2)","key":"jfI5FCEiBD"},{"type":"output","id":"2R6vaRB9d7yLIAlCiVVSK","data":[],"key":"QK40OCW34a"}],"key":"rpqDZQjNWx"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Provide Inversion Directives","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"UzzWDKhEZn"}],"identifier":"provide-inversion-directives","label":"Provide Inversion Directives","html_id":"provide-inversion-directives","implicit":true,"key":"DnvR9hzNXh"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Directives represent operations that are applied while the inversion is running. Here, we apply common directives for weighted least-squares inversion of IP data and describe their roles. These are:","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"nDuL3h12Qq"}],"key":"cIldnvMSxW"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":5,"column":1},"end":{"line":15,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":5,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"paragraph","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"link","url":"https://docs.simpeg.xyz/latest/content/api/generated/simpeg.directives.UpdateSensitivityWeights.html#simpeg.directives.updatesensitivityweights","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"UpdateSensitivityWeights","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"QX3JhKZamI"}],"urlSource":"xref:simpeg#simpeg.directives.UpdateSensitivityWeights","internal":false,"protocol":"xref:sphinx","key":"pZjBntbeg3"},{"type":"text","value":": Apply sensitivity weighting to counteract the natural tendency of IP inversion to place materials near the electrodes. Since the IP problem has been linearized, we do not need to update the sensitivities and we set ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"f9iCaZn4rb"},{"type":"inlineCode","value":"every_iteration=False","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"k6QRBJXIlO"},{"type":"text","value":". For IP inversion, we do not want to use the entire dynamic range of the sensitivities to generate our weighting. So we generally set ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"mqq7KB4HyT"},{"type":"inlineCode","value":"threshold_value","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"ovJJEiWnuK"},{"type":"text","value":" to a value betwewen 1e-4 and 1e-1.","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"EzUOWWtB2k"}],"key":"DYGXamN4UE"}],"key":"iUVcioFFwZ"},{"type":"listItem","spread":true,"position":{"start":{"line":7,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"paragraph","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"link","url":"https://docs.simpeg.xyz/latest/content/api/generated/simpeg.directives.UpdatePreconditioner.html#simpeg.directives.updatepreconditioner","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"UpdatePreconditioner","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"pQIHP8I1Ci"}],"urlSource":"xref:simpeg#simpeg.directives.UpdatePreconditioner","internal":false,"protocol":"xref:sphinx","key":"f7F6xg4BuL"},{"type":"text","value":": Apply Jacobi preconditioner when solving optimization problem to reduce the number of conjugate gradient iterations. We set ","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"lJkPo5UhMn"},{"type":"inlineCode","value":"update_every_iteration=False","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"oc5Dv5DKAX"},{"type":"text","value":" because the ideal preconditioner because the forward problem and regularization are not model-dependent.","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"YTSVbqdFDA"}],"key":"O0EwMmQLi5"}],"key":"yZJSmsXhvf"},{"type":"listItem","spread":true,"position":{"start":{"line":9,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"paragraph","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"link","url":"https://docs.simpeg.xyz/latest/content/api/generated/simpeg.directives.BetaEstimate_ByEig.html#simpeg.directives.betaestimate_byeig","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"BetaEstimate_ByEig","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"ZqT6WDYYzo"}],"urlSource":"xref:simpeg#simpeg.directives.BetaEstimate_ByEig","internal":false,"protocol":"xref:sphinx","key":"hhNFthFy5r"},{"type":"text","value":": Compute and set starting trade-off parameter (beta) based on largest eigenvalues.","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"whPV8mqkDr"}],"key":"swt2p5kCuo"}],"key":"DL2mgEbfhJ"},{"type":"listItem","spread":true,"position":{"start":{"line":11,"column":1},"end":{"line":12,"column":1}},"children":[{"type":"paragraph","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"children":[{"type":"link","url":"https://docs.simpeg.xyz/latest/content/api/generated/simpeg.directives.BetaSchedule.html#simpeg.directives.betaschedule","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"children":[{"type":"text","value":"BetaSchedule","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"yWZwHFHaMJ"}],"urlSource":"xref:simpeg#simpeg.directives.BetaSchedule","internal":false,"protocol":"xref:sphinx","key":"oHlQwrdfJZ"},{"type":"text","value":": Size reduction of the trade-off parameter at every beta iteration, and the number of Gauss-Newton iterations for each beta. In general, a ","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"Grj55LL60d"},{"type":"inlineCode","value":"coolingFactor","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"DuwmfdfLYZ"},{"type":"text","value":" between 1.5 and 2.5, and ","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"uob2LNDEM1"},{"type":"inlineCode","value":"coolingRate","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"XHoALRPbM3"},{"type":"text","value":" of 2 or 3 works well for DC resistivity inversion. Cooling beta too quickly will result in portions of the model getting trapped in local minima. And we will not be finding the solution that minimizes the optimization problem if the cooling rate is too small.","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"LXM7yzSCH9"}],"key":"QEjlKgQNWj"}],"key":"s6YGEA0H7K"},{"type":"listItem","spread":true,"position":{"start":{"line":13,"column":1},"end":{"line":15,"column":1}},"children":[{"type":"paragraph","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"children":[{"type":"link","url":"https://docs.simpeg.xyz/latest/content/api/generated/simpeg.directives.TargetMisfit.html#simpeg.directives.targetmisfit","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"children":[{"type":"text","value":"TargetMisfit","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"key":"qxL98gyo2R"}],"urlSource":"xref:simpeg#simpeg.directives.TargetMisfit","internal":false,"protocol":"xref:sphinx","key":"IXL7fPhjRH"},{"type":"text","value":": Terminates the inversion when the data misfit equals the target misfit. A ","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"key":"vW3ScpiA0r"},{"type":"inlineCode","value":"chifact=1","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"key":"EcJZ3Odh4L"},{"type":"text","value":" terminates the inversion when the data misfit equals the number of data.","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"key":"bhspIo0po3"}],"key":"EgtG4Hq2Wi"}],"key":"GUjPP9I9Gh"}],"key":"ZvdlvCISQI"},{"type":"paragraph","position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"children":[{"type":"text","value":"The directive objects are organized in a ","position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"key":"boSe7lMZvq"},{"type":"inlineCode","value":"list","position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"key":"gKqX1JytZD"},{"type":"text","value":". Upon starting the inversion or updating the recovered model at each iteration, the inversion will call each directive within the list ","position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"key":"rb2A8w2kVq"},{"type":"strong","position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"children":[{"type":"text","value":"in order","position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"key":"pgJqfCOYYd"}],"key":"Luzirxcg1W"},{"type":"text","value":". The order of the directives matters, and SimPEG will throw an error if directives are organized into an improper order. Some directives, like the ","position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"key":"ta60VLy6UG"},{"type":"inlineCode","value":"BetaEstimate_ByEig","position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"key":"EXIyaDvOn7"},{"type":"text","value":" are only used when starting the inversion. Other directives, like ","position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"key":"wXjjnNL8fE"},{"type":"inlineCode","value":"UpdatePreconditionner","position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"key":"fKQDjmfxkX"},{"type":"text","value":", are used whenever the model is updated.","position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"key":"yIYpCCD9eJ"}],"key":"O4aAOcleC8"}],"key":"qDWKz3557t"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2025-05-23T16:56:08.691547Z","iopub.status.busy":"2025-05-23T16:56:08.691116Z","iopub.status.idle":"2025-05-23T16:56:08.696219Z","shell.execute_reply":"2025-05-23T16:56:08.695462Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"sensitivity_weights = directives.UpdateSensitivityWeights(\n    every_iteration=False, threshold_value=1e-2\n)\nupdate_jacobi = directives.UpdatePreconditioner(update_every_iteration=False)\nstarting_beta = directives.BetaEstimate_ByEig(beta0_ratio=20)\nbeta_schedule = directives.BetaSchedule(coolingFactor=2.0, coolingRate=2)\ntarget_misfit = directives.TargetMisfit(chifact=1.0)\n\ndirectives_list_L2 = [\n    sensitivity_weights,\n    update_jacobi,\n    starting_beta,\n    beta_schedule,\n    target_misfit,\n]","key":"Y7ml4NRcXO"},{"type":"output","id":"y-oBlWJ8rgi4_MklnkBi4","data":[],"key":"zFyxQA8sSG"}],"key":"DwIXW5mYU1"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Define and Run the Inversion","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"lb7jfeXGaf"}],"identifier":"define-and-run-the-inversion","label":"Define and Run the Inversion","html_id":"define-and-run-the-inversion","implicit":true,"key":"DihU9VmXTv"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"We define the inversion using the ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"kVyWJryApx"},{"type":"link","url":"https://docs.simpeg.xyz/latest/content/api/generated/simpeg.inversion.BaseInversion.html#simpeg.inversion.baseinversion","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"BaseInversion","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"iMYk9hHstL"}],"urlSource":"xref:simpeg#simpeg.inversion.BaseInversion","internal":false,"protocol":"xref:sphinx","key":"Ge2nqnJ2UH"},{"type":"text","value":" class. The inversion class must be instantiated with an appropriate ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"cwFGHFx3UG"},{"type":"emphasis","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"inverse problem","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"UrfAiC1545"}],"key":"OKegDjjzFb"},{"type":"text","value":" object and ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"wx1IFs4FOo"},{"type":"emphasis","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"directives list","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"TVUoOPCsFO"}],"key":"nG9Q07ttAs"},{"type":"text","value":". The ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"UdjaWbBYKi"},{"type":"inlineCode","value":"run","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"nklJjbfX4S"},{"type":"text","value":" method, along with a starting model, is respondible for running the inversion. The output is a 1D numpy.ndarray containing the recovered model parameters","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"riyqMtrmZG"}],"key":"JEi0NQPd6l"}],"key":"trNdDyzJrq"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2025-05-23T16:56:08.698793Z","iopub.status.busy":"2025-05-23T16:56:08.698516Z","iopub.status.idle":"2025-05-23T16:56:23.751615Z","shell.execute_reply":"2025-05-23T16:56:23.750885Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"# Here we combine the inverse problem and the set of directives\ninv_L2 = inversion.BaseInversion(inv_prob_L2, directives_list_L2)\n\n# Run the inversion\n# recovered_model_L2 = inv_L2.run(np.log(0.01) * np.ones(n_param))\nrecovered_chargeability_L2 = inv_L2.run(starting_chargeability_model)","key":"jeUauCh1Gq"},{"type":"output","id":"HVHzDvcym3RelJpT1uypl","data":[{"name":"stdout","output_type":"stream","text":"\nRunning inversion with SimPEG v0.24.0\n\n                        simpeg.InvProblem is setting bfgsH0 to the inverse of the eval2Deriv.\n                        ***Done using same Solver, and solver_opts as the Simulation2DNodal problem***\n                        \n"},{"name":"stderr","output_type":"stream","text":"/t40array/ssoler/miniforge3/envs/simpeg-user-tutorials/lib/python3.12/site-packages/simpeg/base/pde_simulation.py:490: DefaultSolverWarning: Using the default solver: Pardiso. \n\nIf you would like to suppress this notification, add \nwarnings.filterwarnings('ignore', simpeg.utils.solver_utils.DefaultSolverWarning)\n to your script.\n  return get_default_solver(warn=True)\n/t40array/ssoler/miniforge3/envs/simpeg-user-tutorials/lib/python3.12/site-packages/simpeg/electromagnetics/static/resistivity/simulation_2d.py:768: RuntimeWarning: invalid value encountered in divide\n  r_hat = r_vec / r[:, None]\n/t40array/ssoler/miniforge3/envs/simpeg-user-tutorials/lib/python3.12/site-packages/simpeg/electromagnetics/static/resistivity/simulation_2d.py:795: RuntimeWarning: invalid value encountered in divide\n  alpha[not_top] = (ky * k1e(ky * r) / k0e(ky * r) * r_dot_n)[not_top]\n"},{"name":"stderr","output_type":"stream","text":"/t40array/ssoler/miniforge3/envs/simpeg-user-tutorials/lib/python3.12/site-packages/pymatsolver/solvers.py:415: FutureWarning: In Future pymatsolver v0.4.0, passing a vector of shape (n, 1) to the solve method will return an array with shape (n, 1), instead of always returning a flattened array. This is to be consistent with numpy.linalg.solve broadcasting.\n  return self.solve(val)\n"},{"name":"stdout","output_type":"stream","text":"model has any nan: 0\n=============================== Projected GNCG ===============================\n  #     beta     phi_d     phi_m       f      |proj(x-g)-x|  LS    Comment   \n-----------------------------------------------------------------------------\nx0 has any nan: 0\n   0  7.59e+01  4.04e+03  8.40e-08  4.04e+03    6.03e+03      0              \n"},{"name":"stdout","output_type":"stream","text":"   1  7.59e+01  3.13e+02  3.58e+00  5.84e+02    6.54e+02      0              \n"},{"name":"stdout","output_type":"stream","text":"   2  3.79e+01  2.80e+02  3.78e+00  4.24e+02    5.57e+02      0   Skip BFGS  \n"},{"name":"stdout","output_type":"stream","text":"   3  3.79e+01  2.14e+02  4.86e+00  3.98e+02    2.27e+02      0              \n"},{"name":"stdout","output_type":"stream","text":"   4  1.90e+01  2.14e+02  4.84e+00  3.06e+02    2.15e+02      0              \n"},{"name":"stdout","output_type":"stream","text":"   5  1.90e+01  1.78e+02  6.15e+00  2.95e+02    3.76e+01      0              \n"},{"name":"stdout","output_type":"stream","text":"   6  9.48e+00  1.78e+02  6.13e+00  2.37e+02    1.34e+02      0              \n"},{"name":"stdout","output_type":"stream","text":"   7  9.48e+00  1.54e+02  7.96e+00  2.30e+02    2.40e+01      0              \n"},{"name":"stdout","output_type":"stream","text":"   8  4.74e+00  1.54e+02  7.92e+00  1.92e+02    9.00e+01      0              \n"},{"name":"stdout","output_type":"stream","text":"   9  4.74e+00  1.36e+02  1.06e+01  1.87e+02    1.68e+01      0              \n"},{"name":"stdout","output_type":"stream","text":"  10  2.37e+00  1.36e+02  1.06e+01  1.62e+02    6.03e+01      0              \n------------------------- STOP! -------------------------\n1 : |fc-fOld| = 0.0000e+00 <= tolF*(1+|f0|) = 4.0459e+02\n0 : |xc-x_last| = 4.6013e-01 <= tolX*(1+|x0|) = 1.0001e-01\n0 : |proj(x-g)-x|    = 6.0336e+01 <= tolG          = 1.0000e-01\n0 : |proj(x-g)-x|    = 6.0336e+01 <= 1e3*eps       = 1.0000e-02\n0 : maxIter   =      40    <= iter          =     11\n------------------------- DONE! -------------------------\n"}],"key":"J2fZhZkWXp"}],"key":"WN9l0LwGzH"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Plot the Data Misfit","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"wBIURzswc2"}],"identifier":"plot-the-data-misfit","label":"Plot the Data Misfit","html_id":"plot-the-data-misfit","implicit":true,"key":"x9lC64Mbfj"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"This step is necessary for determining whether the recovered model accurately reproduces observed anomalies. Here, we plot the observed data, predicted data for the recovered model, and the data misfit. As we can see, the recovered model reproduces the observed data quite well. And the data misfit map indicates we are not overfitting certain electrodes relative to others. We applied a uniform floor uncertainty to all data. However, if the uncertainty on each datum is different, we may choose to plot the normalized data misfit; i.e. the misfit normalized by the uncertainties.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"WGUACCq8h5"}],"key":"tTdfLNNQYY"}],"key":"I8oPj61BUN"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2025-05-23T16:56:23.754694Z","iopub.status.busy":"2025-05-23T16:56:23.754162Z","iopub.status.idle":"2025-05-23T16:56:24.292673Z","shell.execute_reply":"2025-05-23T16:56:24.292060Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"# Predicted data from recovered model\ndpred = inv_prob_L2.dpred\ndobs = ip_data.dobs\nstd = ip_data.standard_deviation\n\n# Plot\nfig = plt.figure(figsize=(9, 11))\ndata_array = [np.abs(dobs), np.abs(dpred), (dobs - dpred)]\nplot_title = [\"Observed\", \"Predicted\", \"Data Misfit\"]\nplot_units = [\"V/V\", \"V/V\", \"V/V\"]\nscale = [\"linear\", \"linear\", \"lindear\"]\ncmap_list = [mpl.cm.plasma, mpl.cm.plasma, mpl.cm.RdYlBu_r]\n\nax1 = 3 * [None]\ncax1 = 3 * [None]\ncbar = 3 * [None]\ncplot = 3 * [None]\n\nfor ii in range(0, 3):\n    ax1[ii] = fig.add_axes([0.15, 0.72 - 0.33 * ii, 0.65, 0.21])\n    cax1[ii] = fig.add_axes([0.81, 0.72 - 0.33 * ii, 0.03, 0.21])\n    cplot[ii] = plot_pseudosection(\n        ip_data.survey,\n        data_array[ii],\n        \"contourf\",\n        ax=ax1[ii],\n        cax=cax1[ii],\n        scale=scale[ii],\n        cbar_label=plot_units[ii],\n        mask_topography=True,\n        contourf_opts={\"levels\": 25, \"cmap\": cmap_list[ii]},\n    )\n    ax1[ii].set_title(plot_title[ii])\n\nplt.show()","key":"R7xkkWrccW"},{"type":"output","id":"99gMmig9Qupi3KjHkT8Uo","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"4bc2cd02f632f82cd6221134e2ecca53","path":"/user-tutorials/build/4bc2cd02f632f82cd6221134e2ecca53.png"},"text/plain":{"content":"<Figure size 900x1100 with 6 Axes>","content_type":"text/plain"}}}],"key":"Xju7sP5Rkw"}],"key":"l95BnkKuXD"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Plot the Recovered Model","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"orXOmZetT2"}],"identifier":"plot-the-recovered-model","label":"Plot the Recovered Model","html_id":"plot-the-recovered-model","implicit":true,"key":"HHX6uuzWSW"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"As we can see, the inversion recovers a smooth model. We recover a confined chargeable structure centered at (-160, 50). We also recover an extreme chargeable feature at depth at x < 0 m. Where sensitivity is low, we expect the inversion to default to the reference model values (i.e. zero) given the regularization we chose. As we will see, the second feature is an artifact of choosing an inappropriate background conductivity model","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"YsxWYy3JNw"}],"key":"msFyiW4a0z"}],"key":"tPdQKwdQ9J"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2025-05-23T16:56:24.295374Z","iopub.status.busy":"2025-05-23T16:56:24.295131Z","iopub.status.idle":"2025-05-23T16:56:24.517932Z","shell.execute_reply":"2025-05-23T16:56:24.517397Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"fig = plt.figure(figsize=(9, 4))\n\nnorm = Normalize(vmin=0.0, vmax=0.2)\n\nax1 = fig.add_axes([0.14, 0.17, 0.68, 0.7])\nmesh.plot_image(\n    plotting_map * recovered_chargeability_L2,\n    normal=\"Y\",\n    ax=ax1,\n    grid=False,\n    pcolor_opts={\"norm\": norm, \"cmap\": mpl.cm.plasma},\n)\nax1.set_xlim(-500, 500)\nax1.set_ylim(-300, 200)\nax1.set_title(\"Recovered L2-Model (Halfspace Background Conductivity)\")\nax1.set_xlabel(\"x (m)\")\nax1.set_ylabel(\"z (m)\")\n\nax2 = fig.add_axes([0.84, 0.17, 0.03, 0.7])\ncbar = mpl.colorbar.ColorbarBase(\n    ax2, norm=norm, orientation=\"vertical\", cmap=mpl.cm.plasma\n)\ncbar.set_label(\"V/V\", rotation=270, labelpad=15, size=12)\n\nplt.show()","key":"K4zq6HOMPW"},{"type":"output","id":"WY79TmvUCwwZJuOlsDsO7","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"48f311df5902786b5dea9f1741f3881e","path":"/user-tutorials/build/48f311df5902786b5dea9f1741f3881e.png"},"text/plain":{"content":"<Figure size 900x400 with 2 Axes>","content_type":"text/plain"}}}],"key":"AFJ8WxVtAD"}],"key":"KBciQbpTGj"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Iteratively Re-weighted Least-Squares Inversion","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"EtfENBJpi1"}],"identifier":"iteratively-re-weighted-least-squares-inversion","label":"Iteratively Re-weighted Least-Squares Inversion","html_id":"iteratively-re-weighted-least-squares-inversion","implicit":true,"key":"i1o15Xm97s"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Here, we provide a step-by-step best-practices approach for IRLS inversion of apparent chargeability data on a tree mesh to recover a chargeability model. Many of the steps are the same as our previous approach. As a result, we will avoid repeating information whenever possible. It should be noted that once the IRLS inversion is complete, we can extract the least-squares model the is recovered prior to performing the IRLS step. This will be done to compare least-squares inversion results for poor and appropriate background conductivity models.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"ftFCxPXXlx"}],"key":"QAakS2PpfG"},{"type":"paragraph","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Because we are changing the background conductivity, the sensitivities used for the L2 inversion cannot be reused for the IRLS inversion. Here, we define the simulation that can be used for the IRLS inversion, where the true background conductivity is true.","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"CyZlDGccyt"}],"key":"zbB1R8yiWx"}],"key":"zqFSC2CbHU"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2025-05-23T16:56:24.520549Z","iopub.status.busy":"2025-05-23T16:56:24.520309Z","iopub.status.idle":"2025-05-23T16:56:24.967479Z","shell.execute_reply":"2025-05-23T16:56:24.966944Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"simulation_irls = ip.Simulation2DNodal(\n    mesh,\n    survey=ip_data.survey,\n    sigma=conductivity_map * true_conductivity_model,\n    etaMap=chargeability_map,\n    storeJ=True,\n)","key":"kSDfBsBtSM"},{"type":"output","id":"xlD2IHMYbM25-WERpUC4c","data":[],"key":"ldY2JObXzP"}],"key":"BhgYIWpU2X"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Define the Data Misfit","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"lcirKdBlof"}],"identifier":"define-the-data-misfit","label":"Define the Data Misfit","html_id":"define-the-data-misfit-1","implicit":true,"key":"DximceQe4J"}],"key":"GvdaFbtXk9"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2025-05-23T16:56:24.969900Z","iopub.status.busy":"2025-05-23T16:56:24.969665Z","iopub.status.idle":"2025-05-23T16:56:24.972750Z","shell.execute_reply":"2025-05-23T16:56:24.972180Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"dmis_irls = data_misfit.L2DataMisfit(simulation=simulation_irls, data=ip_data)","key":"o1zpCf6zsW"},{"type":"output","id":"E2sjpu_pDcERA5BTSaz53","data":[],"key":"tw60TQKi5h"}],"key":"VMT57RwBTd"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Define the Regularization","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"e1n5rXV8Gb"}],"identifier":"define-the-regularization","label":"Define the Regularization","html_id":"define-the-regularization-1","implicit":true,"key":"fy8Drdc5V7"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Here, we use the ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"u5DEYG3jZb"},{"type":"link","url":"https://docs.simpeg.xyz/latest/content/api/generated/simpeg.regularization.Sparse.html#simpeg.regularization.sparse","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Sparse","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"lh0bsFejaL"}],"urlSource":"xref:simpeg#simpeg.regularization.Sparse","internal":false,"protocol":"xref:sphinx","key":"P9K92lsYq0"},{"type":"text","value":" regularization class to constrain the inversion result using an IRLS approach. Length scales along x and y are used to balance the smallness and smoothness terms. We use the same length scales that were used in the weighted least-squares inversion. Here, we apply a 0-norm on the smallness and a 2-norm on the smoothness.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"EENPmRthSY"}],"key":"dWRXdt9Whk"}],"key":"ZPhrqUsYX6"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2025-05-23T16:56:24.974986Z","iopub.status.busy":"2025-05-23T16:56:24.974733Z","iopub.status.idle":"2025-05-23T16:56:24.990645Z","shell.execute_reply":"2025-05-23T16:56:24.989780Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"reg_irls = regularization.Sparse(\n    mesh,\n    active_cells=active_cells,\n    length_scale_x=5.0,\n    length_scale_y=5.0,\n    norms=[0, 2, 2],\n    reference_model=reference_chargeability_model,\n    reference_model_in_smooth=False,\n)","key":"RCuER0BBaQ"},{"type":"output","id":"AmpxDHxLQ8ZlBNWzsGF7a","data":[],"key":"NfXs4NPE2g"}],"key":"nlRBN9b4Rg"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Define the Optimization","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"tPH6vlKIgj"}],"identifier":"define-the-optimization","label":"Define the Optimization","html_id":"define-the-optimization","implicit":true,"key":"bozUTjdW6n"}],"key":"sHgAJelToc"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2025-05-23T16:56:24.993183Z","iopub.status.busy":"2025-05-23T16:56:24.992936Z","iopub.status.idle":"2025-05-23T16:56:24.996114Z","shell.execute_reply":"2025-05-23T16:56:24.995579Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"opt_irls = optimization.ProjectedGNCG(\n    maxIter=40, lower=0.0, maxIterLS=20, maxIterCG=20, tolCG=1e-2\n)","key":"VzrsN60bNC"},{"type":"output","id":"R3c2MqSw1JCIrwlFw1Rwu","data":[],"key":"dBsJuSievA"}],"key":"jBoIs4txOh"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Define the Inverse Problem","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"YL2GsztGNd"}],"identifier":"define-the-inverse-problem","label":"Define the Inverse Problem","html_id":"define-the-inverse-problem-1","implicit":true,"key":"MLTfdR8nBx"}],"key":"RgJ1xIdmrV"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2025-05-23T16:56:24.998561Z","iopub.status.busy":"2025-05-23T16:56:24.998320Z","iopub.status.idle":"2025-05-23T16:56:25.001609Z","shell.execute_reply":"2025-05-23T16:56:25.001081Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"inv_prob_irls = inverse_problem.BaseInvProblem(dmis_irls, reg_irls, opt_irls)","key":"JHTKPJDkVb"},{"type":"output","id":"bqck2VawaizytufmDwMoI","data":[],"key":"ZBjUx8MGDR"}],"key":"cc2NtqEGaA"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Provide Inversion Directives","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"l5RJSmiv8C"}],"identifier":"provide-inversion-directives","label":"Provide Inversion Directives","html_id":"provide-inversion-directives-1","implicit":true,"key":"sWado3iolW"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Here, we create common directives for IRLS inversion of IP data and describe their roles. In additon to the ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"POZyN1TY0q"},{"type":"link","url":"https://docs.simpeg.xyz/latest/content/api/generated/simpeg.directives.UpdateSensitivityWeights.html#simpeg.directives.updatesensitivityweights","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"UpdateSensitivityWeights","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"KEzDJmZyLf"}],"urlSource":"xref:simpeg#simpeg.directives.UpdateSensitivityWeights","internal":false,"protocol":"xref:sphinx","key":"JxpQFE8r9M"},{"type":"text","value":", ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"QOlaD3Ps1j"},{"type":"link","url":"https://docs.simpeg.xyz/latest/content/api/generated/simpeg.directives.UpdatePreconditioner.html#simpeg.directives.updatepreconditioner","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"UpdatePreconditioner","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"yvh3Oj6teN"}],"urlSource":"xref:simpeg#simpeg.directives.UpdatePreconditioner","internal":false,"protocol":"xref:sphinx","key":"mex2IsivPc"},{"type":"text","value":" and ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"EAFfponidh"},{"type":"link","url":"https://docs.simpeg.xyz/latest/content/api/generated/simpeg.directives.BetaEstimate_ByEig.html#simpeg.directives.betaestimate_byeig","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"BetaEstimate_ByEig","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"EwK0411JLt"}],"urlSource":"xref:simpeg#simpeg.directives.BetaEstimate_ByEig","internal":false,"protocol":"xref:sphinx","key":"pVngFeLZcK"},{"type":"text","value":"  (described before), inversion with sparse-norms requires the ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"BCeoJ507Hz"},{"type":"link","url":"https://docs.simpeg.xyz/latest/content/api/generated/simpeg.directives.UpdateIRLS.html#simpeg.directives.updateirls","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"inlineCode","value":"UpdateIRLS","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"t8UVatZOQu"}],"urlSource":"xref:simpeg#simpeg.directives.UpdateIRLS","internal":false,"protocol":"xref:sphinx","key":"F8UbyFN5PX"},{"type":"text","value":" directive. Note that ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"jJqHAFAYgg"},{"type":"inlineCode","value":"every_iteration","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"jxjLWrleI8"},{"type":"text","value":" has been set to ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"fz61DQbbyV"},{"type":"inlineCode","value":"True","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"aDRTqqlVe9"},{"type":"text","value":" for the Jacobi preconditioner. This is because the IRLS regularization is model-dependent.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"oYrzJSne3P"}],"key":"S2AZNw0sOc"},{"type":"paragraph","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"You will notice that we don’t use the ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"qTUq1qGqlb"},{"type":"link","url":"https://docs.simpeg.xyz/latest/content/api/generated/simpeg.directives.BetaSchedule.html#simpeg.directives.betaschedule","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"BetaSchedule","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"tPa5FnDlDD"}],"urlSource":"xref:simpeg#simpeg.directives.BetaSchedule","internal":false,"protocol":"xref:sphinx","key":"p03PKWCqIQ"},{"type":"text","value":" and ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"GNSGnhgk8V"},{"type":"link","url":"https://docs.simpeg.xyz/latest/content/api/generated/simpeg.directives.TargetMisfit.html#simpeg.directives.targetmisfit","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"TargetMisfit","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"IeepYTSbOh"}],"urlSource":"xref:simpeg#simpeg.directives.TargetMisfit","internal":false,"protocol":"xref:sphinx","key":"h140mH8aAi"},{"type":"text","value":" directives. Here, the beta cooling schedule is set in the ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"Wjx51fx2x6"},{"type":"link","url":"https://docs.simpeg.xyz/latest/content/api/generated/simpeg.directives.UpdateIRLS.html#simpeg.directives.updateirls","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"inlineCode","value":"UpdateIRLS","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"ST69ETxb8A"}],"urlSource":"xref:simpeg#simpeg.directives.UpdateIRLS","internal":false,"protocol":"xref:sphinx","key":"wcmiQhRNsj"},{"type":"text","value":" directive using the ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"b25Ztohaub"},{"type":"inlineCode","value":"coolingFactor","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"fj133NnkEQ"},{"type":"text","value":" and ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"eKdCRPGFTH"},{"type":"inlineCode","value":"coolingRate","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"fR48JMBrvQ"},{"type":"text","value":" properties. The target misfit for the L2 portion of the IRLS approach is set with the ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"Vr3pGEXvzH"},{"type":"inlineCode","value":"chifact_start","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"eHfdCJFtCe"},{"type":"text","value":" property.","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"fCPIw8xlZt"}],"key":"rRIcbsGM7s"}],"key":"YybQxS2GzF"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2025-05-23T16:56:25.004173Z","iopub.status.busy":"2025-05-23T16:56:25.003857Z","iopub.status.idle":"2025-05-23T16:56:25.008746Z","shell.execute_reply":"2025-05-23T16:56:25.008161Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"sensitivity_weights_irls = directives.UpdateSensitivityWeights(\n    every_iteration=False, threshold_value=1e-2\n)\nupdate_irls = directives.UpdateIRLS(\n    cooling_factor=2,\n    cooling_rate=2,\n    f_min_change=1e-4,\n    max_irls_iterations=30,\n    chifact_start=1.0,\n)\nstarting_beta_irls = directives.BetaEstimate_ByEig(beta0_ratio=20)\nupdate_jacobi_irls = directives.UpdatePreconditioner(update_every_iteration=True)\n\ndirectives_list_irls = [\n    update_irls,\n    sensitivity_weights_irls,\n    starting_beta_irls,\n    update_jacobi_irls,\n]","key":"pqHF9sfjOh"},{"type":"output","id":"QzriWMiBUzhWFQ_u9IOAb","data":[],"key":"b7PwqcQ7g2"}],"key":"sjgL4to5p1"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Define and Run the Inversion","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"G6kmchzZ2V"}],"identifier":"define-and-run-the-inversion","label":"Define and Run the Inversion","html_id":"define-and-run-the-inversion-1","implicit":true,"key":"VLweerAaIN"}],"key":"s0Ivt2N5F8"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2025-05-23T16:56:25.011233Z","iopub.status.busy":"2025-05-23T16:56:25.010967Z","iopub.status.idle":"2025-05-23T16:56:47.476674Z","shell.execute_reply":"2025-05-23T16:56:47.475925Z"},"scrolled":false},"children":[{"type":"code","lang":"python","executable":true,"value":"inv_irls = inversion.BaseInversion(inv_prob_irls, directives_list_irls)\nrecovered_chargeability_irls = inv_irls.run(starting_chargeability_model)","key":"uDJKEsWGq3"},{"type":"output","id":"7kCrA7zofYFC1URFXVHZd","data":[{"name":"stdout","output_type":"stream","text":"\nRunning inversion with SimPEG v0.24.0\n\n                        simpeg.InvProblem is setting bfgsH0 to the inverse of the eval2Deriv.\n                        ***Done using same Solver, and solver_opts as the Simulation2DNodal problem***\n                        \n"},{"name":"stdout","output_type":"stream","text":"model has any nan: 0\n=============================== Projected GNCG ===============================\n  #     beta     phi_d     phi_m       f      |proj(x-g)-x|  LS    Comment   \n-----------------------------------------------------------------------------\nx0 has any nan: 0\n   0  6.79e+01  4.04e+03  8.43e-08  4.04e+03    8.08e+03      0              \n"},{"name":"stdout","output_type":"stream","text":"   1  6.79e+01  1.67e+02  2.64e+00  3.46e+02    3.44e+02      0              \n"},{"name":"stdout","output_type":"stream","text":"   2  3.40e+01  1.48e+02  2.78e+00  2.43e+02    2.78e+02      0   Skip BFGS  \n"},{"name":"stdout","output_type":"stream","text":"Reached starting chifact with l2-norm regularization: Start IRLS steps...\nirls_threshold 0.11207883969010549\n   3  3.40e+01  1.29e+02  4.20e+00  2.72e+02    4.85e+01      0              \n"},{"name":"stdout","output_type":"stream","text":"   4  3.40e+01  1.30e+02  4.07e+00  2.68e+02    2.53e+01      0              \n"},{"name":"stdout","output_type":"stream","text":"   5  3.40e+01  1.30e+02  4.51e+00  2.83e+02    1.97e+01      1   Skip BFGS  \n"},{"name":"stdout","output_type":"stream","text":"   6  3.40e+01  1.31e+02  4.46e+00  2.82e+02    8.99e+00      0              \n"},{"name":"stdout","output_type":"stream","text":"   7  3.40e+01  1.31e+02  4.73e+00  2.91e+02    9.42e+00      0              \n"},{"name":"stdout","output_type":"stream","text":"   8  3.40e+01  1.31e+02  4.70e+00  2.90e+02    4.40e+00      0              \n"},{"name":"stdout","output_type":"stream","text":"   9  3.40e+01  1.31e+02  4.87e+00  2.97e+02    1.15e+01      0              \n"},{"name":"stdout","output_type":"stream","text":"  10  3.40e+01  1.31e+02  4.84e+00  2.95e+02    4.67e+00      0              \n"},{"name":"stdout","output_type":"stream","text":"  11  3.40e+01  1.31e+02  4.95e+00  2.99e+02    1.40e+01      0              \n"},{"name":"stdout","output_type":"stream","text":"  12  3.40e+01  1.31e+02  4.91e+00  2.98e+02    4.67e+00      0              \n"},{"name":"stdout","output_type":"stream","text":"  13  3.40e+01  1.31e+02  4.97e+00  3.00e+02    1.52e+01      0              \n"},{"name":"stdout","output_type":"stream","text":"  14  3.40e+01  1.31e+02  4.92e+00  2.98e+02    5.28e+00      0              \n"},{"name":"stdout","output_type":"stream","text":"  15  3.40e+01  1.31e+02  4.92e+00  2.98e+02    1.68e+01      0              \n"},{"name":"stdout","output_type":"stream","text":"  16  3.40e+01  1.31e+02  4.87e+00  2.97e+02    9.10e+00      0              \n"},{"name":"stdout","output_type":"stream","text":"  17  3.40e+01  1.31e+02  4.81e+00  2.95e+02    1.92e+01      0              \n"},{"name":"stdout","output_type":"stream","text":"  18  3.40e+01  1.32e+02  4.76e+00  2.94e+02    7.75e+00      0              \n"},{"name":"stdout","output_type":"stream","text":"  19  3.40e+01  1.32e+02  4.66e+00  2.90e+02    1.99e+01      0              \n"},{"name":"stdout","output_type":"stream","text":"  20  3.40e+01  1.33e+02  4.61e+00  2.89e+02    3.72e+00      0              \n"},{"name":"stdout","output_type":"stream","text":"  21  3.40e+01  1.33e+02  4.47e+00  2.84e+02    2.07e+01      0              \n"},{"name":"stdout","output_type":"stream","text":"  22  3.40e+01  1.33e+02  4.43e+00  2.84e+02    3.27e+00      0              \n"},{"name":"stdout","output_type":"stream","text":"  23  3.40e+01  1.33e+02  4.27e+00  2.78e+02    2.29e+01      0              \n"},{"name":"stdout","output_type":"stream","text":"  24  3.40e+01  1.34e+02  4.23e+00  2.78e+02    2.44e+00      0              \n"},{"name":"stdout","output_type":"stream","text":"  25  3.40e+01  1.34e+02  4.06e+00  2.72e+02    2.43e+01      0              \n"},{"name":"stdout","output_type":"stream","text":"  26  3.40e+01  1.35e+02  4.02e+00  2.72e+02    3.15e+00      0              \n"},{"name":"stdout","output_type":"stream","text":"  27  3.40e+01  1.35e+02  3.85e+00  2.66e+02    2.55e+01      0              \n"},{"name":"stdout","output_type":"stream","text":"  28  3.40e+01  1.36e+02  3.82e+00  2.65e+02    3.38e+00      0              \n"},{"name":"stdout","output_type":"stream","text":"  29  3.40e+01  1.36e+02  3.65e+00  2.60e+02    2.71e+01      0              \n"},{"name":"stdout","output_type":"stream","text":"  30  3.40e+01  1.36e+02  3.61e+00  2.59e+02    1.38e+00      0              \n"},{"name":"stdout","output_type":"stream","text":"  31  3.40e+01  1.36e+02  3.45e+00  2.54e+02    3.13e+01      0              \n"},{"name":"stdout","output_type":"stream","text":"  32  3.40e+01  1.37e+02  3.42e+00  2.53e+02    8.27e-01      0              \n"},{"name":"stdout","output_type":"stream","text":"  33  3.40e+01  1.37e+02  3.26e+00  2.48e+02    3.86e+01      0              \n"},{"name":"stdout","output_type":"stream","text":"  34  3.40e+01  1.37e+02  3.24e+00  2.47e+02    2.45e-01      0              \n"},{"name":"stdout","output_type":"stream","text":"  35  3.40e+01  1.37e+02  3.07e+00  2.42e+02    4.75e+01      0              \n"},{"name":"stdout","output_type":"stream","text":"  36  3.40e+01  1.38e+02  3.05e+00  2.41e+02    4.13e-01      0              \n"},{"name":"stdout","output_type":"stream","text":"  37  3.40e+01  1.38e+02  2.89e+00  2.36e+02    5.60e+01      0              \n"},{"name":"stdout","output_type":"stream","text":"  38  3.40e+01  1.38e+02  2.87e+00  2.35e+02    5.06e-01      0              \n"},{"name":"stdout","output_type":"stream","text":"  39  3.40e+01  1.38e+02  2.71e+00  2.30e+02    6.23e+01      0              \n"},{"name":"stdout","output_type":"stream","text":"  40  3.40e+01  1.38e+02  2.69e+00  2.29e+02    6.62e-01      0              \n------------------------- STOP! -------------------------\n1 : |fc-fOld| = 7.7146e-01 <= tolF*(1+|f0|) = 4.0459e+02\n1 : |xc-x_last| = 4.3895e-02 <= tolX*(1+|x0|) = 1.0001e-01\n0 : |proj(x-g)-x|    = 6.6159e-01 <= tolG          = 1.0000e-01\n0 : |proj(x-g)-x|    = 6.6159e-01 <= 1e3*eps       = 1.0000e-02\n1 : maxIter   =      40    <= iter          =     40\n------------------------- DONE! -------------------------\n"}],"key":"rGLf8R0IQ1"}],"key":"lly3sm1n4Q"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Plot True, L2 and IRLS Models","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"NL3JWWFtg5"}],"identifier":"plot-true-l2-and-irls-models","label":"Plot True, L2 and IRLS Models","html_id":"plot-true-l2-and-irls-models","implicit":true,"key":"KQ3isNj6uT"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Here, we compare the models recovered from weighted least-squares and iteratively re-weighted least-squares inversion to the true model. As we will see, the L2-model extracted from the IRLS inversion is a great improvement over the L2-model we recovered via weighted least-squares inversion. And the only difference is the background conductivity model.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"OlsuezpdBt"}],"key":"YZpHZBDIg9"}],"key":"AlD7P24a26"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2025-05-23T16:56:47.479795Z","iopub.status.busy":"2025-05-23T16:56:47.479280Z","iopub.status.idle":"2025-05-23T16:56:47.484665Z","shell.execute_reply":"2025-05-23T16:56:47.483980Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"# Recreate True Model on a Tensor Mesh\ntrue_background_chargeability = 0.0\ntrue_conductor_chargeability = 1e-1\n\ntrue_chargeability_model = true_background_chargeability * np.ones(n_active)\n\nind_conductor = model_builder.get_indices_sphere(\n    np.r_[-120.0, 40.0], 60.0, mesh.cell_centers[active_cells, :]\n)\ntrue_chargeability_model[ind_conductor] = true_conductor_chargeability","key":"b7DV46TZi0"},{"type":"output","id":"7vBObNvR0_ehgs_QvjVIY","data":[],"key":"nqduDbFiDg"}],"key":"SFcaF39BsJ"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2025-05-23T16:56:47.487449Z","iopub.status.busy":"2025-05-23T16:56:47.486924Z","iopub.status.idle":"2025-05-23T16:56:47.490396Z","shell.execute_reply":"2025-05-23T16:56:47.489716Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"# Extract the L2 Model from the IRLS Inversion\nrecovered_chargeability_L2_good = inv_prob_irls.l2model","key":"YHUPd2vJJW"},{"type":"output","id":"gVO3uvg2SbHYO0IuGVfa8","data":[],"key":"el852wbiwy"}],"key":"LG1M4TBzNr"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2025-05-23T16:56:47.493219Z","iopub.status.busy":"2025-05-23T16:56:47.492696Z","iopub.status.idle":"2025-05-23T16:56:48.315505Z","shell.execute_reply":"2025-05-23T16:56:48.314838Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"norm = Normalize(vmin=0.0, vmax=0.1)\n\nfig = plt.figure(figsize=(9, 16))\nax1 = 4 * [None]\nax2 = 4 * [None]\ntitle_str = [\n    \"True chargeability Model\",\n    \"Recovered L2-Model (halfspace background)\",\n    \"Recovered L2-Model (true background)\",\n    \"Recovered IRLS-Model (true background)\",\n]\nplotting_model = [\n    true_chargeability_model,\n    recovered_chargeability_L2,\n    recovered_chargeability_L2_good,\n    recovered_chargeability_irls,\n]\n\nfor ii in range(0, 4):\n    ax1[ii] = fig.add_axes([0.14, 0.78 - 0.25 * ii, 0.68, 0.18])\n    mesh.plot_image(\n        plotting_map * plotting_model[ii],\n        ax=ax1[ii],\n        grid=False,\n        pcolor_opts={\"norm\": norm, \"cmap\": mpl.cm.plasma},\n    )\n    ax1[ii].set_xlim(-500, 500)\n    ax1[ii].set_ylim(-300, 200)\n    ax1[ii].set_title(title_str[ii])\n    ax1[ii].set_xlabel(\"x (m)\")\n    ax1[ii].set_ylabel(\"z (m)\")\n\n    ax2[ii] = fig.add_axes([0.84, 0.78 - 0.25 * ii, 0.03, 0.18])\n    cbar = mpl.colorbar.ColorbarBase(\n        ax2[ii], norm=norm, orientation=\"vertical\", cmap=mpl.cm.plasma\n    )\n    cbar.set_label(\"V/V\", rotation=270, labelpad=15, size=12)\n\nplt.show()","key":"Bv69dcoUKC"},{"type":"output","id":"aeJlmOk_w1kTw3nLkJs7C","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"ff8182a4edf35d537927aded3fc16fd3","path":"/user-tutorials/build/ff8182a4edf35d537927aded3fc16fd3.png"},"text/plain":{"content":"<Figure size 900x1600 with 8 Axes>","content_type":"text/plain"}}}],"key":"CGFF9ZlbYD"}],"key":"bjPHMbmGbs"}],"key":"XqfKzSoN6U"},"references":{"cite":{"order":[],"data":{}}},"footer":{"navigation":{"prev":{"title":"3D IP Forward Simulation","url":"/fwd-ip-3d","group":"SimPEG User Tutorials"},"next":{"title":"3D IP Inversion","url":"/inv-ip-3d","group":"SimPEG User Tutorials"}}},"domain":"http://localhost:3000"}