{"version":2,"kind":"Notebook","sha256":"5c90823bfcd27d1e58a6a477e6ac753c5b88677fecd273f098c825666259c6a2","slug":"plot-inv-1-joint-pf-pgi-full-info-tutorial","location":"/notebooks/12-pgi-inversion/plot_inv_1_joint_pf_pgi_full_info_tutorial.ipynb","dependencies":[],"frontmatter":{"title":"Joint PGI of Gravity + Magnetic on an Octree mesh using full petrophysical information","authors":[{"id":"devincowan","nameParsed":{"literal":"Devin Cowan","given":"Devin","family":"Cowan"},"name":"Devin Cowan","orcid":"0000-0002-0089-402X","roles":["Writing – original draft","Writing – review & editing","Software"],"affiliations":["ubc"]}],"kernelspec":{"name":"python3","display_name":"Python 3","language":"python"},"license":{"content":{"id":"CC-BY-4.0","url":"https://creativecommons.org/licenses/by/4.0/","name":"Creative Commons Attribution 4.0 International","free":true,"CC":true},"code":{"id":"MIT","url":"https://opensource.org/licenses/MIT","name":"MIT License","free":true,"osi":true}},"github":"https://github.com/simpeg/user-tutorials","subject":"SimPEG User Tutorials","keywords":["geophysics","inversions","python","open-source"],"affiliations":[{"id":"ubc","name":"University of British Columbia","department":"Department of Earth, Ocean and Atmospheric Sciences","address":"2020 – 2207 Main Mall","city":"Vancouver","state":"British Columbia","postal_code":"V6T 1Z4","country":"Canada","isni":"0000 0001 2288 9830","ror":"https://ror.org/03rmrcq20","phone":"604 822 2449"},{"id":"kobold","name":"Kobold Metals"}],"numbering":{"title":{"offset":1}},"source_url":"https://github.com/simpeg/user-tutorials/blob/main/notebooks/12-pgi-inversion/plot_inv_1_joint_pf_pgi_full_info_tutorial.ipynb","edit_url":"https://github.com/simpeg/user-tutorials/edit/main/notebooks/12-pgi-inversion/plot_inv_1_joint_pf_pgi_full_info_tutorial.ipynb","exports":[{"format":"ipynb","filename":"plot_inv_1_joint_pf_pgi_full_info_tutorial.ipynb","url":"/user-tutorials/build/plot_inv_1_joint_pf_-4182d4d95d20fb0e2384f9545e3c1673.ipynb"}]},"widgets":{},"mdast":{"type":"root","children":[{"type":"block","kind":"notebook-code","data":{"collapsed":false,"execution":{"iopub.execute_input":"2025-05-23T18:01:06.425092Z","iopub.status.busy":"2025-05-23T18:01:06.423756Z","iopub.status.idle":"2025-05-23T18:01:07.083957Z","shell.execute_reply":"2025-05-23T18:01:07.083185Z"},"jupyter":{"outputs_hidden":false}},"children":[{"type":"code","lang":"python","executable":true,"value":"%matplotlib inline","key":"xOtup5NeSG"},{"type":"output","id":"pjWe8rCWiugcTPlhjMYB5","data":[],"key":"CbLqpIUVKW"}],"key":"hm7THxqySV"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"This tutorial shows through a joint inversion of Gravity and Magnetic data on an\nOctree mesh how to use the PGI framework introduced in Astic & Oldenburg (2019)\nand Astic et al. (2021) to include petrophysical information into geophysical\ninversions for mutli-physics inversion.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"ozLmtiFcx2"}],"key":"T2D63Ja2CN"},{"type":"paragraph","position":{"start":{"line":6,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"text","value":"Thibaut Astic, Douglas W. Oldenburg,\nA framework for petrophysically and geologically guided geophysical inversion\nusing a dynamic Gaussian mixture model prior, Geophysical Journal International,\nVolume 219, Issue 3, December 2019, Pages 1989–2012, DOI:\n","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"QU2yqgjpYF"},{"type":"inlineCode","value":"10.1093/gji/ggz389 <https://doi.org/10.1093/gji/ggz389>","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"KTJVFAueRR"},{"type":"text","value":"_.","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"EXavFUy94f"}],"key":"ZzWFbUvg9u"},{"type":"paragraph","position":{"start":{"line":13,"column":1},"end":{"line":17,"column":1}},"children":[{"type":"text","value":"Thibaut Astic, Lindsey J. Heagy, Douglas W Oldenburg,\nPetrophysically and geologically guided multi-physics inversion using a dynamic\nGaussian mixture model, Geophysical Journal International,\nVolume 224, Issue 1, January 2021, Pages 40-68, DOI: ","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"key":"tZYJJVII0p"},{"type":"inlineCode","value":"10.1093/gji/ggaa378 <https://doi.org/10.1093/gji/ggaa378>","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"key":"dnuyTafhlb"},{"type":"text","value":"_.","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"key":"duCmA5M6MT"}],"key":"wfu6Di9I3g"}],"key":"Tjv5x7otnx"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Import modules","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"ShdBFxsCsX"}],"identifier":"import-modules","label":"Import modules","html_id":"import-modules","implicit":true,"key":"NmbGBs9bzf"}],"key":"uqaSehY2Vb"},{"type":"block","kind":"notebook-code","data":{"collapsed":false,"execution":{"iopub.execute_input":"2025-05-23T18:01:07.087252Z","iopub.status.busy":"2025-05-23T18:01:07.086846Z","iopub.status.idle":"2025-05-23T18:01:08.373540Z","shell.execute_reply":"2025-05-23T18:01:08.372858Z"},"jupyter":{"outputs_hidden":false}},"children":[{"type":"code","lang":"python","executable":true,"value":"from discretize import TreeMesh\nfrom discretize.utils import active_from_xyz\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport simpeg.potential_fields as pf\nfrom simpeg import (\n    data_misfit,\n    directives,\n    inverse_problem,\n    inversion,\n    maps,\n    optimization,\n    regularization,\n    utils,\n)\nfrom simpeg.utils import io_utils","key":"V3zWAjaii5"},{"type":"output","id":"xMIByKAPgTg5tEg5HwSKB","data":[],"key":"bq43cGZMy1"}],"key":"OxBLhGVcqo"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Setup","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Guxeuv76g4"}],"identifier":"setup","label":"Setup","html_id":"setup","implicit":true,"key":"RwM79IMlfZ"}],"key":"KaSrpgn3Ft"},{"type":"block","kind":"notebook-code","data":{"collapsed":false,"execution":{"iopub.execute_input":"2025-05-23T18:01:08.378390Z","iopub.status.busy":"2025-05-23T18:01:08.377859Z","iopub.status.idle":"2025-05-23T18:01:17.638796Z","shell.execute_reply":"2025-05-23T18:01:17.637743Z"},"jupyter":{"outputs_hidden":false}},"children":[{"type":"code","lang":"python","executable":true,"value":"# Load Mesh\nmesh_file = io_utils.download(\n    \"https://storage.googleapis.com/simpeg/pgi_tutorial_assets/mesh_tutorial.ubc\"\n)\nmesh = TreeMesh.read_UBC(mesh_file)\n\n# Load True geological model for comparison with inversion result\ntrue_geology_file = io_utils.download(\n    \"https://storage.googleapis.com/simpeg/pgi_tutorial_assets/geology_true.mod\"\n)\ntrue_geology = mesh.read_model_UBC(true_geology_file)\n\n# Plot true geology model\nfig, ax = plt.subplots(1, 4, figsize=(20, 4))\nticksize, labelsize = 14, 16\nfor _, axx in enumerate(ax):\n    axx.set_aspect(1)\n    axx.tick_params(labelsize=ticksize)\nmesh.plot_slice(\n    true_geology,\n    normal=\"X\",\n    ax=ax[0],\n    ind=-17,\n    clim=[0, 2],\n    pcolor_opts={\"cmap\": \"inferno_r\"},\n    grid=True,\n)\nmesh.plot_slice(\n    true_geology,\n    normal=\"Y\",\n    ax=ax[1],\n    clim=[0, 2],\n    pcolor_opts={\"cmap\": \"inferno_r\"},\n    grid=True,\n)\ngeoplot = mesh.plot_slice(\n    true_geology,\n    normal=\"Z\",\n    ax=ax[2],\n    clim=[0, 2],\n    ind=-10,\n    pcolor_opts={\"cmap\": \"inferno_r\"},\n    grid=True,\n)\ngeocb = plt.colorbar(geoplot[0], cax=ax[3], ticks=[0, 1, 2])\ngeocb.set_label(\n    \"True geology model\\n(classification/density/mag. susc.)\", fontsize=labelsize\n)\ngeocb.set_ticklabels(\n    [\"BCKGRD (0 g/cc; 0 SI)\", \"PK (-0.8 g/cc; 5e-3 SI)\", \"VK (-0.2 g/cc; 2e-2 SI)\"]\n)\ngeocb.ax.tick_params(labelsize=ticksize)\nax[3].set_aspect(10)\nplt.show()\n\n# Load geophysical data\ndata_grav_file = io_utils.download(\n    \"https://storage.googleapis.com/simpeg/pgi_tutorial_assets/gravity_data.obs\"\n)\ndata_grav = io_utils.read_grav3d_ubc(data_grav_file)\ndata_mag_file = io_utils.download(\n    \"https://storage.googleapis.com/simpeg/pgi_tutorial_assets/magnetic_data.obs\"\n)\ndata_mag = io_utils.read_mag3d_ubc(data_mag_file)\n\n# plot data and mesh\nfig, ax = plt.subplots(2, 2, figsize=(15, 10))\nax = ax.reshape(-1)\nplt.gca().set_aspect(\"equal\")\nplt.gca().set_xlim(\n    [\n        data_mag.survey.receiver_locations[:, 0].min(),\n        data_mag.survey.receiver_locations[:, 0].max(),\n    ],\n)\nplt.gca().set_ylim(\n    [\n        data_mag.survey.receiver_locations[:, 1].min(),\n        data_mag.survey.receiver_locations[:, 1].max(),\n    ],\n)\nmesh.plot_slice(\n    np.ones(mesh.nC),\n    normal=\"Z\",\n    ind=int(-10),\n    grid=True,\n    pcolor_opts={\"cmap\": \"Greys\"},\n    ax=ax[0],\n)\nmm = utils.plot2Ddata(\n    data_grav.survey.receiver_locations,\n    -data_grav.dobs,\n    ax=ax[0],\n    level=True,\n    nx=20,\n    ny=20,\n    dataloc=True,\n    ncontour=12,\n    shade=True,\n    contourOpts={\"cmap\": \"Blues_r\", \"alpha\": 0.8},\n    levelOpts={\"colors\": \"k\", \"linewidths\": 0.5, \"linestyles\": \"dashed\"},\n)\nax[0].set_aspect(1)\nax[0].set_title(\n    \"Gravity data values and locations,\\nwith mesh and geology overlays\", fontsize=16\n)\nplt.colorbar(mm[0], cax=ax[2], orientation=\"horizontal\")\nax[2].set_aspect(0.05)\nax[2].set_title(\"mGal\", fontsize=16)\nmesh.plot_slice(\n    np.ones(mesh.nC),\n    normal=\"Z\",\n    ind=int(-10),\n    grid=True,\n    pcolor_opts={\"cmap\": \"Greys\"},\n    ax=ax[1],\n)\nmm = utils.plot2Ddata(\n    data_mag.survey.receiver_locations,\n    data_mag.dobs,\n    ax=ax[1],\n    level=True,\n    nx=20,\n    ny=20,\n    dataloc=True,\n    ncontour=11,\n    shade=True,\n    contourOpts={\"cmap\": \"Reds\", \"alpha\": 0.8},\n    levelOpts={\"colors\": \"k\", \"linewidths\": 0.5, \"linestyles\": \"dashed\"},\n)\nax[1].set_aspect(1)\nax[1].set_title(\n    \"Magnetic data values and locations,\\nwith mesh and geology overlays\", fontsize=16\n)\nplt.colorbar(mm[0], cax=ax[3], orientation=\"horizontal\")\nax[3].set_aspect(0.05)\nax[3].set_title(\"nT\", fontsize=16)\n# overlay true geology model for comparison\nindz = -9\nindslicezplot = mesh.gridCC[:, 2] == mesh.cell_centers_z[indz]\nfor i in range(2):\n    utils.plot2Ddata(\n        mesh.gridCC[indslicezplot][:, [0, 1]],\n        true_geology[indslicezplot],\n        nx=200,\n        ny=200,\n        contourOpts={\"alpha\": 0},\n        clim=[0, 2],\n        ax=ax[i],\n        level=True,\n        ncontour=2,\n        levelOpts={\"colors\": \"k\", \"linewidths\": 2, \"linestyles\": \"--\"},\n        method=\"nearest\",\n    )\nplt.subplots_adjust(hspace=-0.25, wspace=0.1)\nplt.show()\n\n# Load Topo\ntopo_file = io_utils.download(\n    \"https://storage.googleapis.com/simpeg/pgi_tutorial_assets/CDED_Lake_warp.xyz\"\n)\ntopo = np.genfromtxt(topo_file, skip_header=1)\n# find the active cells\nactv = active_from_xyz(mesh, topo, \"CC\")\n# Create active map to go from reduce set to full\nndv = np.nan\nactvMap = maps.InjectActiveCells(mesh, actv, ndv)\nnactv = int(actv.sum())\n\n# Create simulations and data misfits\n# Wires mapping\nwires = maps.Wires((\"den\", actvMap.nP), (\"sus\", actvMap.nP))\ngravmap = actvMap * wires.den\nmagmap = actvMap * wires.sus\nidenMap = maps.IdentityMap(nP=nactv)\n# Grav problem\nsimulation_grav = pf.gravity.simulation.Simulation3DIntegral(\n    survey=data_grav.survey,\n    mesh=mesh,\n    rhoMap=wires.den,\n    active_cells=actv,\n    engine=\"choclo\",\n)\ndmis_grav = data_misfit.L2DataMisfit(data=data_grav, simulation=simulation_grav)\n# Mag problem\nsimulation_mag = pf.magnetics.simulation.Simulation3DIntegral(\n    survey=data_mag.survey,\n    mesh=mesh,\n    chiMap=wires.sus,\n    active_cells=actv,\n    engine=\"choclo\",\n)\ndmis_mag = data_misfit.L2DataMisfit(data=data_mag, simulation=simulation_mag)","key":"sdBdEHUNn7"},{"type":"output","id":"jzU5sK12091cpQhk6YbbA","data":[{"name":"stdout","output_type":"stream","text":"Downloading https://storage.googleapis.com/simpeg/pgi_tutorial_assets/mesh_tutorial.ubc\n   saved to: /home/ssoler/git/user-tutorials/notebooks/12-pgi-inversion/mesh_tutorial.ubc\nDownload completed!\n"},{"name":"stdout","output_type":"stream","text":"Downloading https://storage.googleapis.com/simpeg/pgi_tutorial_assets/geology_true.mod\n   saved to: /home/ssoler/git/user-tutorials/notebooks/12-pgi-inversion/geology_true.mod\nDownload completed!\n"},{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"c1d5e0d84d41f1406075fadfee3ee34f","path":"/user-tutorials/build/c1d5e0d84d41f1406075fadfee3ee34f.png"},"text/plain":{"content":"<Figure size 2000x400 with 4 Axes>","content_type":"text/plain"}}},{"name":"stdout","output_type":"stream","text":"Downloading https://storage.googleapis.com/simpeg/pgi_tutorial_assets/gravity_data.obs\n   saved to: /home/ssoler/git/user-tutorials/notebooks/12-pgi-inversion/gravity_data.obs\nDownload completed!\nDownloading https://storage.googleapis.com/simpeg/pgi_tutorial_assets/magnetic_data.obs\n"},{"name":"stdout","output_type":"stream","text":"   saved to: /home/ssoler/git/user-tutorials/notebooks/12-pgi-inversion/magnetic_data.obs\nDownload completed!\n"},{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"a42c757f04992a5e8eb0e43c4f2ef7c4","path":"/user-tutorials/build/a42c757f04992a5e8eb0e43c4f2ef7c4.png"},"text/plain":{"content":"<Figure size 1500x1000 with 4 Axes>","content_type":"text/plain"}}},{"name":"stdout","output_type":"stream","text":"Downloading https://storage.googleapis.com/simpeg/pgi_tutorial_assets/CDED_Lake_warp.xyz\n"},{"name":"stdout","output_type":"stream","text":"   saved to: /home/ssoler/git/user-tutorials/notebooks/12-pgi-inversion/CDED_Lake_warp.xyz\nDownload completed!\n"}],"key":"jrH7pu9rVP"}],"key":"t5vqkj44ei"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Create a joint Data Misfit","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"jGty6KDCr4"}],"identifier":"create-a-joint-data-misfit","label":"Create a joint Data Misfit","html_id":"create-a-joint-data-misfit","implicit":true,"key":"Cg6zO1UGPu"}],"key":"fhtDIKxUuw"},{"type":"block","kind":"notebook-code","data":{"collapsed":false,"execution":{"iopub.execute_input":"2025-05-23T18:01:17.642686Z","iopub.status.busy":"2025-05-23T18:01:17.642427Z","iopub.status.idle":"2025-05-23T18:01:17.646882Z","shell.execute_reply":"2025-05-23T18:01:17.646356Z"},"jupyter":{"outputs_hidden":false}},"children":[{"type":"code","lang":"python","executable":true,"value":"# Joint data misfit\ndmis = 0.5 * dmis_grav + 0.5 * dmis_mag\n\n# initial model\nm0 = np.r_[-1e-4 * np.ones(actvMap.nP), 1e-4 * np.ones(actvMap.nP)]","key":"QH8IdJ7X6g"},{"type":"output","id":"DoMysxPmv_HkNrazBZPzg","data":[],"key":"l1vYpqlvCl"}],"key":"JAqGk0C5jM"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Inversion with full petrophysical information","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"D7fAXjsLF8"}],"identifier":"inversion-with-full-petrophysical-information","label":"Inversion with full petrophysical information","html_id":"inversion-with-full-petrophysical-information","implicit":true,"key":"jaS1JRGF0J"}],"key":"szJzruxzwv"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Create and plot a petrophysical GMM with full information","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"WlObo4EvDa"}],"identifier":"create-and-plot-a-petrophysical-gmm-with-full-information","label":"Create and plot a petrophysical GMM with full information","html_id":"create-and-plot-a-petrophysical-gmm-with-full-information","implicit":true,"key":"uwapk2N6Xf"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":11,"column":1}},"children":[{"type":"text","value":"The GMM is our representation of the petrophysical and geological information.\nHere, we focus on the petrophysical aspect, with the means and covariances of\nthe physical properties of each rock unit.\nTo generate the data above, the PK unit was populated with a density contrast\nof -0.8 g/cc and a magnetic susceptibility of 0.005 SI. The properties of the\nHK unit were set at -0.2 g/cc and 0.02 SI. The covariances matrices are set\nso that we assume petrophysical noise levels of around 0.05 g/cc and 0.001 SI\nfor both unit. Finally the background unit is set at null contrasts (0 g/cc\n0 SI) with a petrophysical noise level of half of the above.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"o1sB4oZaZM"}],"key":"ypYNYm9M35"}],"key":"GQ6KwyQmfj"},{"type":"block","kind":"notebook-code","data":{"collapsed":false,"execution":{"iopub.execute_input":"2025-05-23T18:01:17.650349Z","iopub.status.busy":"2025-05-23T18:01:17.650120Z","iopub.status.idle":"2025-05-23T18:01:19.767048Z","shell.execute_reply":"2025-05-23T18:01:19.766471Z"},"jupyter":{"outputs_hidden":false}},"children":[{"type":"code","lang":"python","executable":true,"value":"gmmref = utils.WeightedGaussianMixture(\n    n_components=3,  # number of rock units: bckgrd, PK, HK\n    mesh=mesh,  # inversion mesh\n    actv=actv,  # actv cells\n    covariance_type=\"diag\",  # diagonal covariances\n)\n# required: initialization with fit\n# fake random samples, size of the mesh, number of physical properties: 2 (density and mag.susc)\nrng = np.random.default_rng(seed=518936)\ngmmref.fit(rng.normal(size=(nactv, 2)))\n# set parameters manually\n# set phys. prop means for each unit\ngmmref.means_ = np.c_[\n    [0.0, 0.0],  # BCKGRD density contrast and mag. susc\n    [-0.8, 0.005],  # PK\n    [-0.2, 0.02],  # HK\n].T\n# set phys. prop covariances for each unit\ngmmref.covariances_ = np.array(\n    [[6e-04, 3.175e-07], [2.4e-03, 1.5e-06], [2.4e-03, 1.5e-06]]\n)\n# important after setting cov. manually: compute precision matrices and cholesky\ngmmref.compute_clusters_precisions()\n# set global proportions; low-impact as long as not 0 or 1 (total=1)\ngmmref.weights_ = np.r_[0.9, 0.075, 0.025]\n\n# Plot the 2D GMM\nax = gmmref.plot_pdf(flag2d=True)\nax[0].set_xlabel(\"Density contrast [g/cc]\")\nax[0].set_ylim([0, 5])\nax[2].set_ylabel(\"magnetic Susceptibility [SI]\")\nax[2].set_xlim([0, 100])\nplt.show()","key":"vwlPWOL14e"},{"type":"output","id":"wtSzVl_g0y_GK67D1Me-X","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"4f3b554e9aaed2889e99166f39fbf0ab","path":"/user-tutorials/build/4f3b554e9aaed2889e99166f39fbf0ab.png"},"text/plain":{"content":"<Figure size 1000x1000 with 4 Axes>","content_type":"text/plain"}}}],"key":"oqTOiaSCh5"}],"key":"aJgKMgSEka"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Create PGI regularization","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"DOhhq57Uv9"}],"identifier":"create-pgi-regularization","label":"Create PGI regularization","html_id":"create-pgi-regularization","implicit":true,"key":"Lr6tbS6pKq"}],"key":"TxucFn9ySs"},{"type":"block","kind":"notebook-code","data":{"collapsed":false,"execution":{"iopub.execute_input":"2025-05-23T18:01:19.770115Z","iopub.status.busy":"2025-05-23T18:01:19.769870Z","iopub.status.idle":"2025-05-23T18:01:22.851935Z","shell.execute_reply":"2025-05-23T18:01:22.851193Z"},"jupyter":{"outputs_hidden":false}},"children":[{"type":"code","lang":"python","executable":true,"value":"# Sensitivity weighting\nwr_grav = np.sum(simulation_grav.G**2.0, axis=0) ** 0.5 / (mesh.cell_volumes[actv])\nwr_grav = wr_grav / np.max(wr_grav)\n\nwr_mag = np.sum(simulation_mag.G**2.0, axis=0) ** 0.5 / (mesh.cell_volumes[actv])\nwr_mag = wr_mag / np.max(wr_mag)\n\n# create joint PGI regularization with smoothness\nreg = regularization.PGI(\n    gmmref=gmmref,\n    mesh=mesh,\n    wiresmap=wires,\n    maplist=[idenMap, idenMap],\n    active_cells=actv,\n    alpha_pgi=1.0,\n    alpha_x=1.0,\n    alpha_y=1.0,\n    alpha_z=1.0,\n    alpha_xx=0.0,\n    alpha_yy=0.0,\n    alpha_zz=0.0,\n    # use the classification of the initial model (here, all background unit)\n    # as initial reference model\n    reference_model=utils.mkvc(\n        gmmref.means_[gmmref.predict(m0.reshape(actvMap.nP, -1))]\n    ),\n    weights_list=[wr_grav, wr_mag],  # weights each phys. prop. by correct sensW\n)","key":"wHSqxb4oam"},{"type":"output","id":"lE5hKmVzlbEBJudLjv9TQ","data":[],"key":"qyFAENpnnq"}],"key":"yqoRVws2YE"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Inverse problem with full petrophysical information","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"MKkBXR0BzO"}],"identifier":"inverse-problem-with-full-petrophysical-information","label":"Inverse problem with full petrophysical information","html_id":"inverse-problem-with-full-petrophysical-information","implicit":true,"key":"zGJoAqMZpK"}],"key":"vlgDALP3FZ"},{"type":"block","kind":"notebook-code","data":{"collapsed":false,"execution":{"iopub.execute_input":"2025-05-23T18:01:22.855739Z","iopub.status.busy":"2025-05-23T18:01:22.855454Z","iopub.status.idle":"2025-05-23T18:02:45.037146Z","shell.execute_reply":"2025-05-23T18:02:45.036566Z"},"jupyter":{"outputs_hidden":false}},"children":[{"type":"code","lang":"python","executable":true,"value":"# Directives\n# Add directives to the inversion\n# ratio to use for each phys prop. smoothness in each direction;\n# roughly the ratio of the order of magnitude of each phys. prop.\nalpha0_ratio = np.r_[\n    1e-4 * np.ones(len(reg.objfcts[1].objfcts[1:])),\n    1e-4 * 100.0 * np.ones(len(reg.objfcts[2].objfcts[1:])),\n]\nAlphas = directives.AlphasSmoothEstimate_ByEig(alpha0_ratio=alpha0_ratio, verbose=True)\n# initialize beta and beta/alpha_pgi schedule\nbeta = directives.BetaEstimate_ByEig(beta0_ratio=1e-2)\nbetaIt = directives.PGI_BetaAlphaSchedule(\n    verbose=True,\n    coolingFactor=2.0,\n    tolerance=0.2,\n    progress=0.2,\n)\n# geophy. and petro. target misfits\ntargets = directives.MultiTargetMisfits(\n    verbose=True,\n)\n# add learned mref in smooth once stable\nMrefInSmooth = directives.PGI_AddMrefInSmooth(\n    wait_till_stable=True,\n    verbose=True,\n)\n# update the parameters in smallness (L2-approx of PGI)\nupdate_smallness = directives.PGI_UpdateParameters(\n    update_gmm=False  # keep GMM model fixed\n)\n# pre-conditioner\nupdate_Jacobi = directives.UpdatePreconditioner()\n# iteratively balance the scaling of the data misfits\nscaling_init = directives.ScalingMultipleDataMisfits_ByEig(chi0_ratio=[1.0, 100.0])\nscale_schedule = directives.JointScalingSchedule(verbose=True)\n\n# Create inverse problem\n# Optimization\n# set lower and upper bounds\nlowerbound = np.r_[-2.0 * np.ones(actvMap.nP), 0.0 * np.ones(actvMap.nP)]\nupperbound = np.r_[0.0 * np.ones(actvMap.nP), 1e-1 * np.ones(actvMap.nP)]\nopt = optimization.ProjectedGNCG(\n    maxIter=30,\n    lower=lowerbound,\n    upper=upperbound,\n    maxIterLS=20,\n    maxIterCG=100,\n    tolCG=1e-4,\n)\n# create inverse problem\ninvProb = inverse_problem.BaseInvProblem(dmis, reg, opt)\ninv = inversion.BaseInversion(\n    invProb,\n    # directives: evaluate alphas (and data misfits scales) before beta\n    directiveList=[\n        Alphas,\n        scaling_init,\n        beta,\n        update_smallness,\n        targets,\n        scale_schedule,\n        betaIt,\n        MrefInSmooth,\n        update_Jacobi,\n    ],\n)\n\n# invert\npgi_model = inv.run(m0)\n\n# Extract the results\ndensity_model = gravmap * pgi_model\nmagsus_model = magmap * pgi_model\nquasi_geology_model = actvMap * reg.objfcts[0].compute_quasi_geology_model()\n\n# Plot the result with full petrophysical information\nfig, ax = plt.subplots(3, 4, figsize=(15, 10))\nfor _, axx in enumerate(ax):\n    for _, axxx in enumerate(axx):\n        axxx.set_aspect(1)\n        axxx.tick_params(labelsize=ticksize)\n\nindx = 15\nindy = 17\nindz = -9\n# geology model\nmesh.plot_slice(\n    quasi_geology_model,\n    normal=\"X\",\n    ax=ax[0, 0],\n    clim=[0, 2],\n    ind=indx,\n    pcolor_opts={\"cmap\": \"inferno_r\"},\n)\nmesh.plot_slice(\n    quasi_geology_model,\n    normal=\"Y\",\n    ax=ax[0, 1],\n    clim=[0, 2],\n    ind=indy,\n    pcolor_opts={\"cmap\": \"inferno_r\"},\n)\ngeoplot = mesh.plot_slice(\n    quasi_geology_model,\n    normal=\"Z\",\n    ax=ax[0, 2],\n    clim=[0, 2],\n    ind=indz,\n    pcolor_opts={\"cmap\": \"inferno_r\"},\n)\ngeocb = plt.colorbar(geoplot[0], cax=ax[0, 3], ticks=[0, 1, 2])\ngeocb.set_ticklabels([\"BCK\", \"PK\", \"VK\"])\ngeocb.set_label(\"Quasi-Geology model\\n(Rock units classification)\", fontsize=16)\nax[0, 3].set_aspect(10)\n\n# gravity model\nmesh.plot_slice(\n    density_model,\n    normal=\"X\",\n    ax=ax[1, 0],\n    clim=[-1, 0],\n    ind=indx,\n    pcolor_opts={\"cmap\": \"Blues_r\"},\n)\nmesh.plot_slice(\n    density_model,\n    normal=\"Y\",\n    ax=ax[1, 1],\n    clim=[-1, 0],\n    ind=indy,\n    pcolor_opts={\"cmap\": \"Blues_r\"},\n)\ndenplot = mesh.plot_slice(\n    density_model,\n    normal=\"Z\",\n    ax=ax[1, 2],\n    clim=[-1, 0],\n    ind=indz,\n    pcolor_opts={\"cmap\": \"Blues_r\"},\n)\ndencb = plt.colorbar(denplot[0], cax=ax[1, 3])\ndencb.set_label(\"Density contrast\\nmodel (g/cc)\", fontsize=16)\nax[1, 3].set_aspect(10)\n\n# magnetic model\nmesh.plot_slice(\n    magsus_model,\n    normal=\"X\",\n    ax=ax[2, 0],\n    clim=[0, 0.025],\n    ind=indx,\n    pcolor_opts={\"cmap\": \"Reds\"},\n)\nmesh.plot_slice(\n    magsus_model,\n    normal=\"Y\",\n    ax=ax[2, 1],\n    clim=[0, 0.025],\n    ind=indy,\n    pcolor_opts={\"cmap\": \"Reds\"},\n)\nsusplot = mesh.plot_slice(\n    magsus_model,\n    normal=\"Z\",\n    ax=ax[2, 2],\n    clim=[0, 0.025],\n    ind=indz,\n    pcolor_opts={\"cmap\": \"Reds\"},\n)\nsuscb = plt.colorbar(susplot[0], cax=ax[2, 3])\nsuscb.set_label(\"Magnetic susceptibility\\nmodel (SI)\", fontsize=16)\nax[2, 3].set_aspect(10)\n\n# overlay true geology model for comparison\nindslicexplot = mesh.gridCC[:, 0] == mesh.cell_centers_x[indx]\nindsliceyplot = mesh.gridCC[:, 1] == mesh.cell_centers_y[indy]\nindslicezplot = mesh.gridCC[:, 2] == mesh.cell_centers_z[indz]\nfor i in range(3):\n    for j, (plane, indd) in enumerate(\n        zip([[1, 2], [0, 2], [0, 1]], [indslicexplot, indsliceyplot, indslicezplot])\n    ):\n        utils.plot2Ddata(\n            mesh.gridCC[indd][:, plane],\n            true_geology[indd],\n            nx=100,\n            ny=100,\n            contourOpts={\"alpha\": 0},\n            clim=[0, 2],\n            ax=ax[i, j],\n            level=True,\n            ncontour=2,\n            levelOpts={\"colors\": \"grey\", \"linewidths\": 2, \"linestyles\": \"--\"},\n            method=\"nearest\",\n        )\n\n# plot the locations of the cross-sections\nfor i in range(3):\n    ax[i, 0].plot(\n        mesh.cell_centers_y[indy] * np.ones(2), [-300, 500], c=\"k\", linestyle=\"dotted\"\n    )\n    ax[i, 0].plot(\n        [\n            data_mag.survey.receiver_locations[:, 1].min(),\n            data_mag.survey.receiver_locations[:, 1].max(),\n        ],\n        mesh.cell_centers_z[indz] * np.ones(2),\n        c=\"k\",\n        linestyle=\"dotted\",\n    )\n    ax[i, 0].set_xlim(\n        [\n            data_mag.survey.receiver_locations[:, 1].min(),\n            data_mag.survey.receiver_locations[:, 1].max(),\n        ],\n    )\n\n    ax[i, 1].plot(\n        mesh.cell_centers_x[indx] * np.ones(2), [-300, 500], c=\"k\", linestyle=\"dotted\"\n    )\n    ax[i, 1].plot(\n        [\n            data_mag.survey.receiver_locations[:, 0].min(),\n            data_mag.survey.receiver_locations[:, 0].max(),\n        ],\n        mesh.cell_centers_z[indz] * np.ones(2),\n        c=\"k\",\n        linestyle=\"dotted\",\n    )\n    ax[i, 1].set_xlim(\n        [\n            data_mag.survey.receiver_locations[:, 0].min(),\n            data_mag.survey.receiver_locations[:, 0].max(),\n        ],\n    )\n\n    ax[i, 2].plot(\n        mesh.cell_centers_x[indx] * np.ones(2),\n        [\n            data_mag.survey.receiver_locations[:, 1].min(),\n            data_mag.survey.receiver_locations[:, 1].max(),\n        ],\n        c=\"k\",\n        linestyle=\"dotted\",\n    )\n    ax[i, 2].plot(\n        [\n            data_mag.survey.receiver_locations[:, 0].min(),\n            data_mag.survey.receiver_locations[:, 0].max(),\n        ],\n        mesh.cell_centers_y[indy] * np.ones(2),\n        c=\"k\",\n        linestyle=\"dotted\",\n    )\n    ax[i, 2].set_xlim(\n        [\n            data_mag.survey.receiver_locations[:, 0].min(),\n            data_mag.survey.receiver_locations[:, 0].max(),\n        ],\n    )\n    ax[i, 2].set_ylim(\n        [\n            data_mag.survey.receiver_locations[:, 1].min(),\n            data_mag.survey.receiver_locations[:, 1].max(),\n        ],\n    )\n\nplt.tight_layout()\nplt.show()\n\n# Plot the 2D GMM\nfig = plt.figure(figsize=(10, 10))\nax0 = plt.subplot2grid((4, 4), (3, 1), colspan=3)\nax1 = plt.subplot2grid((4, 4), (0, 1), colspan=3, rowspan=3)\nax2 = plt.subplot2grid((4, 4), (0, 0), rowspan=3)\nax = [ax0, ax1, ax2]\nreg.objfcts[0].gmm.plot_pdf(flag2d=True, ax=ax, padding=0.5)\nax[0].set_xlabel(\"Density contrast [g/cc]\")\nax[0].set_ylim([0, 5])\nax[2].set_xlim([0, 50])\nax[2].set_ylabel(\"magnetic Susceptibility [SI]\")\nax[1].scatter(\n    density_model[actv],\n    magsus_model[actv],\n    c=quasi_geology_model[actv],\n    cmap=\"inferno_r\",\n    edgecolors=\"k\",\n    label=\"recovered PGI model\",\n    alpha=0.5,\n)\nax[1].legend()\nax[0].hist(density_model[actv], density=True, bins=50)\nax[2].hist(magsus_model[actv], density=True, bins=50, orientation=\"horizontal\")\nplt.show()","key":"W1piWE1gNs"},{"type":"output","id":"ksgVlS-VsokiwicwZFaJP","data":[{"name":"stdout","output_type":"stream","text":"\nRunning inversion with SimPEG v0.24.0\n\n                    simpeg.InvProblem is setting bfgsH0 to the inverse of the eval2Deriv.\n                    ***Done using the default solver Pardiso and no solver_opts.***\n                    \n"},{"name":"stdout","output_type":"stream","text":"Alpha scales: [np.float64(80491.11898998494), np.float64(0.0), np.float64(59882.71744082574), np.float64(0.0), np.float64(110455.19488363991), np.float64(0.0), np.float64(8123506.380593883), np.float64(0.0), np.float64(6861753.148299084), np.float64(0.0), np.float64(17244871.80023616), np.float64(0.0)]\n"},{"name":"stdout","output_type":"stream","text":"<class 'simpeg.regularization.pgi.PGIsmallness'>\nInitial data misfit scales:  [0.98149078 0.01850922]\nmodel has any nan: 0\n=============================== Projected GNCG ===============================\n  #     beta     phi_d     phi_m       f      |proj(x-g)-x|  LS    Comment   \n-----------------------------------------------------------------------------\nx0 has any nan: 0\n"},{"name":"stdout","output_type":"stream","text":"   0  4.94e-06  4.27e+06  9.99e+04  4.27e+06    2.17e+02      0              \n"},{"name":"stdout","output_type":"stream","text":"geophys. misfits: 249968.0 (target 576.0 [False]); 47330.2 (target 576.0 [False]) | smallness misfit: 321795.4 (target: 23438.0 [False])\nBeta cooling evaluation: progress: [249968.   47330.2]; minimum progress targets: [3470231.3  572697.8]\nmref changed in  833  places\n"},{"name":"stdout","output_type":"stream","text":"   1  4.94e-06  2.46e+05  3.08e+08  2.48e+05    1.40e+01      0              \n"},{"name":"stdout","output_type":"stream","text":"geophys. misfits: 7835.3 (target 576.0 [False]); 923.7 (target 576.0 [False]) | smallness misfit: 50836.1 (target: 23438.0 [False])\nBeta cooling evaluation: progress: [7835.3  923.7]; minimum progress targets: [199974.4  37864.2]\nmref changed in  22  places\n"},{"name":"stdout","output_type":"stream","text":"   2  4.94e-06  7.71e+03  1.38e+08  8.39e+03    2.06e+01      0              \n"},{"name":"stdout","output_type":"stream","text":"geophys. misfits: 4307.6 (target 576.0 [False]); 202.6 (target 576.0 [True]) | smallness misfit: 47345.0 (target: 23438.0 [False])\nUpdating scaling for data misfits by  2.8429293998148273\nNew scales: [0.99341032 0.00658968]\nBeta cooling evaluation: progress: [4307.6  202.6]; minimum progress targets: [6268.3  739. ]\nmref changed in  2  places\n"},{"name":"stdout","output_type":"stream","text":"   3  4.94e-06  4.28e+03  1.31e+08  4.93e+03    2.09e+01      0   Skip BFGS  \n"},{"name":"stdout","output_type":"stream","text":"geophys. misfits: 749.0 (target 576.0 [False]); 273.3 (target 576.0 [True]) | smallness misfit: 44285.6 (target: 23438.0 [False])\nUpdating scaling for data misfits by  2.107669746098398\nNew scales: [0.99686261 0.00313739]\nBeta cooling evaluation: progress: [749.  273.3]; minimum progress targets: [3446.1  691.2]\nmref changed in  1  places\n"},{"name":"stdout","output_type":"stream","text":"   4  4.94e-06  7.47e+02  1.32e+08  1.40e+03    2.19e+01      0   Skip BFGS  \n"},{"name":"stdout","output_type":"stream","text":"geophys. misfits: 425.6 (target 576.0 [True]); 404.4 (target 576.0 [True]) | smallness misfit: 43892.8 (target: 23438.0 [False])\nBeta cooling evaluation: progress: [425.6 404.4]; minimum progress targets: [691.2 691.2]\nWarming alpha_pgi to favor clustering:  1.388841520904108\nmref changed in  2  places\n"},{"name":"stdout","output_type":"stream","text":"   5  4.94e-06  4.26e+02  1.65e+08  1.24e+03    3.50e+01      0   Skip BFGS  \n"},{"name":"stdout","output_type":"stream","text":"geophys. misfits: 451.6 (target 576.0 [True]); 574.5 (target 576.0 [True]) | smallness misfit: 38305.7 (target: 23438.0 [False])\nBeta cooling evaluation: progress: [451.6 574.5]; minimum progress targets: [691.2 691.2]\nWarming alpha_pgi to favor clustering:  1.5820773933075738\nmref changed in  0  places\nAdd mref to Smoothness. Changes in mref happened in 0.0 % of the cells\n"},{"name":"stdout","output_type":"stream","text":"   6  4.94e-06  4.52e+02  1.71e+08  1.30e+03    4.83e+01      0   Skip BFGS  \n"},{"name":"stdout","output_type":"stream","text":"geophys. misfits: 397.4 (target 576.0 [True]); 607.2 (target 576.0 [False]) | smallness misfit: 32531.0 (target: 23438.0 [False])\nUpdating scaling for data misfits by  1.4494012891561963\nNew scales: [0.99545906 0.00454094]\nBeta cooling evaluation: progress: [397.4 607.2]; minimum progress targets: [691.2 691.2]\nmref changed in  0  places\n"},{"name":"stdout","output_type":"stream","text":"   7  4.94e-06  3.98e+02  1.66e+08  1.22e+03    2.42e+01      0              \n"},{"name":"stdout","output_type":"stream","text":"geophys. misfits: 399.0 (target 576.0 [True]); 446.4 (target 576.0 [True]) | smallness misfit: 30246.3 (target: 23438.0 [False])\nBeta cooling evaluation: progress: [399.  446.4]; minimum progress targets: [691.2 691.2]\nWarming alpha_pgi to favor clustering:  2.162688039806705\nmref changed in  0  places\nAdd mref to Smoothness. Changes in mref happened in 0.0 % of the cells\n"},{"name":"stdout","output_type":"stream","text":"   8  4.94e-06  3.99e+02  2.01e+08  1.39e+03    2.20e+01      0   Skip BFGS  \n"},{"name":"stdout","output_type":"stream","text":"geophys. misfits: 425.7 (target 576.0 [True]); 592.9 (target 576.0 [False]) | smallness misfit: 27413.2 (target: 23438.0 [False])\nUpdating scaling for data misfits by  1.353107020885097\nNew scales: [0.99386546 0.00613454]\nBeta cooling evaluation: progress: [425.7 592.9]; minimum progress targets: [691.2 691.2]\nmref changed in  0  places\n"},{"name":"stdout","output_type":"stream","text":"   9  4.94e-06  4.27e+02  1.91e+08  1.37e+03    2.42e+01      0              \n"},{"name":"stdout","output_type":"stream","text":"geophys. misfits: 425.0 (target 576.0 [True]); 454.0 (target 576.0 [True]) | smallness misfit: 27550.1 (target: 23438.0 [False])\nBeta cooling evaluation: progress: [425. 454.]; minimum progress targets: [691.2 691.2]\nWarming alpha_pgi to favor clustering:  2.837683885033024\nmref changed in  0  places\nAdd mref to Smoothness. Changes in mref happened in 0.0 % of the cells\n"},{"name":"stdout","output_type":"stream","text":"  10  4.94e-06  4.25e+02  2.31e+08  1.57e+03    2.88e+01      0              \n"},{"name":"stdout","output_type":"stream","text":"geophys. misfits: 466.3 (target 576.0 [True]); 561.7 (target 576.0 [True]) | smallness misfit: 25080.2 (target: 23438.0 [False])\nBeta cooling evaluation: progress: [466.3 561.7]; minimum progress targets: [691.2 691.2]\nWarming alpha_pgi to favor clustering:  3.2076412848378046\nmref changed in  0  places\nAdd mref to Smoothness. Changes in mref happened in 0.0 % of the cells\n"},{"name":"stdout","output_type":"stream","text":"  11  4.94e-06  4.67e+02  2.40e+08  1.65e+03    2.27e+01      0              \n"},{"name":"stdout","output_type":"stream","text":"geophys. misfits: 478.8 (target 576.0 [True]); 604.9 (target 576.0 [False]) | smallness misfit: 24483.1 (target: 23438.0 [False])\nUpdating scaling for data misfits by  1.2028917842444296\nNew scales: [0.99262999 0.00737001]\nBeta cooling evaluation: progress: [478.8 604.9]; minimum progress targets: [691.2 691.2]\nmref changed in  0  places\n"},{"name":"stdout","output_type":"stream","text":"  12  4.94e-06  4.80e+02  2.37e+08  1.65e+03    2.24e+01      1   Skip BFGS  \n"},{"name":"stdout","output_type":"stream","text":"geophys. misfits: 487.6 (target 576.0 [True]); 545.9 (target 576.0 [True]) | smallness misfit: 24138.9 (target: 23438.0 [False])\nBeta cooling evaluation: progress: [487.6 545.9]; minimum progress targets: [691.2 691.2]\nWarming alpha_pgi to favor clustering:  3.5868250423633135\nmref changed in  0  places\nAdd mref to Smoothness. Changes in mref happened in 0.0 % of the cells\n"},{"name":"stdout","output_type":"stream","text":"  13  4.94e-06  4.88e+02  2.55e+08  1.75e+03    1.47e+01      0   Skip BFGS  \n"},{"name":"stdout","output_type":"stream","text":"geophys. misfits: 507.8 (target 576.0 [True]); 599.2 (target 576.0 [False]) | smallness misfit: 23439.0 (target: 23438.0 [False])\nUpdating scaling for data misfits by  1.1343664834360208\nNew scales: [0.99164798 0.00835202]\nBeta cooling evaluation: progress: [507.8 599.2]; minimum progress targets: [691.2 691.2]\nmref changed in  0  places\n"},{"name":"stdout","output_type":"stream","text":"  14  4.94e-06  5.09e+02  2.50e+08  1.74e+03    1.37e+01      0              \n"},{"name":"stdout","output_type":"stream","text":"geophys. misfits: 508.1 (target 576.0 [True]); 540.7 (target 576.0 [True]) | smallness misfit: 23397.6 (target: 23438.0 [True])\nAll targets have been reached\nBeta cooling evaluation: progress: [508.1 540.7]; minimum progress targets: [691.2 691.2]\nWarming alpha_pgi to favor clustering:  3.943354697430651\nmref changed in  0  places\nAdd mref to Smoothness. Changes in mref happened in 0.0 % of the cells\n------------------------- STOP! -------------------------\n1 : |fc-fOld| = 0.0000e+00 <= tolF*(1+|f0|) = 4.2708e+05\n1 : |xc-x_last| = 2.6715e-02 <= tolX*(1+|x0|) = 1.0153e-01\n0 : |proj(x-g)-x|    = 1.3734e+01 <= tolG          = 1.0000e-01\n0 : |proj(x-g)-x|    = 1.3734e+01 <= 1e3*eps       = 1.0000e-02\n0 : maxIter   =      30    <= iter          =     15\n------------------------- DONE! -------------------------\n"},{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"8c302505d9786e3310671345eec1062b","path":"/user-tutorials/build/8c302505d9786e3310671345eec1062b.png"},"text/plain":{"content":"<Figure size 1500x1000 with 12 Axes>","content_type":"text/plain"}}},{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"542f51efcc45652ff21c972159d738d4","path":"/user-tutorials/build/542f51efcc45652ff21c972159d738d4.png"},"text/plain":{"content":"<Figure size 1000x1000 with 4 Axes>","content_type":"text/plain"}}}],"key":"qfHen0iLgM"}],"key":"fgSU9A6g9G"}],"key":"dJteHAsctU"},"references":{"cite":{"order":[],"data":{}}},"footer":{"navigation":{"prev":{"title":"Cross-gradient Joint Inversion of Gravity and Magnetic Anomaly Data","url":"/plot-inv-3-cross-gradient-pf","group":"Joint Inversion"},"next":{"title":"Joint PGI of Gravity + Magnetic on an Octree mesh without petrophysical information","url":"/plot-inv-2-joint-pf-pgi-no-info-tutorial","group":"PGI Inversion"}}},"domain":"http://localhost:3000"}