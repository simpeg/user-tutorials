{"version":2,"kind":"Notebook","sha256":"6c90ddfbc0c13a91956bc102e28f40802e1d676d9f8f7e00a14ad17fa47688d0","slug":"fwd-ip-2d","location":"/notebooks/06-ip/fwd_ip_2d.ipynb","dependencies":[],"frontmatter":{"title":"2.5D IP Forward Simulation","authors":[{"id":"devincowan","nameParsed":{"literal":"Devin Cowan","given":"Devin","family":"Cowan"},"name":"Devin Cowan","orcid":"0000-0002-0089-402X","roles":["Writing – original draft","Writing – review & editing","Software"],"affiliations":["ubc"]}],"kernelspec":{"name":"python3","display_name":"Python 3 (ipykernel)","language":"python"},"license":{"content":{"id":"CC-BY-4.0","url":"https://creativecommons.org/licenses/by/4.0/","name":"Creative Commons Attribution 4.0 International","free":true,"CC":true},"code":{"id":"MIT","url":"https://opensource.org/licenses/MIT","name":"MIT License","free":true,"osi":true}},"github":"https://github.com/simpeg/user-tutorials","subject":"SimPEG User Tutorials","keywords":["geophysics","inversions","python","open-source"],"affiliations":[{"id":"ubc","name":"University of British Columbia","department":"Department of Earth, Ocean and Atmospheric Sciences","address":"2020 – 2207 Main Mall","city":"Vancouver","state":"British Columbia","postal_code":"V6T 1Z4","country":"Canada","isni":"0000 0001 2288 9830","ror":"https://ror.org/03rmrcq20","phone":"604 822 2449"},{"id":"kobold","name":"Kobold Metals"}],"numbering":{"title":{"offset":1}},"source_url":"https://github.com/simpeg/user-tutorials/blob/main/notebooks/06-ip/fwd_ip_2d.ipynb","edit_url":"https://github.com/simpeg/user-tutorials/edit/main/notebooks/06-ip/fwd_ip_2d.ipynb","exports":[{"format":"ipynb","filename":"fwd_ip_2d.ipynb","url":"/user-tutorials/build/fwd_ip_2d-a0733aa09bc9692496c20d2df2423220.ipynb"}]},"widgets":{},"mdast":{"type":"root","children":[{"type":"block","kind":"notebook-content","children":[{"type":"admonition","children":[{"type":"admonitionTitle","children":[{"type":"text","value":"Intermediate notebook","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"MqPc4jEs4W"}],"key":"oQpGOhIyLy"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"This tutorial focusses on intermediate level functionality within SimPEG. Basic functionality within SimPEG is not discussed in detail, as we assume the user is already familiar.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"KSl2bsYEx9"}],"key":"Ut5BXcZsk3"}],"class":"caution","key":"w1xbSnwJAM"}],"key":"Poki3qjzLy"},{"type":"block","kind":"notebook-content","children":[{"type":"admonition","children":[{"type":"admonitionTitle","children":[{"type":"text","value":"Light-weight notebook","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"ci5gvxiB77"}],"key":"bMPZ8jNFMW"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"This tutorial requires minimal computational resources and can be executed quickly in the background while other computer processes are running.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"tLhy6Ki1EG"}],"key":"YphWhYT6DF"}],"class":"hint","key":"Z5l20mDm77"}],"key":"hW05fo0MK8"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"strong","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Keywords:","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"DIWcaVaT45"}],"key":"UHUjRu9PD6"},{"type":"text","value":" Induced polarization, 2.5D forward simulation, apparent chargeability, tree mesh.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"JAHdl4vvyC"}],"key":"RfsG5ibSYj"},{"type":"paragraph","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"strong","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Summary:","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"Bo1aue4rv4"}],"key":"hcDy8sXkjw"},{"type":"text","value":" Here, we use the ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"h2MGDyiRiw"},{"type":"link","url":"https://docs.simpeg.xyz/latest/content/api/simpeg.electromagnetics.static.induced_polarization.html#module-simpeg.electromagnetics.static.induced_polarization","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"simpeg​.electromagnetics​.static​.induced​_polarization","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"Bf5Ii1JQrA"}],"urlSource":"xref:simpeg#simpeg.electromagnetics.static.induced_polarization","internal":false,"protocol":"xref:sphinx","key":"cB8cOCCK19"},{"type":"text","value":" module to simulate 2.5D DC induced polarization (IP) data on a tree mesh. This approach is ideal when the local geology doesn’t change along the strike direction, as we can leverage the symmetry of the problem to reduce computational cost.","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"mQn7K02RnG"}],"key":"yFQSmUgG5f"},{"type":"paragraph","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"Because the same survey geometry, mesh and topography that are used to simulate DC resistivity data are used simulate IP data, almost all of the fundamental functionality used in this tutorial is described in detail in the ","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"bZAhd5bS4I"},{"type":"link","url":"/fwd-dcr-2d","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"2.5D Forward Simulation of DC Resistivity Data","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"FaRMfMUo66"}],"urlSource":"../05-dcr/fwd_dcr_2d.ipynb","dataUrl":"/fwd-dcr-2d.json","internal":true,"protocol":"file","key":"CVzSuOBPpu"},{"type":"text","value":" tutorial. In this tutorial, we focus primarily on functionality related to the simulation of IP data. More specifically, we discuss:","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"ALsSU5XLuh"}],"key":"ABcEwrOcFG"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":9,"column":1},"end":{"line":11,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"paragraph","children":[{"type":"text","value":"Defining the chargeability model","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"bntQE83WsX"}],"key":"tGcpNEOxQQ"}],"key":"hVqCkRUDR7"},{"type":"listItem","spread":true,"position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"paragraph","children":[{"type":"text","value":"How to simulate IP data","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"bDnkwo5gu0"}],"key":"jxnITn1zgI"}],"key":"LQOof7xbxF"},{"type":"listItem","spread":true,"position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"children":[{"type":"paragraph","children":[{"type":"text","value":"Units of the apparent chargeability model and predicted data","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"I9KZFBbz0V"}],"key":"RAHJWJhN9r"}],"key":"QBbYu2Bsd0"}],"key":"DgFE75xyQs"}],"key":"Thg6xnb6n7"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Import Modules","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"cZ16wYFlq7"}],"identifier":"import-modules","label":"Import Modules","html_id":"import-modules","implicit":true,"key":"tzDV4AVBkp"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Here, we import all of the functionality required to run the notebook for the tutorial exercise. All of the functionality specific to IP is imported from ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"Wh7UqZpFhR"},{"type":"link","url":"https://docs.simpeg.xyz/latest/content/api/simpeg.electromagnetics.static.induced_polarization.html#module-simpeg.electromagnetics.static.induced_polarization","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"simpeg​.electromagnetics​.static​.induced​_polarization","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"k9wSi8HQUc"}],"urlSource":"xref:simpeg#simpeg.electromagnetics.static.induced_polarization","internal":false,"protocol":"xref:sphinx","key":"e6oX08Ggsl"},{"type":"text","value":".\nWe also import some useful utility functions from ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"zOOMR8i6VB"},{"type":"link","url":"https://docs.simpeg.xyz/latest/content/api/simpeg.utils.html#module-simpeg.utils","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"simpeg.utils","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"sr6AIUUlzx"}],"urlSource":"xref:simpeg#simpeg.utils","internal":false,"protocol":"xref:sphinx","key":"QxiSt6CKOU"},{"type":"text","value":". To simulate DC and IP data, we need to define our problem geometry on a numerical grid (or mesh).\nTo generate the mesh, we used the ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"xme64KLCTo"},{"type":"link","url":"https://discretize.simpeg.xyz/en/main","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"discretize","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"sycnA48lgq"}],"urlSource":"https://discretize.simpeg.xyz/en/main","key":"wutDrtNDD8"},{"type":"text","value":" package.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"T92jtb1Jnw"}],"key":"Pp99G0clya"}],"key":"mjiVAvELoP"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2025-05-23T16:55:21.361335Z","iopub.status.busy":"2025-05-23T16:55:21.360879Z","iopub.status.idle":"2025-05-23T16:55:23.144222Z","shell.execute_reply":"2025-05-23T16:55:23.143392Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"# SimPEG functionality\nfrom simpeg.electromagnetics.static import induced_polarization as ip\nfrom simpeg.utils import model_builder\nfrom simpeg.utils.io_utils.io_utils_electromagnetics import write_dcip2d_ubc\nfrom simpeg import maps, data\nfrom simpeg.electromagnetics.static.utils.static_utils import (\n    generate_dcip_sources_line,\n    pseudo_locations,\n    plot_pseudosection,\n)\n\n# discretize functionality\nfrom discretize import TreeMesh\nfrom discretize.utils import active_from_xyz\n\n# Common Python functionality\nimport os\nimport numpy as np\nimport matplotlib as mpl\nimport matplotlib.pyplot as plt\nfrom matplotlib.colors import LogNorm, Normalize\n\nmpl.rcParams.update({\"font.size\": 14})\n\nwrite_output = False  # Optional","key":"ryVaJwbXbN"},{"type":"output","id":"r_8q_kK_c9iucv48d2r78","data":[],"key":"v51mr6CEOb"}],"key":"KPXKIqXNR3"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Define the Topography","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"psWifExwdl"}],"identifier":"define-the-topography","label":"Define the Topography","html_id":"define-the-topography","implicit":true,"key":"ei9Ekv8Dv6"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"True surface topography is defined as an (N, 3) ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"NHarL073hs"},{"type":"link","url":"https://numpy.org/doc/stable/reference/generated/numpy.ndarray.html#numpy.ndarray","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"numpy.ndarray","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"jabEkwUYfl"}],"urlSource":"xref:numpy#numpy.ndarray","internal":false,"protocol":"xref:sphinx","key":"PcKxMLNOdO"},{"type":"text","value":".\nFor use in a 2.5D simulation however, topography is defined as an (N, 2) ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"GMJRD78AkT"},{"type":"link","url":"https://numpy.org/doc/stable/reference/generated/numpy.ndarray.html#numpy.ndarray","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"numpy.ndarray","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"dOxhv5rOBw"}],"urlSource":"xref:numpy#numpy.ndarray","internal":false,"protocol":"xref:sphinx","key":"fRM6HsOeWy"},{"type":"text","value":", where the first coordinate represent along-line position and the second coordinate represents the vertical position. Here, we define the 2D topography used for the 2.5D simulation.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"AXHW0tmSJP"}],"key":"BbuXtCFi3U"}],"key":"ssn87FIeAl"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2025-05-23T16:55:23.148205Z","iopub.status.busy":"2025-05-23T16:55:23.147757Z","iopub.status.idle":"2025-05-23T16:55:23.152868Z","shell.execute_reply":"2025-05-23T16:55:23.152383Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"# Along-line locations\nx_topo = np.linspace(-2000, 2000, 401)\n\n# Elevation as a function of along-line location\nT = 800.0\nz_topo = 20.0 * np.sin(2 * np.pi * x_topo / T) + 140.0\nz_topo[x_topo < -3 * T / 4] = 160.0\nz_topo[x_topo > 3 * T / 4] = 120.0\nz_topo += 50.0 * (1.0 + np.tanh(-3 * (x_topo + 1200.0) / T))\nz_topo -= 50.0 * (1.0 + np.tanh(3 * (x_topo - 1200.0) / T))\n\n# Define full 2D topography\ntopo_2d = np.c_[x_topo, z_topo]","key":"b4eiawgjA9"},{"type":"output","id":"PKywA-Q592_GABWBXjO4u","data":[],"key":"vBTuGGQIUj"}],"key":"pZPvPwNjVR"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2025-05-23T16:55:23.156027Z","iopub.status.busy":"2025-05-23T16:55:23.155723Z","iopub.status.idle":"2025-05-23T16:55:23.291906Z","shell.execute_reply":"2025-05-23T16:55:23.291318Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"# Plot 2D topography\nfig = plt.figure(figsize=(10, 2))\nax = fig.add_axes([0.1, 0.1, 0.8, 0.8])\nax.plot(x_topo, z_topo, color=\"b\", linewidth=2)\nax.set_xlabel(\"x (m)\", labelpad=5)\nax.set_ylabel(\"z (m)\", labelpad=5)\nax.grid(True)\nax.set_title(\"Topography (Exaggerated z-axis)\", fontsize=16, pad=10)\nplt.show(fig)","key":"nlGOxVzwv7"},{"type":"output","id":"cOMz6zL3ycR9HzqJdVXSz","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"ca3e077a299b2efdc2e6c260f8dc430e","path":"/user-tutorials/build/ca3e077a299b2efdc2e6c260f8dc430e.png"},"text/plain":{"content":"<Figure size 1000x200 with 1 Axes>","content_type":"text/plain"}}}],"key":"r7xZLj87M6"}],"key":"B36nITAVDk"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Define the IP Survey","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"GLaqZ68war"}],"identifier":"define-the-ip-survey","label":"Define the IP Survey","html_id":"define-the-ip-survey","implicit":true,"key":"NdV0XTTmIi"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"A full description of elements required to define DC and IP surveys was presented in the ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"zo3LMMRZ3S"},{"type":"link","url":"/fwd-dcr-2d","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"2.5D Forward Simulation of DC Resistivity Data","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"BiCypsvbQE"}],"urlSource":"../05-dcr/fwd_dcr_2d.ipynb","dataUrl":"/fwd-dcr-2d.json","internal":true,"protocol":"file","key":"nbCy8zgZRm"},{"type":"text","value":" tutorial. Here, we take the same approach. The only difference is that our receivers are defined to measure apparent chargeabilities. Because SimPEG uses a linearized formulation for simulating IP data; see ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"bgCQwUOmgC"},{"type":"link","url":"https://docs.simpeg.xyz/latest/content/api/generated/simpeg.electromagnetics.static.induced_polarization.Simulation2DCellCentered.html#simpeg.electromagnetics.static.induced_polarization.simulation2dcellcentered","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Simulation2DCellCentered","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"dGwtAogA6j"}],"urlSource":"xref:simpeg#simpeg.electromagnetics.static.induced_polarization.Simulation2DCellCentered","internal":false,"protocol":"xref:sphinx","key":"vIq8TKA7wg"},{"type":"text","value":" or ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"mJTHHOyJcE"},{"type":"link","url":"https://docs.simpeg.xyz/latest/content/api/generated/simpeg.electromagnetics.static.induced_polarization.Simulation2DNodal.html#simpeg.electromagnetics.static.induced_polarization.simulation2dnodal","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Simulation2DNodal","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"sDrVATlwY5"}],"urlSource":"xref:simpeg#simpeg.electromagnetics.static.induced_polarization.Simulation2DNodal","internal":false,"protocol":"xref:sphinx","key":"CrNG4aftQ1"},{"type":"text","value":", the units of the apparent chargeability data are the same as the units chosen to represent the subsurface chargeabilities.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"Cuh01U3BYH"}],"key":"HkbWFpueWd"},{"type":"paragraph","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"The survey line is an 800 m long EW dipole-dipole line with an electrode spacing of 40 m. There is a maximum of 10 potential electrodes per current electrode.","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"jfcXEbB2rT"}],"key":"iVOD4fQbvH"}],"key":"Gwd5aWLqR9"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2025-05-23T16:55:23.295204Z","iopub.status.busy":"2025-05-23T16:55:23.294704Z","iopub.status.idle":"2025-05-23T16:55:23.298383Z","shell.execute_reply":"2025-05-23T16:55:23.297899Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"# Define survey line parameters\nsurvey_type = \"dipole-dipole\"\ndimension_type = \"2D\"\ndata_type = \"apparent_chargeability\"\nend_locations = np.r_[-400.0, 400.0]\nstation_separation = 40.0\nnum_rx_per_src = 10","key":"q2OCjawp1r"},{"type":"output","id":"KoCq_vqPLx1R-2be84tz-","data":[],"key":"KpThdm9SoC"}],"key":"MqPX29oDKz"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2025-05-23T16:55:23.301249Z","iopub.status.busy":"2025-05-23T16:55:23.301029Z","iopub.status.idle":"2025-05-23T16:55:23.307888Z","shell.execute_reply":"2025-05-23T16:55:23.307186Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"ip_source_list = generate_dcip_sources_line(\n    survey_type,\n    data_type,\n    dimension_type,\n    end_locations,\n    topo_2d,\n    num_rx_per_src,\n    station_separation,\n)\n\nip_survey = ip.survey.Survey(ip_source_list)","key":"QmZnl8O9cw"},{"type":"output","id":"RZTK7c9Y3zgw19mglSiex","data":[],"key":"ZGFOnJlcGq"}],"key":"QgUk7P2wPy"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2025-05-23T16:55:23.310845Z","iopub.status.busy":"2025-05-23T16:55:23.310495Z","iopub.status.idle":"2025-05-23T16:55:23.549971Z","shell.execute_reply":"2025-05-23T16:55:23.549369Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"pseudo_locations_xz = pseudo_locations(ip_survey)\nfig = plt.figure(figsize=(8, 2.75))\nax = fig.add_axes([0.1, 0.1, 0.85, 0.8])\nax.scatter(pseudo_locations_xz[:, 0], pseudo_locations_xz[:, -1], 8, \"r\")\nax.set_xlabel(\"x (m)\")\nax.set_ylabel(\"z (m)\")\nax.set_title(\"Pseudo-locations\")\nplt.show()","key":"MPingevnOk"},{"type":"output","id":"BNnLnvgPVpLwhtroQQcu3","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"da0964f7399508369cf4e6b2822247ce","path":"/user-tutorials/build/da0964f7399508369cf4e6b2822247ce.png"},"text/plain":{"content":"<Figure size 800x275 with 1 Axes>","content_type":"text/plain"}}}],"key":"uDdcqT3e2q"}],"key":"zM0mmao0Ba"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Design a (Tree) Mesh","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"RBuftJzNUG"}],"identifier":"design-a-tree-mesh","label":"Design a (Tree) Mesh","html_id":"design-a-tree-mesh","implicit":true,"key":"boDecsnXzB"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Here, we generate a tree mesh based on the survey geometry. The best-practice approach for generating meshes for DC/IP simulations is provided in the ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"ki0OAsrGD4"},{"type":"link","url":"/fwd-dcr-2d","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"2.5D Forward Simulation of DC Resistivity Data","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"QIeV09bo9K"}],"urlSource":"../05-dcr/fwd_dcr_2d.ipynb","dataUrl":"/fwd-dcr-2d.json","internal":true,"protocol":"file","key":"xlzAjVx7on"},{"type":"text","value":" tutorial.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"oRI1ctdExj"}],"key":"waQMxuMM0Q"}],"key":"Hw4r9mfM42"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2025-05-23T16:55:23.553706Z","iopub.status.busy":"2025-05-23T16:55:23.553376Z","iopub.status.idle":"2025-05-23T16:55:23.600578Z","shell.execute_reply":"2025-05-23T16:55:23.599750Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"dh = 4  # base cell width\ndom_width_x = 3200.0  # domain width x\ndom_width_z = 2400.0  # domain width z\nnbcx = 2 ** int(np.round(np.log(dom_width_x / dh) / np.log(2.0)))  # num. base cells x\nnbcz = 2 ** int(np.round(np.log(dom_width_z / dh) / np.log(2.0)))  # num. base cells z\n\n# Define the base mesh with top at z = 0 m.\nhx = [(dh, nbcx)]\nhz = [(dh, nbcz)]\nmesh = TreeMesh([hx, hz], x0=\"CN\", diagonal_balance=True)\n\n# Shift top to maximum topography\nmesh.origin = mesh.origin + np.r_[0.0, z_topo.max()]\n\n# Mesh refinement based on topography\nmesh.refine_surface(\n    topo_2d,\n    padding_cells_by_level=[0, 0, 4, 4],\n    finalize=False,\n)\n\n# Extract unique electrode locations.\nunique_locations = ip_survey.unique_electrode_locations\n\n# Mesh refinement near electrodes.\nmesh.refine_points(\n    unique_locations, padding_cells_by_level=[8, 12, 6, 6], finalize=False\n)\n\nmesh.finalize()","key":"fZ3luq77Gs"},{"type":"output","id":"CHKfnTUANRL83vCrtesYS","data":[],"key":"cLGQTc3WjR"}],"key":"OJE2AgrZ6t"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Define the Active Cells","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"rMONpjFJLk"}],"identifier":"define-the-active-cells","label":"Define the Active Cells","html_id":"define-the-active-cells","implicit":true,"key":"tiG5XBD7nn"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Use the ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"VjTmkmphxK"},{"type":"link","url":"https://discretize.simpeg.xyz/en/main/api/generated/discretize.utils.active_from_xyz.html#discretize.utils.active_from_xyz","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"active_from_xyz","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"AxPxGsDEz2"}],"urlSource":"xref:discretize#discretize.utils.active_from_xyz","internal":false,"protocol":"xref:sphinx","key":"BlX30vtqks"},{"type":"text","value":" utility function to obtain the indices of the active mesh cells from topography (e.g. cells below surface).","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"EP0yttMPyX"}],"key":"grlKpLRgru"}],"key":"RvovFO1eac"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2025-05-23T16:55:23.604038Z","iopub.status.busy":"2025-05-23T16:55:23.603755Z","iopub.status.idle":"2025-05-23T16:55:23.608519Z","shell.execute_reply":"2025-05-23T16:55:23.607989Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"# Indices of the active mesh cells from topography (e.g. cells below surface)\nactive_cells = active_from_xyz(mesh, topo_2d)\n\n# number of active cells\nn_active = np.sum(active_cells)","key":"MAqk6DTvbi"},{"type":"output","id":"N6EzR4OYx2u0mPAxMzK9Z","data":[],"key":"UQwkvkXJ8e"}],"key":"edaB4DWkhP"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Define the Background Conductivity/Resistivity","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"yt27LItlHE"}],"identifier":"define-the-background-conductivity-resistivity","label":"Define the Background Conductivity/Resistivity","html_id":"define-the-background-conductivity-resistivity","implicit":true,"key":"hrIqfDF40d"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"In order to simulate IP data, we require the background conductivity/resistivity defined on the entire mesh. You can generate this directly, or apply the appropriate mapping to a different parameterization of the conductivity/resistivity.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"HKjf3963OH"}],"key":"znetJDoonu"},{"type":"paragraph","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"For the tutorial, we generate the conductivity model that was used for the ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"ttr7jn6eqJ"},{"type":"link","url":"/fwd-dcr-2d","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"2.5D Forward Simulation of DC Resistivity Data","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"kqfYNOYHnW"}],"urlSource":"../05-dcr/fwd_dcr_2d.ipynb","dataUrl":"/fwd-dcr-2d.json","internal":true,"protocol":"file","key":"qCFpym7GZA"},{"type":"text","value":" tutorial; i.e. the electrical conductivities of all active cells. And so we must use the ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"DJip0TLlA3"},{"type":"link","url":"https://docs.simpeg.xyz/latest/content/api/generated/simpeg.maps.InjectActiveCells.html#simpeg.maps.injectactivecells","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"simpeg​.maps​.InjectActiveCells","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"ZQJrnuzG6S"}],"urlSource":"xref:simpeg#simpeg.maps.InjectActiveCells","internal":false,"protocol":"xref:sphinx","key":"WW6wAVYw5J"},{"type":"text","value":" mapping to map from the model space to the conductivities on the entire mesh.","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"NTpuqPukxu"}],"key":"z9OoUrXvZI"}],"key":"fESWRVcGIb"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2025-05-23T16:55:23.612051Z","iopub.status.busy":"2025-05-23T16:55:23.611713Z","iopub.status.idle":"2025-05-23T16:55:23.615203Z","shell.execute_reply":"2025-05-23T16:55:23.614629Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"# Define electrical conductivities in S/m\nair_conductivity = 1e-8\nbackground_conductivity = 1e-2\nconductor_conductivity = 1e-1\nresistor_conductivity = 1e-3","key":"VJOajcclqc"},{"type":"output","id":"TFGEc3TjehJnhFDVEU9D1","data":[],"key":"nXDvPpVGJ7"}],"key":"qMP8gUAYe8"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2025-05-23T16:55:23.618037Z","iopub.status.busy":"2025-05-23T16:55:23.617703Z","iopub.status.idle":"2025-05-23T16:55:23.623579Z","shell.execute_reply":"2025-05-23T16:55:23.622771Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"# Define conductivity model\nconductivity_model = background_conductivity * np.ones(n_active)\n\nind_conductor = model_builder.get_indices_sphere(\n    np.r_[-120.0, 40.0], 60.0, mesh.cell_centers[active_cells, :]\n)\nconductivity_model[ind_conductor] = conductor_conductivity\n\nind_resistor = model_builder.get_indices_sphere(\n    np.r_[120.0, 72.0], 60.0, mesh.cell_centers[active_cells, :]\n)\nconductivity_model[ind_resistor] = resistor_conductivity","key":"YVWVc9zxfx"},{"type":"output","id":"bRdUjQO4WwCdPpRnwDwoj","data":[],"key":"vJ7j1jzz7l"}],"key":"eFJDFoSLs4"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2025-05-23T16:55:23.626501Z","iopub.status.busy":"2025-05-23T16:55:23.626202Z","iopub.status.idle":"2025-05-23T16:55:23.631766Z","shell.execute_reply":"2025-05-23T16:55:23.631057Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"# Mapping from conductivity model to mesh\nconductivity_map = maps.InjectActiveCells(mesh, active_cells, air_conductivity)","key":"uplQnkkVnh"},{"type":"output","id":"hT3TbXhSO21KaqN2M1nFS","data":[],"key":"l2bCTbsccm"}],"key":"WzDquL2YMr"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2025-05-23T16:55:23.634465Z","iopub.status.busy":"2025-05-23T16:55:23.634207Z","iopub.status.idle":"2025-05-23T16:55:23.639233Z","shell.execute_reply":"2025-05-23T16:55:23.638532Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"# Mapping to neglect air cells when plotting\nplotting_map = maps.InjectActiveCells(mesh, active_cells, np.nan)","key":"fyTx4gf6RJ"},{"type":"output","id":"isZDstDtEQ5aHOxrLG-08","data":[],"key":"OsraK8JVQx"}],"key":"msiav5y2Xw"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2025-05-23T16:55:23.642425Z","iopub.status.busy":"2025-05-23T16:55:23.642044Z","iopub.status.idle":"2025-05-23T16:55:24.030897Z","shell.execute_reply":"2025-05-23T16:55:24.030245Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"fig = plt.figure(figsize=(9, 4))\nnorm = LogNorm(vmin=1e-3, vmax=1e-1)\n\nax1 = fig.add_axes([0.14, 0.17, 0.68, 0.7])\nmesh.plot_image(\n    plotting_map * conductivity_model,\n    ax=ax1,\n    grid=False,\n    pcolor_opts={\"norm\": norm, \"cmap\": mpl.cm.RdYlBu_r},\n)\nax1.set_xlim(-500, 500)\nax1.set_ylim(-300, 200)\nax1.set_title(\"Background Conductivity Model\")\nax1.set_xlabel(\"x (m)\")\nax1.set_ylabel(\"z (m)\")\n\nax2 = fig.add_axes([0.84, 0.17, 0.03, 0.7])\ncbar = mpl.colorbar.ColorbarBase(\n    ax2, norm=norm, orientation=\"vertical\", cmap=mpl.cm.RdYlBu_r\n)\ncbar.set_label(r\"$\\sigma$ (S/m)\", rotation=270, labelpad=15, size=12)\n\nplt.show()","key":"SzFhkZmUFL"},{"type":"output","id":"wFCybC3VLVqCGyZEQMfYt","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"f6d02ac088c71fad1f0161507134c7e9","path":"/user-tutorials/build/f6d02ac088c71fad1f0161507134c7e9.png"},"text/plain":{"content":"<Figure size 900x400 with 2 Axes>","content_type":"text/plain"}}}],"key":"sQkPexRoYM"}],"key":"o59ALdwjfz"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Define the Chargeability Model and Mapping","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"xUH3eFUkqg"}],"identifier":"define-the-chargeability-model-and-mapping","label":"Define the Chargeability Model and Mapping","html_id":"define-the-chargeability-model-and-mapping","implicit":true,"key":"gec6L8R6R3"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"The model does not need to be synonymous with the physical property values. But it is common to define chargeability models as the chargeabilities for all subsurface (active) cells. So, what are the units?","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"uwNWdzXbKU"}],"key":"IEbEehEc7R"},{"type":"paragraph","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"SimPEG uses a linearized formulation for simulating IP data; see ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"gopAcFOkUi"},{"type":"link","url":"https://docs.simpeg.xyz/latest/content/api/generated/simpeg.electromagnetics.static.induced_polarization.Simulation2DCellCentered.html#simpeg.electromagnetics.static.induced_polarization.simulation2dcellcentered","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Simulation2DCellCentered","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"ZioI3XyhTr"}],"urlSource":"xref:simpeg#simpeg.electromagnetics.static.induced_polarization.Simulation2DCellCentered","internal":false,"protocol":"xref:sphinx","key":"rtTxah2LFw"},{"type":"text","value":" or ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"o3voBGKs1y"},{"type":"link","url":"https://docs.simpeg.xyz/latest/content/api/generated/simpeg.electromagnetics.static.induced_polarization.Simulation2DNodal.html#simpeg.electromagnetics.static.induced_polarization.simulation2dnodal","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Simulation2DNodal","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"lUMBkF6CeG"}],"urlSource":"xref:simpeg#simpeg.electromagnetics.static.induced_polarization.Simulation2DNodal","internal":false,"protocol":"xref:sphinx","key":"ZckBDsqRsn"},{"type":"text","value":". In this formulation, any standard definition of the chargeability can be used. And the resulting apparent chargeability data will be in terms of the same units; e.g. intrinsic chargeability (V/V or mV/V) or integrated chargeability (ms). If you are simulating secondary voltages, the chargeability model must represent intrinsic chargeabilities (","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"W2bXTGwSGx"},{"type":"inlineMath","value":"0 \\leq \\eta \\leq 1","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>0</mn><mo>≤</mo><mi>η</mi><mo>≤</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">0 \\leq \\eta \\leq 1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7804em;vertical-align:-0.136em;\"></span><span class=\"mord\">0</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8304em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">η</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1</span></span></span></span>","key":"fh4khZ44VL"},{"type":"text","value":") in V/V.","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"DydkMWc6sf"}],"key":"hv0ql8pBhI"},{"type":"paragraph","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"For this tutorial, we use the intrinsic chargeability in units V/V. Here, the conductive sphere is chargeable, but the resistive sphere and the host are not. Note that unlike DC resistivity, the physical property value defining air cells for IP simulation can be set to zero.","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"U5LFlk1nm9"}],"key":"wZdLYEFgee"}],"key":"xzp6pT069G"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2025-05-23T16:55:24.034331Z","iopub.status.busy":"2025-05-23T16:55:24.034112Z","iopub.status.idle":"2025-05-23T16:55:24.037540Z","shell.execute_reply":"2025-05-23T16:55:24.037050Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"# Intrinsic chargeability in V/V (unitless).\nair_chargeability = 0.0\nbackground_chargeability = 0.0\nsphere_chargeability = 1e-1","key":"VtguEdukNo"},{"type":"output","id":"e0HI54aHkMvfzUMRsUP5I","data":[],"key":"yndV492AW5"}],"key":"ESMKgVF3sq"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2025-05-23T16:55:24.040613Z","iopub.status.busy":"2025-05-23T16:55:24.040372Z","iopub.status.idle":"2025-05-23T16:55:24.044582Z","shell.execute_reply":"2025-05-23T16:55:24.043779Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"# Define chargeability model\nchargeability_model = background_chargeability * np.ones(n_active)\n\nind_chargeable = model_builder.get_indices_sphere(\n    np.r_[-120.0, 40.0], 60.0, mesh.cell_centers[active_cells, :]\n)\nchargeability_model[ind_chargeable] = sphere_chargeability","key":"YlQySUKUZF"},{"type":"output","id":"YSD9mO7byIoIuEJwODqb4","data":[],"key":"E8nmBKcWyQ"}],"key":"ri5HgoQrkU"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2025-05-23T16:55:24.047062Z","iopub.status.busy":"2025-05-23T16:55:24.046779Z","iopub.status.idle":"2025-05-23T16:55:24.050757Z","shell.execute_reply":"2025-05-23T16:55:24.050202Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"# Define mapping for chargeability\nchargeability_map = maps.InjectActiveCells(mesh, active_cells, air_chargeability)","key":"yuYbKQrNhJ"},{"type":"output","id":"CjBdCFsiaeRjzT3MD3kM9","data":[],"key":"ZKK5UPHmrz"}],"key":"rXdpg6V4VB"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2025-05-23T16:55:24.053222Z","iopub.status.busy":"2025-05-23T16:55:24.052958Z","iopub.status.idle":"2025-05-23T16:55:24.262804Z","shell.execute_reply":"2025-05-23T16:55:24.262133Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"# Plot Chargeability Model\nfig = plt.figure(figsize=(9, 4))\n\nnorm = Normalize(vmin=0.0, vmax=0.1)\n\nax1 = fig.add_axes([0.14, 0.17, 0.68, 0.7])\nmesh.plot_image(\n    plotting_map * chargeability_model,\n    ax=ax1,\n    grid=False,\n    pcolor_opts={\"cmap\": mpl.cm.plasma, \"norm\": norm},\n)\nax1.set_xlim(-500, 500)\nax1.set_ylim(-300, 200)\nax1.set_title(\"Intrinsic Chargeability\")\nax1.set_xlabel(\"x (m)\")\nax1.set_ylabel(\"z (m)\")\n\nax2 = fig.add_axes([0.84, 0.17, 0.03, 0.7])\ncbar = mpl.colorbar.ColorbarBase(\n    ax2, norm=norm, orientation=\"vertical\", cmap=mpl.cm.plasma\n)\ncbar.set_label(\"Intrinsic Chargeability (V/V)\", rotation=270, labelpad=15, size=12)\n\nplt.show()","key":"mr7FJMqizj"},{"type":"output","id":"eMy7MF82q_uDEywcdvsyb","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"8bdec477f9412d6f2c081d759559288f","path":"/user-tutorials/build/8bdec477f9412d6f2c081d759559288f.png"},"text/plain":{"content":"<Figure size 900x400 with 2 Axes>","content_type":"text/plain"}}}],"key":"UVummH7tB5"}],"key":"IiTaCmULv8"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Project Electrodes to Discretized Topography","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Ni0vmL5Ol0"}],"identifier":"project-electrodes-to-discretized-topography","label":"Project Electrodes to Discretized Topography","html_id":"project-electrodes-to-discretized-topography","implicit":true,"key":"DrIPpkGv9P"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"As explained in the ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"lkDaIp6FGz"},{"type":"link","url":"/fwd-dcr-2d","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"2.5D Forward Simulation of DC Resistivity Data","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"UWWXNTYkWc"}],"urlSource":"../05-dcr/fwd_dcr_2d.ipynb","dataUrl":"/fwd-dcr-2d.json","internal":true,"protocol":"file","key":"ONgvoyITYA"},{"type":"text","value":" tutorial, we use the ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"gIpUgBkv31"},{"type":"link","url":"https://docs.simpeg.xyz/latest/content/api/generated/simpeg.electromagnetics.static.resistivity.Survey.drape_electrodes_on_topography.html#simpeg.electromagnetics.static.resistivity.survey.drape_electrodes_on_topography","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"drape​_electrodes​_on​_topography","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"p64o6R1UyE"}],"urlSource":"xref:simpeg#simpeg.electromagnetics.static.resistivity.Survey.drape_electrodes_on_topography","internal":false,"protocol":"xref:sphinx","key":"sBoZB60piB"},{"type":"text","value":" method to project the electrodes to the discrete surface topography.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"GR6N62aulx"}],"key":"RBb8OvjmrG"}],"key":"CFugdMbJCQ"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2025-05-23T16:55:24.265973Z","iopub.status.busy":"2025-05-23T16:55:24.265676Z","iopub.status.idle":"2025-05-23T16:55:24.272839Z","shell.execute_reply":"2025-05-23T16:55:24.272244Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"ip_survey.drape_electrodes_on_topography(mesh, active_cells, option=\"top\")","key":"Afyy8M12Pn"},{"type":"output","id":"ljRwWfsFb1XxMMLBOfKt-","data":[],"key":"RLqlrNMtmS"}],"key":"KpU1PAZWzu"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Define the IP Simulation","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"I1RDTIk61v"}],"identifier":"define-the-ip-simulation","label":"Define the IP Simulation","html_id":"define-the-ip-simulation","implicit":true,"key":"XBT7Y07Mqk"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"There are two simulation classes which may be used to simulate 2.5D IP data:","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"U4WyOSYGqb"}],"key":"LilV6wtCDw"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":5,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"paragraph","children":[{"type":"link","url":"https://docs.simpeg.xyz/latest/content/api/generated/simpeg.electromagnetics.static.induced_polarization.Simulation2DNodal.html#simpeg.electromagnetics.static.induced_polarization.simulation2dnodal","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Simulation2DNodel","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"HZCOcNuo9l"}],"urlSource":"xref:simpeg#simpeg.electromagnetics.static.induced_polarization.Simulation2DNodal","internal":false,"protocol":"xref:sphinx","key":"XjURLJ7wuK"},{"type":"text","value":", which defines the discrete electric potentials on mesh nodes.","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"LDFRCB7fnc"}],"key":"bOes2bJ7iJ"}],"key":"qKjkRJRaAE"},{"type":"listItem","spread":true,"position":{"start":{"line":6,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"paragraph","children":[{"type":"link","url":"https://docs.simpeg.xyz/latest/content/api/generated/simpeg.electromagnetics.static.induced_polarization.Simulation2DCellCentered.html#simpeg.electromagnetics.static.induced_polarization.simulation2dcellcentered","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"Simulation2DCellCentered","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"oeRM4c5Kfv"}],"urlSource":"xref:simpeg#simpeg.electromagnetics.static.induced_polarization.Simulation2DCellCentered","internal":false,"protocol":"xref:sphinx","key":"PSueQRFASG"},{"type":"text","value":", which defines the discrete electric potentials at cell centers.","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"ophdL9pWEh"}],"key":"tvfcOzgDaw"}],"key":"QKDkeMxD42"}],"key":"EPibUsSgId"},{"type":"paragraph","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"For surface DC and IP data, the nodal formulation is more well-suited and will be used here. The cell-centered formulation works well for simulating borehole DC and IP data. To fully define the forward simulation, we need to connect the simulation object to:","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"ORBn8gjcdG"}],"key":"oxVZxSpgsE"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":10,"column":1},"end":{"line":14,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"paragraph","children":[{"type":"text","value":"the survey","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"zXjSIFtgWU"}],"key":"IKqoM56qcj"}],"key":"s2HyZ32qts"},{"type":"listItem","spread":true,"position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"children":[{"type":"paragraph","children":[{"type":"text","value":"the mesh","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"qfoylvug45"}],"key":"dmP3YcHTyC"}],"key":"nGJYKEjjHL"},{"type":"listItem","spread":true,"position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"children":[{"type":"paragraph","children":[{"type":"text","value":"a background conductivity or resistivity model","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"key":"uVGO2cY2Vq"}],"key":"kSACeYP7fb"}],"key":"BfQLZhI6tL"},{"type":"listItem","spread":true,"position":{"start":{"line":13,"column":1},"end":{"line":14,"column":1}},"children":[{"type":"paragraph","children":[{"type":"text","value":"the mapping from the chargeability model to the mesh","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"key":"MdJ1soVP33"}],"key":"M5goXVcQj8"}],"key":"Fv1TrdO0Cp"}],"key":"qYbzHMBvuC"},{"type":"paragraph","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"children":[{"type":"text","value":"If working with electrical conductivity, use the ","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"key":"Y4IZstDAlU"},{"type":"inlineCode","value":"sigma","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"key":"XhbcOHcWSq"},{"type":"text","value":" keyword argument to define the background conductivity on the entire mesh. If working with electrical resistivity, use the ","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"key":"vL6GOFSWsc"},{"type":"inlineCode","value":"rho","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"key":"HOxHevAtEh"},{"type":"text","value":" keyword argument to define the background resistivity on the entire mesh. The ","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"key":"LQYLnGU0Yn"},{"type":"inlineCode","value":"etaMap","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"key":"NKsSqxVU61"},{"type":"text","value":" is used to define the mapping from the chargeability model to the chargeabilities on the entire mesh.","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"key":"CmiavQLJvw"}],"key":"kuePSI1qHW"}],"key":"d1j02BGwCT"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2025-05-23T16:55:24.275859Z","iopub.status.busy":"2025-05-23T16:55:24.275567Z","iopub.status.idle":"2025-05-23T16:55:24.721524Z","shell.execute_reply":"2025-05-23T16:55:24.720796Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"ip_simulation = ip.Simulation2DNodal(\n    mesh,\n    survey=ip_survey,\n    etaMap=chargeability_map,\n    sigma=conductivity_map * conductivity_model,\n)","key":"FyH0glKhGu"},{"type":"output","id":"GtJGRL4H1mLatJaQDgMks","data":[],"key":"YbG6H5WwYh"}],"key":"XN6KarLiBV"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Simulate IP Data","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"ILpRaqYW1R"}],"identifier":"simulate-ip-data","label":"Simulate IP Data","html_id":"simulate-ip-data","implicit":true,"key":"xHi0OBk9yu"}],"key":"leZfjXQIc6"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2025-05-23T16:55:24.724451Z","iopub.status.busy":"2025-05-23T16:55:24.724162Z","iopub.status.idle":"2025-05-23T16:55:28.127399Z","shell.execute_reply":"2025-05-23T16:55:28.123968Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"dpred_ip = ip_simulation.dpred(chargeability_model)","key":"wrUeMtesyD"},{"type":"output","id":"sxg8qqvMpdlYdQ6baYYtE","data":[{"name":"stderr","output_type":"stream","text":"/t40array/ssoler/miniforge3/envs/simpeg-user-tutorials/lib/python3.12/site-packages/simpeg/electromagnetics/static/resistivity/simulation_2d.py:768: RuntimeWarning: invalid value encountered in divide\n  r_hat = r_vec / r[:, None]\n/t40array/ssoler/miniforge3/envs/simpeg-user-tutorials/lib/python3.12/site-packages/simpeg/electromagnetics/static/resistivity/simulation_2d.py:795: RuntimeWarning: invalid value encountered in divide\n  alpha[not_top] = (ky * k1e(ky * r) / k0e(ky * r) * r_dot_n)[not_top]\n/t40array/ssoler/miniforge3/envs/simpeg-user-tutorials/lib/python3.12/site-packages/simpeg/base/pde_simulation.py:490: DefaultSolverWarning: Using the default solver: Pardiso. \n\nIf you would like to suppress this notification, add \nwarnings.filterwarnings('ignore', simpeg.utils.solver_utils.DefaultSolverWarning)\n to your script.\n  return get_default_solver(warn=True)\n"}],"key":"vwXAVIjLzz"}],"key":"bpbHbawwcq"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Plot IP Data in Pseudosection","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"JWH62NFgvK"}],"identifier":"plot-ip-data-in-pseudosection","label":"Plot IP Data in Pseudosection","html_id":"plot-ip-data-in-pseudosection","implicit":true,"key":"YwtW35V5Rj"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Here we use the ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"mDtNDikfzy"},{"type":"link","url":"simpeg#simpeg.electromagnetics.static.utils.plot_pseudosection","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"plot_pseudosection","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"iKLVCP8sAJ"}],"urlSource":"simpeg#simpeg.electromagnetics.static.utils.plot_pseudosection","key":"nWkymRyD76"},{"type":"text","value":" utility function to represent predicted data on pseudosection plots.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"iKJjuYRYTX"}],"key":"gnLy4C971Y"}],"key":"weQARxkTdk"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2025-05-23T16:55:28.132866Z","iopub.status.busy":"2025-05-23T16:55:28.132260Z","iopub.status.idle":"2025-05-23T16:55:28.375898Z","shell.execute_reply":"2025-05-23T16:55:28.375257Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"fig = plt.figure(figsize=(9, 4))\n\nax1 = fig.add_axes([0.1, 0.1, 0.7, 0.8])\ncax1 = fig.add_axes([0.82, 0.1, 0.025, 0.8])\nplot_pseudosection(\n    ip_survey,\n    dpred_ip,\n    \"contourf\",\n    ax=ax1,\n    cax=cax1,\n    scale=\"linear\",\n    cbar_label=\"V/V\",\n    mask_topography=True,\n    contourf_opts={\"levels\": 20, \"cmap\": mpl.cm.plasma},\n)\nax1.set_title(\"Apparent Chargeability (V/V)\")\n\nplt.show()","key":"IPRbn2rGua"},{"type":"output","id":"IGXcyXPgsJUx6VXwpGNIu","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"dddb609bda0fe386431ffbaf677c8a41","path":"/user-tutorials/build/dddb609bda0fe386431ffbaf677c8a41.png"},"text/plain":{"content":"<Figure size 900x400 with 2 Axes>","content_type":"text/plain"}}}],"key":"ty0VdgABh1"}],"key":"fuJn9T82I0"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"strong","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Optional:","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"NIvEjPXZsD"}],"key":"nVh8v8tBqf"},{"type":"text","value":" Write data and topography","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"RnyYuQ3XwR"}],"key":"CUqm2Ac2NM"}],"key":"aGMemFsbON"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2025-05-23T16:55:28.378361Z","iopub.status.busy":"2025-05-23T16:55:28.378139Z","iopub.status.idle":"2025-05-23T16:55:28.383993Z","shell.execute_reply":"2025-05-23T16:55:28.383281Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"if write_output:\n    dir_path = os.path.sep.join([\".\", \"fwd_ip_2d_outputs\"]) + os.path.sep\n    if not os.path.exists(dir_path):\n        os.mkdir(dir_path)\n\n    # Add 5% Gaussian noise to each datum\n    rng = np.random.default_rng(seed=225)\n    std = 5e-3 * np.ones_like(dpred_ip)\n    ip_noise = rng.normal(scale=std, size=len(dpred_ip))\n    dobs = dpred_ip + ip_noise\n\n    # Create a survey with the original electrode locations\n    # and not the shifted ones\n    # Generate source list for DC survey line\n    source_list = generate_dcip_sources_line(\n        survey_type,\n        data_type,\n        dimension_type,\n        end_locations,\n        topo_2d,\n        num_rx_per_src,\n        station_separation,\n    )\n    survey_original = ip.survey.Survey(source_list)\n\n    # Write out data at their original electrode locations (not shifted)\n    data_obj = data.Data(survey_original, dobs=dobs, standard_deviation=std)\n    fname = dir_path + \"ip_data.obs\"\n    write_dcip2d_ubc(fname, data_obj, \"apparent_chargeability\", \"dobs\")\n\n    fname = dir_path + \"topo_2d.txt\"\n    np.savetxt(fname, topo_2d, fmt=\"%.4e\")","key":"TUiPvTgbRF"},{"type":"output","id":"5dpFbShMpnIB_ClRWe9Fh","data":[],"key":"TFPr7Qs0LC"}],"key":"E1oe7dwBL8"}],"key":"vaATFrjtkx"},"references":{"cite":{"order":[],"data":{}}},"footer":{"navigation":{"prev":{"title":"Induced Polarization","url":"/ip-index","group":"SimPEG User Tutorials"},"next":{"title":"3D IP Forward Simulation","url":"/fwd-ip-3d","group":"SimPEG User Tutorials"}}},"domain":"http://localhost:3000"}