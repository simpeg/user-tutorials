{"version":2,"kind":"Notebook","sha256":"e05c5153636847cd831ef8a67413a0cb8d3f2916719c5cff1c18f6c5674bc9a2","slug":"fwd-gravity-gradiometry-3d","location":"/notebooks/03-gravity/fwd_gravity_gradiometry_3d.ipynb","dependencies":[],"frontmatter":{"title":"3D Forward Simulation of Gravity Gradiometry Data","authors":[{"id":"devincowan","nameParsed":{"literal":"Devin Cowan","given":"Devin","family":"Cowan"},"name":"Devin Cowan","orcid":"0000-0002-0089-402X","roles":["Writing – original draft","Writing – review & editing","Software"],"affiliations":["ubc"]}],"kernelspec":{"name":"python3","display_name":"Python 3 (ipykernel)","language":"python"},"license":{"content":{"id":"CC-BY-4.0","url":"https://creativecommons.org/licenses/by/4.0/","name":"Creative Commons Attribution 4.0 International","free":true,"CC":true},"code":{"id":"MIT","url":"https://opensource.org/licenses/MIT","name":"MIT License","free":true,"osi":true}},"github":"https://github.com/simpeg/user-tutorials","subject":"SimPEG User Tutorials","keywords":["geophysics","inversions","python","open-source"],"affiliations":[{"id":"ubc","name":"University of British Columbia","department":"Department of Earth, Ocean and Atmospheric Sciences","address":"2020 – 2207 Main Mall","city":"Vancouver","state":"British Columbia","postal_code":"V6T 1Z4","country":"Canada","isni":"0000 0001 2288 9830","ror":"https://ror.org/03rmrcq20","phone":"604 822 2449"},{"id":"kobold","name":"Kobold Metals"}],"numbering":{"title":{"offset":1}},"source_url":"https://github.com/simpeg/user-tutorials/blob/main/notebooks/03-gravity/fwd_gravity_gradiometry_3d.ipynb","edit_url":"https://github.com/simpeg/user-tutorials/edit/main/notebooks/03-gravity/fwd_gravity_gradiometry_3d.ipynb","exports":[{"format":"ipynb","filename":"fwd_gravity_gradiometry_3d.ipynb","url":"/user-tutorials/build/fwd_gravity_gradiome-f5c2c5620775d53e6c9b463a9873b2ca.ipynb"}]},"widgets":{},"mdast":{"type":"root","children":[{"type":"block","kind":"notebook-content","children":[{"type":"admonition","children":[{"type":"admonitionTitle","children":[{"type":"text","value":"Introductory notebook","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"t2P57IPSDT"}],"key":"WAv3SnL34Z"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"This tutorial teaches basic functionality within SimPEG and is a good entry point for new users.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"trPG7AhqPc"}],"key":"cBFQ33jUMT"}],"class":"hint","key":"bXhjklGs4q"}],"key":"Mn7dzWScwy"},{"type":"block","kind":"notebook-content","children":[{"type":"admonition","children":[{"type":"admonitionTitle","children":[{"type":"text","value":"Light-weight notebook","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"ds9otpINQM"}],"key":"S0B3zz9rG4"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"This tutorial requires minimal computational resources and can be executed quickly in the background while other computer processes are running.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"bpfzDfZ2GW"}],"key":"hj6qpJbIxS"}],"class":"hint","key":"zjIQqFDWCi"}],"key":"wT26ew9Bmx"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"strong","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Keywords:","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Nnnky27mId"}],"key":"kWtmMZVjqh"},{"type":"text","value":" gravity anomaly, forward simulation, integral formulation, tree mesh.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"a6Ea68AgV8"}],"key":"ED2nMOz9Vc"},{"type":"paragraph","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"strong","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Summary:","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"lFjKfTBJX4"}],"key":"Xs7jFZrDqG"},{"type":"text","value":" Here we use the module ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"WfgFYNtzh9"},{"type":"link","url":"https://docs.simpeg.xyz/latest/content/api/simpeg.potential_fields.gravity.html#module-simpeg.potential_fields.gravity","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"simpeg​.potential​_fields​.gravity","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"bTQ7JAujJt"}],"urlSource":"xref:simpeg#simpeg.potential_fields.gravity","internal":false,"protocol":"xref:sphinx","key":"mKiwtWDW7W"},{"type":"text","value":" to simulate gravity gradiometry data for a synthetic density contrast model. We use the ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"VQ0aa7nb4Z"},{"type":"link","url":"https://docs.simpeg.xyz/latest/content/api/generated/simpeg.potential_fields.gravity.Simulation3DIntegral.html#simpeg.potential_fields.gravity.simulation3dintegral","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"3D integral formulation","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"mJnTPAqt96"}],"urlSource":"xref:simpeg#simpeg.potential_fields.gravity.Simulation3DIntegral","internal":false,"protocol":"xref:sphinx","key":"d9951qsZM7"},{"type":"text","value":" and carry out the forward simulation on a tree mesh.","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"es4PIU5yPg"}],"key":"sdhggqraTt"},{"type":"paragraph","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"strong","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"Learning Objectives:","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"DIbY5NjI1w"}],"key":"VvKYtTpytM"}],"key":"oX8fXBlrzO"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":11,"column":1},"end":{"line":16,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"children":[{"type":"paragraph","children":[{"type":"text","value":"How to simulate gravity data for 3D structures with SimPEG.","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"LlaSeqKJaP"}],"key":"UQhWncwimH"}],"key":"rGIYwhnukO"},{"type":"listItem","spread":true,"position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"children":[{"type":"paragraph","children":[{"type":"text","value":"How to create gravity gradiometry surveys and manage multiple data components.","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"key":"xslSE6pjX3"}],"key":"orthT8idk6"}],"key":"HiRMlbfXyV"},{"type":"listItem","spread":true,"position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"children":[{"type":"paragraph","children":[{"type":"text","value":"How to design a tree mesh for gravity simulation (integral solution).","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"key":"pTKstOszhG"}],"key":"jivDTctpyu"}],"key":"IieF6aeCop"},{"type":"listItem","spread":true,"position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"children":[{"type":"paragraph","children":[{"type":"text","value":"How to predict gravity gradiometry data for a density contrast model.","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"key":"CKdJffS2RW"}],"key":"h0ib1GIYy3"}],"key":"CUqUqEXeeE"},{"type":"listItem","spread":true,"position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"children":[{"type":"paragraph","children":[{"type":"text","value":"How to include surface topography in the forward simulation.","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"key":"CXWHTtrHVa"}],"key":"ZXk1AbLY4b"}],"key":"WuRU0pmJdW"},{"type":"listItem","spread":true,"position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"children":[{"type":"paragraph","children":[{"type":"text","value":"What are the units of the density contrast model and resulting data.","position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"key":"LI9osx7WCQ"}],"key":"NGdfYGqeTT"}],"key":"NpW9aflpxr"}],"key":"q7d2dOTQND"}],"key":"TTTM5Gmo5r"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Import Modules","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"hYppY9vpKC"}],"identifier":"import-modules","label":"Import Modules","html_id":"import-modules","implicit":true,"key":"JOJ1kYITRa"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"Here, we import all of the functionality required to run the notebook for the tutorial exercise.\nAll of the functionality specific to simulating gravity data are imported from ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"lY7NTpt8Vl"},{"type":"link","url":"https://docs.simpeg.xyz/latest/content/api/simpeg.potential_fields.gravity.html#module-simpeg.potential_fields.gravity","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"simpeg​.potential​_fields​.gravity","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"RZD6bBOIO6"}],"urlSource":"xref:simpeg#simpeg.potential_fields.gravity","internal":false,"protocol":"xref:sphinx","key":"WO9mfBb5yM"},{"type":"text","value":".\nWe also import some useful utility functions from SimPEG. To simulate gravity data,\nwe need to define our problem geometry on a numerical grid (or mesh).\nTo generate the mesh, we used the ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"V2x9t6sh55"},{"type":"link","url":"https://discretize.simpeg.xyz/en/main","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"discretize","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"mbZKHfSQEq"}],"urlSource":"https://discretize.simpeg.xyz/en/main","key":"B5eRyVqVod"},{"type":"text","value":" package.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"ZDKY6ijD1u"}],"key":"hfzBJMxtf9"}],"key":"sXzkUUxz7Z"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2025-05-23T16:22:42.151682Z","iopub.status.busy":"2025-05-23T16:22:42.151126Z","iopub.status.idle":"2025-05-23T16:22:44.057120Z","shell.execute_reply":"2025-05-23T16:22:44.056254Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"# SimPEG functionality\nfrom simpeg.potential_fields import gravity\nfrom simpeg.utils import plot2Ddata, model_builder\nfrom simpeg import maps\n\n# discretize functionality\nfrom discretize import TreeMesh\nfrom discretize.utils import mkvc, active_from_xyz\n\n# Common Python functionality\nimport numpy as np\nfrom scipy.interpolate import LinearNDInterpolator\nimport matplotlib as mpl\nimport matplotlib.pyplot as plt\n\nmpl.rcParams.update({\"font.size\": 14})\n\nsave_output = False  # Optional","key":"UOUJsQTXEi"},{"type":"output","id":"wNJCwo4k_TA-BKH8Qafop","data":[],"key":"R3whjBLUhm"}],"key":"OdUyzcWq7L"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Define the Topography","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"opwFcRVBLn"}],"identifier":"define-the-topography","label":"Define the Topography","html_id":"define-the-topography","implicit":true,"key":"nx6Plsr1M7"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Surface topography is defined as an (N, 3) ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"Bc55GsjJqD"},{"type":"link","url":"https://numpy.org/doc/stable/reference/generated/numpy.ndarray.html#numpy.ndarray","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"numpy.ndarray","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"fGYq0t3TTH"}],"urlSource":"xref:numpy#numpy.ndarray","internal":false,"protocol":"xref:sphinx","key":"TkKXToVUMK"},{"type":"text","value":" for 3D simulations.\nHere, we create basic topography for the forward simulation.\nFor user-specific simulations, you may load topography from an XYZ file.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"NscatJq0B3"}],"key":"WWrsKxpEOV"}],"key":"kf9CncYpUL"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2025-05-23T16:22:44.060450Z","iopub.status.busy":"2025-05-23T16:22:44.060031Z","iopub.status.idle":"2025-05-23T16:22:44.064534Z","shell.execute_reply":"2025-05-23T16:22:44.064000Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"[x_topo, y_topo] = np.meshgrid(np.linspace(-200, 200, 41), np.linspace(-200, 200, 41))\nrng = np.random.default_rng(seed=737)\nz_topo = (\n    -15 * np.exp(-(x_topo**2 + y_topo**2) / 80**2)\n    + 100.0\n    + rng.uniform(low=0.0, high=0.5, size=x_topo.shape)\n)","key":"tDzlIFRPjH"},{"type":"output","id":"WRcJ1I38rdjabFJ_9RS7Q","data":[],"key":"psIsqv8Hai"}],"key":"XoqpQzDg3w"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2025-05-23T16:22:44.067350Z","iopub.status.busy":"2025-05-23T16:22:44.067091Z","iopub.status.idle":"2025-05-23T16:22:44.758483Z","shell.execute_reply":"2025-05-23T16:22:44.757929Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"fig = plt.figure(figsize=(6, 6))\nax = fig.add_axes([0.1, 0.1, 0.8, 0.8], projection=\"3d\")\nax.set_zlim([z_topo.max() - 40, z_topo.max()])\nax.plot_surface(x_topo, y_topo, z_topo, color=\"r\", edgecolor=\"k\", linewidth=0.5)\nax.set_box_aspect(aspect=None, zoom=0.85)\nax.set_xlabel(\"X (m)\", labelpad=10)\nax.set_ylabel(\"Y (m)\", labelpad=10)\nax.set_zlabel(\"Z (m)\", labelpad=10)\nax.set_title(\"Topography (Exaggerated z-axis)\", fontsize=16, pad=-20)\nax.view_init(elev=20.0)","key":"YDQXPvGPMh"},{"type":"output","id":"7Fd1__7UxjY0ptDuHcvBS","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"006d9621f739715d07de322f331cb968","path":"/user-tutorials/build/006d9621f739715d07de322f331cb968.png"},"text/plain":{"content":"<Figure size 600x600 with 1 Axes>","content_type":"text/plain"}}}],"key":"is53TDGHVM"}],"key":"aNtDGHVyeE"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2025-05-23T16:22:44.763503Z","iopub.status.busy":"2025-05-23T16:22:44.763238Z","iopub.status.idle":"2025-05-23T16:22:44.767150Z","shell.execute_reply":"2025-05-23T16:22:44.766548Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"x_topo, y_topo, z_topo = mkvc(x_topo), mkvc(y_topo), mkvc(z_topo)\ntopo_xyz = np.c_[x_topo, y_topo, z_topo]","key":"yMxfY5XBaD"},{"type":"output","id":"MMpqKPEVLwvGYteDQFuuE","data":[],"key":"UU6Ho1xXfI"}],"key":"b3mjiZMiSi"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Define the Survey","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"ihIS486kWH"}],"identifier":"define-the-survey","label":"Define the Survey","html_id":"define-the-survey","implicit":true,"key":"E7MiK5FzCq"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Surveys within SimPEG generally require the user to create and connect three types of objects:","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"rUjEBYBqbM"}],"key":"zzxli1luJt"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":5,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"paragraph","children":[{"type":"link","url":"https://docs.simpeg.xyz/latest/content/api/generated/simpeg.potential_fields.gravity.Point.html#simpeg.potential_fields.gravity.Point","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"receivers","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"mwoJcZ4rKU"}],"urlSource":"xref:simpeg#simpeg.potential_fields.gravity.receivers.Point","internal":false,"protocol":"xref:sphinx","key":"pOi9gzUTWF"},{"type":"text","value":": which define the locations of field measurements and type of data being measured.","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"CTzU906nVI"}],"key":"kGySSF2HgL"}],"key":"blAQNqlOWo"},{"type":"listItem","spread":true,"position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"paragraph","children":[{"type":"link","url":"https://docs.simpeg.xyz/latest/content/api/generated/simpeg.potential_fields.gravity.SourceField.html#simpeg.potential_fields.gravity.SourceField","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"sources","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"mcY2oOwvLI"}],"urlSource":"xref:simpeg#simpeg.potential_fields.gravity.sources.SourceField","internal":false,"protocol":"xref:sphinx","key":"LkalbUFU81"},{"type":"text","value":": the passive or active sources responsible for generating geophysical responses, and their associated receivers.","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"yNmJKqefCy"}],"key":"LQK9szxKu0"}],"key":"iuT2UYH57M"},{"type":"listItem","spread":true,"position":{"start":{"line":7,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"paragraph","children":[{"type":"link","url":"https://docs.simpeg.xyz/latest/content/api/generated/simpeg.potential_fields.gravity.Survey.html#simpeg.potential_fields.gravity.Survey","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"survey","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"F55ERthyUu"}],"urlSource":"xref:simpeg#simpeg.potential_fields.gravity.survey.Survey","internal":false,"protocol":"xref:sphinx","key":"v9yoM0i6D8"},{"type":"text","value":": the object which stores and organizes all of the sources and receivers.","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"xJsHmFG0S3"}],"key":"VhTtfKTj5v"}],"key":"wSktzv5r0w"}],"key":"pI1XWYC7UF"},{"type":"paragraph","position":{"start":{"line":9,"column":1},"end":{"line":13,"column":1}},"children":[{"type":"text","value":"Here, we define the survey that will be used for the forward simulation. Gravity\nsurveys are simple to create. The user only needs an (N, 3) ","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"bOyjfJjIUM"},{"type":"link","url":"https://numpy.org/doc/stable/reference/generated/numpy.ndarray.html#numpy.ndarray","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"numpy.ndarray","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"CnyiGP6fSS"}],"urlSource":"xref:numpy#numpy.ndarray","internal":false,"protocol":"xref:sphinx","key":"B445f0Wclq"},{"type":"text","value":" to define\nthe xyz locations of the observation locations, and a list of field components\nwhich are to be measured. For the tutorial simulation, the receivers are located 5 m\nabove the surface topography and spaced 10 m apart.","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"UEGL5t8O1x"}],"key":"aTSjqgVxyl"}],"key":"wvNTB7jUyA"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2025-05-23T16:22:44.770548Z","iopub.status.busy":"2025-05-23T16:22:44.770224Z","iopub.status.idle":"2025-05-23T16:22:44.802297Z","shell.execute_reply":"2025-05-23T16:22:44.801651Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"# Define the observation locations as an (N, 3) numpy array or load them from a file.\nx = np.linspace(-80.0, 80.0, 17)\ny = np.linspace(-80.0, 80.0, 17)\nx, y = np.meshgrid(x, y)\nx, y = mkvc(x.T), mkvc(y.T)\nfun_interp = LinearNDInterpolator(np.c_[x_topo, y_topo], z_topo)\nz = fun_interp(np.c_[x, y]) + 5.0\nreceiver_locations = np.c_[x, y, z]","key":"g9XliR7Md8"},{"type":"output","id":"vhi0s-mKG5uMqse60F_Js","data":[],"key":"ttEoBck9Bo"}],"key":"skaebkDjPx"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2025-05-23T16:22:44.804851Z","iopub.status.busy":"2025-05-23T16:22:44.804598Z","iopub.status.idle":"2025-05-23T16:22:44.808438Z","shell.execute_reply":"2025-05-23T16:22:44.807823Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"# Define the component(s) of the field we want to simulate as strings within\n# a list. Here we measure the x, y and z derivatives of the vertical gravity\n# anomaly at each observation location.\ncomponents = [\"gxz\", \"gyz\", \"gzz\"]\n\n# Use the observation locations and components to define receivers for the entire survey\n# in one step. The set of receivers, even if it's only 1, are organized within a list.\nreceiver_list = gravity.receivers.Point(receiver_locations, components=components)\nreceiver_list = [receiver_list]\n\n# Defining the source. For gravity surveys, we simply need to specific the list of\n# receivers associated with the source field.\nsource_field = gravity.sources.SourceField(receiver_list=receiver_list)\n\n# Defining the survey.\nsurvey = gravity.survey.Survey(source_field)","key":"Zfwl6aztWR"},{"type":"output","id":"PoFPqACGmkggGGuDAPRvY","data":[],"key":"iFpVbdUmO8"}],"key":"QYnXiPu9Ew"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"If desired, we can extract various objects and properties from the objects used to generate the survey. E.g.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"lUSQD0zk4l"}],"key":"YSBGiCQvxS"}],"key":"xD6Uhv566s"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2025-05-23T16:22:44.811410Z","iopub.status.busy":"2025-05-23T16:22:44.811042Z","iopub.status.idle":"2025-05-23T16:22:44.815930Z","shell.execute_reply":"2025-05-23T16:22:44.815359Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"print(\"# of locations: {}\".format(survey.nRx))  # number of receiver locations\nprint(\"# of data: {}\".format(survey.nD))  # number of data that will be simulated\nprint(survey.source_field)  # the source field object\nprint(survey.source_field.receiver_list[0])  # the receiver object\nprint(receiver_list[0].locations[:5, :])  # the first 5 receiver locations","key":"b8ky4KlqIB"},{"type":"output","id":"IvwLWbxj3suHylH0oYYdy","data":[{"name":"stdout","output_type":"stream","text":"# of locations: 289\n# of data: 867\n<simpeg.potential_fields.gravity.sources.SourceField object at 0x7f8d3f0afe30>\n<simpeg.potential_fields.gravity.receivers.Point object at 0x7f8d3f07e420>\n[[-80.         -80.         103.45749978]\n [-70.         -80.         102.92439828]\n [-60.         -80.         102.04004226]\n [-50.         -80.         101.42653248]\n [-40.         -80.         100.7063376 ]]\n"}],"key":"XBw11z8JJ4"}],"key":"Fi0HBLMV4i"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Design a (Tree) Mesh","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"FJBIKFQbVY"}],"identifier":"design-a-tree-mesh","label":"Design a (Tree) Mesh","html_id":"design-a-tree-mesh","implicit":true,"key":"KpRA89kICV"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"Meshes are designed using the ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"xHaKCaI2XM"},{"type":"link","url":"https://discretize.simpeg.xyz/en/main","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"discretize","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"Jo8C12dE9N"}],"urlSource":"https://discretize.simpeg.xyz/en/main","key":"lyuf1YnLxg"},{"type":"text","value":" package. See the ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"esacaVTHzt"},{"type":"link","url":"https://discretize.simpeg.xyz/en/main/tutorials/mesh_generation/index.html","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"discretize user tutorials","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"dspZPwjjYo"}],"urlSource":"https://discretize.simpeg.xyz/en/main/tutorials/mesh_generation/index.html","key":"kNhDgI8Drk"},{"type":"text","value":" to learn more about creating meshes.\nHere, the forward simulation is computed for a ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"Xqee2B02a0"},{"type":"link","url":"https://discretize.simpeg.xyz/en/main/api/generated/discretize.TreeMesh.html#discretize.treemesh","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"tree mesh","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"TrgHPK1hoz"}],"urlSource":"xref:discretize#discretize.TreeMesh","internal":false,"protocol":"xref:sphinx","key":"rahZX1fMCw"},{"type":"text","value":". If you wanted to generate a ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"FKOiBouc8C"},{"type":"link","url":"https://discretize.simpeg.xyz/en/main/api/generated/discretize.TensorMesh.html#discretize.tensormesh","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"tensor mesh","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"NxramF73Lb"}],"urlSource":"xref:discretize#discretize.TensorMesh","internal":false,"protocol":"xref:sphinx","key":"DCECaw9ZGm"},{"type":"text","value":" instead, you can use the code snippet from the ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"Phz6b0DF6M"},{"type":"link","url":"/fwd-gravity-anomaly-3d","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"3D Forward Simulation of Gravity Anomaly Data","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"FAc270AliJ"}],"urlSource":"fwd_gravity_anomaly_3d.ipynb","dataUrl":"/fwd-gravity-anomaly-3d.json","internal":true,"protocol":"file","key":"ZEUJIucQJH"},{"type":"text","value":" tutorial.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"l8tOksnEiJ"}],"key":"yRZAF2gB6j"},{"type":"paragraph","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"The integral formulation for gravity essentially sums the independent contribution for every voxel cell in the mesh. Since the kernel function that computes the contribution for a single cell is an analytic solution, small cells are not required to accurately compute the contributions from coarse structures with constant density (e.g. a rectangular prism). For complex structures however, or to define surface topography more accurately, finer cells may be needed. Furthermore, cells do not need to be cubic.","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"O1KSVAG54j"}],"key":"DLVTYGoure"},{"type":"paragraph","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"Here, a minimum cell width of 5 m is used within our survey region. In this tutorial, we discretize finely along the surface topography, and within our region of interest. However, a multitude of refinement methods can be applied when generating tree meshes.","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"jw7jBy7DN4"}],"key":"PIG9z0Vz5S"}],"key":"p4teqVkd9w"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2025-05-23T16:22:44.818863Z","iopub.status.busy":"2025-05-23T16:22:44.818552Z","iopub.status.idle":"2025-05-23T16:22:45.155525Z","shell.execute_reply":"2025-05-23T16:22:45.154649Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"dx = 5  # minimum cell width (base mesh cell width) in x\ndy = 5  # minimum cell width (base mesh cell width) in y\ndz = 5  # minimum cell width (base mesh cell width) in z\n\nx_length = 240.0  # domain width in x\ny_length = 240.0  # domain width in y\nz_length = 120.0  # domain width in z\n\n# Compute number of base mesh cells required in x and y\nnbcx = 2 ** int(np.round(np.log(x_length / dx) / np.log(2.0)))\nnbcy = 2 ** int(np.round(np.log(y_length / dy) / np.log(2.0)))\nnbcz = 2 ** int(np.round(np.log(z_length / dz) / np.log(2.0)))\n\n# Define the base mesh. Top defined at z = 0 m.\nhx = [(dx, nbcx)]\nhy = [(dy, nbcy)]\nhz = [(dz, nbcz)]\nmesh = TreeMesh([hx, hy, hz], x0=\"CCN\", diagonal_balance=True)\n\n# Shift vertically to top same as maximum topography\nmesh.origin += np.r_[0.0, 0.0, z_topo.max()]\n\n# Refine based on surface topography\nmesh.refine_surface(topo_xyz, padding_cells_by_level=[2, 2], finalize=False)\n\n# Refine box based on region of interest\nwsb_corner = np.c_[-100, -100, 20]\nent_corner = np.c_[100, 100, 100]\n# Note -1 is a flag for smallest cell size\nmesh.refine_box(wsb_corner, ent_corner, levels=[-1], finalize=False)\n\nmesh.finalize()","key":"AmNwST0HRg"},{"type":"output","id":"7yittazQRXb2Wh2GOossR","data":[],"key":"H29Gy0YN8K"}],"key":"uDZOu4aevo"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"If desired, we can extract various properties of the mesh. E.g.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Htk11dtY5X"}],"key":"acRNrKzWnL"}],"key":"HOuCETiKn0"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2025-05-23T16:22:45.159184Z","iopub.status.busy":"2025-05-23T16:22:45.158911Z","iopub.status.idle":"2025-05-23T16:22:45.170203Z","shell.execute_reply":"2025-05-23T16:22:45.169607Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"print(\"# of cells: {}\".format(mesh.n_cells))  # Number of cells\nprint(\"# of x-faces: {}\".format(mesh.n_faces_x))  # Number of x-faces\nprint(\"Origin: {}\".format(mesh.origin))  # bottom-southewest corner\nprint(\"Max cell volume: {}\".format(mesh.cell_volumes.max()))  # Largest cell size\nprint(mesh.cell_centers[0:5, :])  # Cell center locations","key":"qQO9M4kfCp"},{"type":"output","id":"k5JUDVhDHSHstbauJR5cP","data":[{"name":"stdout","output_type":"stream","text":"# of cells: 46260\n# of x-faces: 46082\nOrigin: [-160.         -160.          -59.50266358]\nMax cell volume: 64000.0\n[[-140.         -140.          -39.50266358]\n [-100.         -140.          -39.50266358]\n [-140.         -100.          -39.50266358]\n [-100.         -100.          -39.50266358]\n [-150.         -150.           -9.50266358]]\n"}],"key":"J7OPr4H7lg"}],"key":"Sg4zcoD6ss"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Define the Active Cells","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"ci8jXLb39W"}],"identifier":"define-the-active-cells","label":"Define the Active Cells","html_id":"define-the-active-cells","implicit":true,"key":"AsE9DJeLwF"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"Whereas cells below the Earth’s surface contribute towards the simulated gravity anomaly, air cells do not.\nThe set of mesh cells used in the forward simulation are referred to as ‘active cells’. Unused cells (air cells) are ‘inactive cells’. Here, the discretize ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"GQkYtU3Xw1"},{"type":"link","url":"https://discretize.simpeg.xyz/en/main/api/generated/discretize.utils.active_from_xyz.html#discretize.utils.active_from_xyz","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"active_from_xyz","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"DjoCuyZiv5"}],"urlSource":"xref:discretize#discretize.utils.active_from_xyz","internal":false,"protocol":"xref:sphinx","key":"DCeQ0TSWHD"},{"type":"text","value":" utility function is used to find the indices of the active cells using the mesh and surface topography. The output quantity is a ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"QVO4WnqbVh"},{"type":"inlineCode","value":"bool","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"ouQCc5nxAu"},{"type":"text","value":" array.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"Jwf7E3xaNF"}],"key":"UspxGajeok"}],"key":"hiPiauRaS9"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2025-05-23T16:22:45.173621Z","iopub.status.busy":"2025-05-23T16:22:45.173364Z","iopub.status.idle":"2025-05-23T16:22:45.207478Z","shell.execute_reply":"2025-05-23T16:22:45.206851Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"# Indices of the active mesh cells from topography (e.g. cells below surface)\nactive_cells = active_from_xyz(mesh, topo_xyz)","key":"FOavZgxhOG"},{"type":"output","id":"WWwMNVBp6l9DqlIvvmDIB","data":[],"key":"w4jMUfs5Hi"}],"key":"vODMNrvhqt"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Mapping from the Model to Active Cells","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"j28JLE1YcH"}],"identifier":"mapping-from-the-model-to-active-cells","label":"Mapping from the Model to Active Cells","html_id":"mapping-from-the-model-to-active-cells","implicit":true,"key":"bAbw0hTpfg"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"In SimPEG, the term ‘model’ is not synonymous with the physical property values defined on the mesh. For example, the model may be defined as the logarithms of the physical property values, or be parameters defining a layered Earth. When simulating gravity anomaly data using the integral formulation, we must define a mapping from the set of model parameters to the active cells in the mesh. Mappings are created using the ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"uUP9evmuRk"},{"type":"link","url":"https://docs.simpeg.xyz/latest/content/api/generated/simpeg.maps.IdentityMap.html#simpeg.maps.identitymap","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"simpeg.maps","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"cQlv9p5LAq"}],"urlSource":"xref:simpeg#simpeg.maps.IdentityMap","internal":false,"protocol":"xref:sphinx","key":"auZ7bwjXG5"},{"type":"text","value":" module. For the tutorial exercise, the model is the density contrast values for all active cells. As such, our mapping is an identity mapping, whose dimensions are equal to the number of active cells.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"KZIxVxJBWK"}],"key":"qei3krMOzI"}],"key":"VH51f2el4K"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2025-05-23T16:22:45.210778Z","iopub.status.busy":"2025-05-23T16:22:45.210515Z","iopub.status.idle":"2025-05-23T16:22:45.213714Z","shell.execute_reply":"2025-05-23T16:22:45.213206Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"# Define mapping from model to active cells. The model consists of a density\n# contrast value for each cell below the Earth's surface.\nn_active = int(active_cells.sum())\nmodel_map = maps.IdentityMap(nP=n_active)","key":"ZCKnsuHFRW"},{"type":"output","id":"AvFPiR03h_7bYFHzIqUO9","data":[],"key":"xC1IphrTUL"}],"key":"VHtUWuNndN"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Define the Model","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"w7Cz9Pomzi"}],"identifier":"define-the-model","label":"Define the Model","html_id":"define-the-model","implicit":true,"key":"tM7behh6Wo"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"Here, we create the model that will be used to predict gravity anomaly data.\nRecall that our model is the density constrast values for all active mesh cells.\nSo the model is a 1D ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"qahM4vxmzY"},{"type":"link","url":"https://numpy.org/doc/stable/reference/generated/numpy.ndarray.html#numpy.ndarray","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"numpy.ndarray","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"XgBooajHKo"}],"urlSource":"xref:numpy#numpy.ndarray","internal":false,"protocol":"xref:sphinx","key":"vrQAx1mtKD"},{"type":"text","value":" whose length is\nequal to the number of model parameters.\n","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"e8PTdmaySk"},{"type":"strong","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"In SimPEG, density contrast values are defined in units of g/cc","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"uIEUdmRGMe"}],"key":"izuCiHZ7hn"},{"type":"text","value":".\nHere, the model consists of a less dense block and a more dense sphere.\nWe plot the model using the ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"v3FAsIsRKF"},{"type":"link","url":"https://discretize.simpeg.xyz/en/main/api/generated/discretize.TreeMesh.plot_slice.html#discretize.treemesh.plot_slice","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"plot_slice","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"cbZAn68ALv"}],"urlSource":"xref:discretize#discretize.TreeMesh.plot_slice","internal":false,"protocol":"xref:sphinx","key":"GBhd31Hky1"},{"type":"text","value":" method.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"l3IbL0yzMS"}],"key":"bXJtdpnHsK"}],"key":"o29Dkd9HbL"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2025-05-23T16:22:45.216944Z","iopub.status.busy":"2025-05-23T16:22:45.216629Z","iopub.status.idle":"2025-05-23T16:22:45.219886Z","shell.execute_reply":"2025-05-23T16:22:45.219332Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"# Define density contrast values for each unit in g/cc\nbackground_density = 0.0\nblock_density = -0.2\nsphere_density = 0.2","key":"UGisROZp5X"},{"type":"output","id":"WhPHn22iWl6xxpBCcKFgO","data":[],"key":"mr8ctIOaTu"}],"key":"eSwHyoHW7P"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2025-05-23T16:22:45.222259Z","iopub.status.busy":"2025-05-23T16:22:45.221943Z","iopub.status.idle":"2025-05-23T16:22:45.230506Z","shell.execute_reply":"2025-05-23T16:22:45.229885Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"# Instantiate a vector array. Models in SimPEG are vector arrays.\nmodel = background_density * np.ones(n_active)\n\n# You could find the indicies of specific cells within the model and change their\n# values to add structures.\nind_block = (\n    (mesh.cell_centers[active_cells, 0] > -50.0)\n    & (mesh.cell_centers[active_cells, 0] < -20.0)\n    & (mesh.cell_centers[active_cells, 1] > -15.0)\n    & (mesh.cell_centers[active_cells, 1] < 15.0)\n    & (mesh.cell_centers[active_cells, 2] > 50.0)\n    & (mesh.cell_centers[active_cells, 2] < 70.0)\n)\nmodel[ind_block] = block_density\n\n# You can also use SimPEG utilities to add structures to the model more concisely\nind_sphere = model_builder.get_indices_sphere(\n    np.r_[35.0, 0.0, 60.0], 14.0, mesh.cell_centers\n)\nind_sphere = ind_sphere[active_cells]\nmodel[ind_sphere] = sphere_density","key":"vYzB9P6Q5t"},{"type":"output","id":"umuRA-RgkLsCY3Zej2EQW","data":[],"key":"EPP5gIvNxH"}],"key":"PXKGs06e08"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2025-05-23T16:22:45.232774Z","iopub.status.busy":"2025-05-23T16:22:45.232527Z","iopub.status.idle":"2025-05-23T16:22:45.238836Z","shell.execute_reply":"2025-05-23T16:22:45.238216Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"# Map for ignoring inactive cells when plotting\nplotting_map = maps.InjectActiveCells(mesh, active_cells, np.nan)","key":"JPOnq3Rlvf"},{"type":"output","id":"lumIqJnaOY_RTziKhHogc","data":[],"key":"d1b1lXongG"}],"key":"T6xsiHiEm2"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2025-05-23T16:22:45.241545Z","iopub.status.busy":"2025-05-23T16:22:45.241284Z","iopub.status.idle":"2025-05-23T16:22:45.525645Z","shell.execute_reply":"2025-05-23T16:22:45.525018Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"# Plot Density Contrast Model\nfig = plt.figure(figsize=(8, 3.5))\nax1 = fig.add_axes([0.1, 0.12, 0.73, 0.78])\n\nnorm = mpl.colors.Normalize(vmin=np.min(model), vmax=np.max(model))\n\nmesh.plot_slice(\n    plotting_map * model,\n    normal=\"Y\",\n    ax=ax1,\n    ind=int(mesh.shape_cells[1] / 2),\n    grid=True,\n    pcolor_opts={\"cmap\": mpl.cm.RdYlBu_r, \"norm\": norm},\n)\nax1.set_title(\"Model slice at y = 0 m\")\nax1.set_xlabel(\"x (m)\")\nax1.set_ylabel(\"z (m)\")\n\nax2 = fig.add_axes([0.85, 0.12, 0.03, 0.78])\n\ncbar = mpl.colorbar.ColorbarBase(\n    ax2, norm=norm, orientation=\"vertical\", cmap=mpl.cm.RdYlBu_r\n)\ncbar.set_label(\"$g/cm^3$\", rotation=270, labelpad=15, size=16)\n\nplt.show()","key":"nrXT7pzZHG"},{"type":"output","id":"p_DvFFIb_p8S8b1SW8mG8","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"c7cf87ece44d6303d5fb5ba725cb87ff","path":"/user-tutorials/build/c7cf87ece44d6303d5fb5ba725cb87ff.png"},"text/plain":{"content":"<Figure size 800x350 with 2 Axes>","content_type":"text/plain"}}}],"key":"Vm3Ii6jR7P"}],"key":"iivvT7cHSA"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Define the Forward Simulation","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"onW4SIvQwf"}],"identifier":"define-the-forward-simulation","label":"Define the Forward Simulation","html_id":"define-the-forward-simulation","implicit":true,"key":"u6ggVVsUBO"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"In SimPEG, the physics of the forward simulation is defined by creating an instance of an appropriate simulation class.\nIn this case, the simulation class corresponds to a ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"GZSRJBW4xX"},{"type":"link","url":"https://docs.simpeg.xyz/latest/content/api/generated/simpeg.potential_fields.gravity.Simulation3DIntegral.html#simpeg.potential_fields.gravity.simulation3dintegral","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"3D integral formulation","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"FDe95ox8lA"}],"urlSource":"xref:simpeg#simpeg.potential_fields.gravity.Simulation3DIntegral","internal":false,"protocol":"xref:sphinx","key":"l8rcQ8umG9"},{"type":"text","value":". To fully define the forward simulation, we need to connect the simulation object to:","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"UqwFYDl2cA"}],"key":"Gmtgponr3Q"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":6,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"paragraph","children":[{"type":"text","value":"the survey","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"xgJFLoZVFl"}],"key":"KZpW0CFFis"}],"key":"x4AtdHwS7J"},{"type":"listItem","spread":true,"position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"paragraph","children":[{"type":"text","value":"the mesh","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"TlR7xL36fO"}],"key":"NCmxX8biW5"}],"key":"TIRnU1jtvk"},{"type":"listItem","spread":true,"position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"paragraph","children":[{"type":"text","value":"the indices of the active cells","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"JLkn2jF8Km"}],"key":"O9Z3lqCoJa"}],"key":"gl5gvluAdo"},{"type":"listItem","spread":true,"position":{"start":{"line":9,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"paragraph","children":[{"type":"text","value":"the mapping from the model to the active cells","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"CJDHaVBb3q"}],"key":"p4doBaBpJx"}],"key":"UVhBbtuChV"}],"key":"IFOUaEYhwM"},{"type":"paragraph","position":{"start":{"line":11,"column":1},"end":{"line":13,"column":1}},"children":[{"type":"text","value":"This is accomplished by setting each one of the aforementioned items as a property of the simulation object.\nAdditional keyword arguments can also be set which impact the forward simulation.\nBecause we are only simulating data for a single model, there is no benefit to storing the sensitivities for the forward simulation. As a result, we set the ","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"ktjOkWrrUX"},{"type":"inlineCode","value":"store_sensitivities","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"a9bxxsU6m4"},{"type":"text","value":" property to ","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"LrPsUSTa2y"},{"type":"emphasis","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"children":[{"type":"text","value":"“forward_only”","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"m2M5cqVuTH"}],"key":"DQAT0vgxy9"},{"type":"text","value":".","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"Q72vpHFz1b"}],"key":"G5r99EudTZ"}],"key":"Ie2yCigkg5"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2025-05-23T16:22:45.528722Z","iopub.status.busy":"2025-05-23T16:22:45.528465Z","iopub.status.idle":"2025-05-23T16:22:45.585362Z","shell.execute_reply":"2025-05-23T16:22:45.584484Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"simulation = gravity.simulation.Simulation3DIntegral(\n    survey=survey,\n    mesh=mesh,\n    rhoMap=model_map,\n    active_cells=active_cells,\n    store_sensitivities=\"forward_only\",\n    engine=\"choclo\",\n)","key":"DXBkw9wcds"},{"type":"output","id":"gs1f4eQlZwuil8Fz3JH3o","data":[],"key":"sBM2lYoYis"}],"key":"kKocbFNBuz"},{"type":"block","kind":"notebook-content","children":[{"type":"admonition","kind":"tip","children":[{"type":"admonitionTitle","children":[{"type":"text","value":"Tip","key":"dQseu9nxOf"}],"key":"g2OlO02yRt"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"By choosing ","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"QTUaau28uE"},{"type":"inlineCode","value":"engine=\"choclo\"","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"plmSVEyGNJ"},{"type":"text","value":" we can make our simulation to run the faster and more memory efficient implementation of the gravity forward that uses ","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"D29voevCpF"},{"type":"link","url":"https://numba.pydata.org/","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Numba","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"wUOzKkCbid"}],"urlSource":"https://numba.pydata.org/","key":"CJRPQikSJT"},{"type":"text","value":" and ","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"LmOpijvHML"},{"type":"link","url":"https://www.fatiando.org/choclo","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Choclo","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"V6H7RkWBUd"}],"urlSource":"https://www.fatiando.org/choclo","key":"lrJ1AYkBfq"},{"type":"text","value":" under the hood. To do so, we need to have ","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"yIlfS9rjtW"},{"type":"link","url":"https://www.fatiando.org/choclo/latest/install.html","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Choclo installed","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"K2SEedsvNA"}],"urlSource":"https://www.fatiando.org/choclo/latest/install.html","key":"ATm8pnCVpH"},{"type":"text","value":".","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"BxP8Tyc2ei"}],"key":"x3fxD5t0bF"}],"key":"qVX0cvoAEa"}],"key":"Tqpk6Fwujs"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Simulate Gravity Gradiometry Data","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"cGzby7n1An"}],"identifier":"simulate-gravity-gradiometry-data","label":"Simulate Gravity Gradiometry Data","html_id":"simulate-gravity-gradiometry-data","implicit":true,"key":"G3EHzyXeXE"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Once any simulation within SimPEG has been properly constructed, simulated data for a given model vector can be computed using the ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"qNheKtcXNh"},{"type":"link","url":"https://docs.simpeg.xyz/latest/content/api/generated/simpeg.simulation.BaseSimulation.dpred.html#simpeg.simulation.basesimulation.dpred","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"dpred","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"ZsGvU259Xa"}],"urlSource":"xref:simpeg#simpeg.simulation.BaseSimulation.dpred","internal":false,"protocol":"xref:sphinx","key":"WwDPFChg8G"},{"type":"text","value":" method. ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"MOYjPC2JKU"},{"type":"strong","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"SimPEG uses a right-handed coordinate system to simulate gravity gradiometry data where Z is positive upward!!!","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"qbAyYdm7Ol"}],"key":"UEDtdVsBm0"},{"type":"text","value":" Please be aware of this when using gravity gradiometry data to infer the locations of more and less dense structures. In SimPEG, gravity gradiometry values are in ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"UzrAYXycxH"},{"type":"strong","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"units Eotvos,","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"ylN4ipltBd"}],"key":"OH1d2YRt0F"},{"type":"text","value":" where 1 E = ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"AXNvU3fZ2k"},{"type":"inlineMath","value":"10^{-9} \\; s^{-2}","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn><msup><mn>0</mn><mrow><mo>−</mo><mn>9</mn></mrow></msup><mtext>  </mtext><msup><mi>s</mi><mrow><mo>−</mo><mn>2</mn></mrow></msup></mrow><annotation encoding=\"application/x-tex\">10^{-9} \\; s^{-2}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8141em;\"></span><span class=\"mord\">1</span><span class=\"mord\"><span class=\"mord\">0</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">−</span><span class=\"mord mtight\">9</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">s</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">−</span><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span></span></span>","key":"uGk7E11h6o"},{"type":"text","value":" = ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"YS5DbmiPhh"},{"type":"span","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"10","key":"Xbyj7VYqyr"},{"type":"superscript","children":[{"type":"text","value":"-4","key":"g0pO5F0p36"}],"key":"VsYdV3MhoC"}],"key":"rNjkt0egqp"},{"type":"text","value":" mGal/m.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"MkRFJgzBns"}],"key":"yGO0YVvRph"}],"key":"s3pgqRw6Qs"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2025-05-23T16:22:45.589129Z","iopub.status.busy":"2025-05-23T16:22:45.588861Z","iopub.status.idle":"2025-05-23T16:22:48.251929Z","shell.execute_reply":"2025-05-23T16:22:48.251309Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"dpred = simulation.dpred(model)","key":"DGuQz5lz5W"},{"type":"output","id":"AvFyNmnDmUJVIChqHl4DT","data":[],"key":"YeWhtfL9Yj"}],"key":"S7gpGTPr2B"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Data are ordered by component, then by location. Here, we reshape the predicted data vector into an array for easier plotting.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"ehvGUZaZjP"}],"key":"jtDZS6oa1c"}],"key":"QvzO5CEbmT"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2025-05-23T16:22:48.254579Z","iopub.status.busy":"2025-05-23T16:22:48.254364Z","iopub.status.idle":"2025-05-23T16:22:48.257881Z","shell.execute_reply":"2025-05-23T16:22:48.257186Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"n_loc = survey.nRx  # Number of receiver locations\nn_comp = len(components)  # Number of data components\ndpred_plotting = np.reshape(dpred, (n_loc, n_comp))","key":"j0MubtGYTW"},{"type":"output","id":"dZmyznQ1QT3AM_TUbKXl0","data":[],"key":"ate3RvA1e8"}],"key":"uf7J0hu1BA"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2025-05-23T16:22:48.260408Z","iopub.status.busy":"2025-05-23T16:22:48.260136Z","iopub.status.idle":"2025-05-23T16:22:48.592717Z","shell.execute_reply":"2025-05-23T16:22:48.592066Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"# Plot\nfig = plt.figure(figsize=(10, 3))\nv_max = np.max(np.abs(dpred))\n\nax = 3 * [None]\ncplot = 3 * [None]\ncomp_list = [\"x\", \"y\", \"z\"]\n\nnorm = mpl.colors.Normalize(vmin=-v_max, vmax=v_max)\n\nfor ii in range(0, 3):\n    ax[ii] = fig.add_axes([0.1 + ii * 0.26, 0.15, 0.25, 0.78])\n    cplot[ii] = plot2Ddata(\n        receiver_locations,\n        dpred_plotting[:, ii],\n        ax=ax[ii],\n        ncontour=30,\n        contourOpts={\"cmap\": \"bwr\", \"norm\": norm},\n    )\n    ax[ii].set_title(r\"$\\partial g_z /\\partial {}$\".format(comp_list[ii]))\n    ax[ii].set_xlabel(\"x (m)\")\n    if ii == 0:\n        ax[ii].set_ylabel(\"y (m)\")\n    else:\n        ax[ii].set_yticks([])\n\ncx = fig.add_axes([0.89, 0.13, 0.02, 0.79])\ncbar = mpl.colorbar.ColorbarBase(cx, norm=norm, orientation=\"vertical\", cmap=mpl.cm.bwr)\ncbar.set_label(\"$Eotvos$\", rotation=270, labelpad=10, size=12)\n\nplt.show()","key":"K079Yp37Se"},{"type":"output","id":"MyN0s3MbqWuHvlQp6B3av","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"d464ddada850ff5409617a7515a4520c","path":"/user-tutorials/build/d464ddada850ff5409617a7515a4520c.png"},"text/plain":{"content":"<Figure size 1000x300 with 4 Axes>","content_type":"text/plain"}}}],"key":"t22Yr2Sd2k"}],"key":"oRof6FiwAD"}],"key":"at58S5bSLg"},"references":{"cite":{"order":[],"data":{}}},"footer":{"navigation":{"prev":{"title":"3D Forward Simulation of Gravity Anomaly Data","url":"/fwd-gravity-anomaly-3d","group":"SimPEG User Tutorials"},"next":{"title":"3D Inversion of Gravity Anomaly Data","url":"/inv-gravity-anomaly-3d","group":"SimPEG User Tutorials"}}},"domain":"http://localhost:3000"}