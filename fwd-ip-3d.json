{"version":2,"kind":"Notebook","sha256":"8f117eb62cf21523d7dca57539da05dd671b710f9f5e549c515fdb5c3c6566e2","slug":"fwd-ip-3d","location":"/notebooks/06-ip/fwd_ip_3d.ipynb","dependencies":[],"frontmatter":{"title":"3D IP Forward Simulation","authors":[{"id":"devincowan","nameParsed":{"literal":"Devin Cowan","given":"Devin","family":"Cowan"},"name":"Devin Cowan","orcid":"0000-0002-0089-402X","roles":["Writing – original draft","Writing – review & editing","Software"],"affiliations":["ubc"]}],"kernelspec":{"name":"python3","display_name":"Python 3 (ipykernel)","language":"python"},"license":{"content":{"id":"CC-BY-4.0","url":"https://creativecommons.org/licenses/by/4.0/","name":"Creative Commons Attribution 4.0 International","free":true,"CC":true},"code":{"id":"MIT","url":"https://opensource.org/licenses/MIT","name":"MIT License","free":true,"osi":true}},"github":"https://github.com/simpeg/user-tutorials","subject":"SimPEG User Tutorials","keywords":["geophysics","inversions","python","open-source"],"affiliations":[{"id":"ubc","name":"University of British Columbia","department":"Department of Earth, Ocean and Atmospheric Sciences","address":"2020 – 2207 Main Mall","city":"Vancouver","state":"British Columbia","postal_code":"V6T 1Z4","country":"Canada","isni":"0000 0001 2288 9830","ror":"https://ror.org/03rmrcq20","phone":"604 822 2449"},{"id":"kobold","name":"Kobold Metals"}],"numbering":{"title":{"offset":1}},"source_url":"https://github.com/simpeg/user-tutorials/blob/main/notebooks/06-ip/fwd_ip_3d.ipynb","edit_url":"https://github.com/simpeg/user-tutorials/edit/main/notebooks/06-ip/fwd_ip_3d.ipynb","exports":[{"format":"ipynb","filename":"fwd_ip_3d.ipynb","url":"/user-tutorials/build/fwd_ip_3d-410ee6186a3ea75912a2dc3cd58550f7.ipynb"}]},"widgets":{},"mdast":{"type":"root","children":[{"type":"block","kind":"notebook-content","children":[{"type":"admonition","children":[{"type":"admonitionTitle","children":[{"type":"text","value":"Intermediate notebook","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"TfaCT4m156"}],"key":"r51FM6SUnY"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"This tutorial focusses on intermediate level functionality within SimPEG. Basic functionality within SimPEG is not discussed in detail, as we assume the user is already familiar.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"z6ma5ctkLK"}],"key":"kmDVNYIBMK"}],"class":"caution","key":"vE0OhaiVvO"}],"key":"PsVLO2Apai"},{"type":"block","kind":"notebook-content","children":[{"type":"admonition","children":[{"type":"admonitionTitle","children":[{"type":"text","value":"Medium-weight notebook","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"AIXGE9pWWt"}],"key":"FC3MvKB6oL"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Requires moderate computational resources. Run-times may exceed several minutes and require up to 8 GB of available RAM.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"zYO4jThPeD"}],"key":"GNOdm3ODTS"}],"class":"caution","key":"CGwN8DxVGn"}],"key":"Bwj4KNeKHC"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"strong","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Keywords:","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"jsgwyp8pwv"}],"key":"nChxe1t1Zy"},{"type":"text","value":" Induced polarization, 3D forward simulation, apparent chargeability, tree mesh.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"tAcWw8xAmX"}],"key":"kJgEA1moyX"},{"type":"paragraph","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"strong","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Summary:","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"j2uYtoswGZ"}],"key":"rhQYQE6W8b"},{"type":"text","value":" Here, we use the ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"rJjQDqjoQL"},{"type":"link","url":"https://docs.simpeg.xyz/latest/content/api/simpeg.electromagnetics.static.induced_polarization.html#module-simpeg.electromagnetics.static.induced_polarization","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"simpeg​.electromagnetics​.static​.induced​_polarization","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"pG8dhvSbup"}],"urlSource":"xref:simpeg#simpeg.electromagnetics.static.induced_polarization","internal":false,"protocol":"xref:sphinx","key":"RyxvREIr1y"},{"type":"text","value":" module to simulate 3D DC induced polarization (IP) data on a tree mesh. This approach is ideal when the local geology doesn’t change along the strike direction, as we can leverage the symmetry of the problem to reduce computational cost.","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"D5A85uIN86"}],"key":"XX9JdXx6c8"},{"type":"paragraph","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"Because the same survey geometry, mesh and topography that are used to simulate DC resistivity data are used simulate IP data, almost all of the fundamental functionality used in this tutorial is described in detail in the ","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"WBQKCi3ceW"},{"type":"link","url":"/fwd-dcr-3d","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"3D Forward Simulation of DC Resistivity Data","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"nXkl698DcO"}],"urlSource":"../05-dcr/fwd_dcr_3d.ipynb","dataUrl":"/fwd-dcr-3d.json","internal":true,"protocol":"file","key":"Rud1xXOJxT"},{"type":"text","value":" tutorial. In this tutorial, we focus primarily on functionality related to the simulation of IP data. More specifically, we discuss:","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"fKd6atTNg8"}],"key":"J0qQqLdMH6"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":9,"column":1},"end":{"line":11,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"paragraph","children":[{"type":"text","value":"Defining the chargeability model","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"LHpu4MTCwv"}],"key":"RlYsSpnOm8"}],"key":"tblYnBqqBE"},{"type":"listItem","spread":true,"position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"paragraph","children":[{"type":"text","value":"How to simulate IP data","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"qDyrzAjL3e"}],"key":"U1rJvzfJ3C"}],"key":"iKv54WlTlH"},{"type":"listItem","spread":true,"position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"children":[{"type":"paragraph","children":[{"type":"text","value":"Units of the apparent chargeability model and predicted data","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"KmOiZVBiVs"}],"key":"TerGM05adl"}],"key":"L90LEsVurq"}],"key":"cg31T4OSQx"}],"key":"L8QuSqWQ7q"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Import Modules","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"ZbWD7szKIb"}],"identifier":"import-modules","label":"Import Modules","html_id":"import-modules","implicit":true,"key":"OKG0RRZf6a"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Here, we import all of the functionality required to run the notebook for the tutorial exercise. All of the functionality specific to IP is imported from ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"Gb2bIqwf7r"},{"type":"link","url":"https://docs.simpeg.xyz/latest/content/api/simpeg.electromagnetics.static.induced_polarization.html#module-simpeg.electromagnetics.static.induced_polarization","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"simpeg​.electromagnetics​.static​.induced​_polarization","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"QbC7nls4d0"}],"urlSource":"xref:simpeg#simpeg.electromagnetics.static.induced_polarization","internal":false,"protocol":"xref:sphinx","key":"vg7LqEkBIx"},{"type":"text","value":".\nWe also import some useful utility functions from ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"zxL5uGcupb"},{"type":"link","url":"https://docs.simpeg.xyz/latest/content/api/simpeg.utils.html#module-simpeg.utils","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"simpeg.utils","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"bX8UcIXwCg"}],"urlSource":"xref:simpeg#simpeg.utils","internal":false,"protocol":"xref:sphinx","key":"xM9uBVxaBh"},{"type":"text","value":". To simulate DC and IP data, we need to define our problem geometry on a numerical grid (or mesh).\nTo generate the mesh, we used the ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"gs06RZAdy1"},{"type":"link","url":"https://discretize.simpeg.xyz/en/main","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"discretize","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"zw7WrxC4Do"}],"urlSource":"https://discretize.simpeg.xyz/en/main","key":"kl4vBq27XH"},{"type":"text","value":" package.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"lwlTOi6flN"}],"key":"V8nCAx8CdE"}],"key":"w4esQBAzBx"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2025-05-23T21:16:18.651809Z","iopub.status.busy":"2025-05-23T21:16:18.651343Z","iopub.status.idle":"2025-05-23T21:16:21.065226Z","shell.execute_reply":"2025-05-23T21:16:21.063783Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"# SimPEG functionality\nfrom simpeg import maps, data\nfrom simpeg.utils import model_builder\nfrom simpeg.utils.io_utils.io_utils_electromagnetics import write_dcip_xyz\nfrom simpeg.electromagnetics.static import induced_polarization as ip\nfrom simpeg.electromagnetics.static.utils.static_utils import (\n    generate_dcip_sources_line,\n    pseudo_locations,\n    plot_pseudosection,\n    convert_survey_3d_to_2d_lines,\n)\n\ntry:\n    import plotly\n    from simpeg.electromagnetics.static.utils.static_utils import plot_3d_pseudosection\n    from IPython.core.display import display, HTML\n\n    has_plotly = True\nexcept ImportError:\n    has_plotly = False\n    pass\n\n# discretize functionality\nfrom discretize import TreeMesh\nfrom discretize.utils import mkvc, active_from_xyz\n\n# Common Python functionality\nimport os\nimport numpy as np\nimport matplotlib as mpl\nimport matplotlib.pyplot as plt\nfrom matplotlib.colors import LogNorm, Normalize\n\nmpl.rcParams.update({\"font.size\": 14})\n\nwrite_output = False  # Optional","key":"YA8vXRAlgt"},{"type":"output","id":"HPYyatXgM0PNr_MIGYYqX","data":[],"key":"S3nTDmN0xR"}],"key":"lZ1wmQov9c"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Define the Topography","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"c2eXb5ThmZ"}],"identifier":"define-the-topography","label":"Define the Topography","html_id":"define-the-topography","implicit":true,"key":"WwWO5w0Hsc"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Surface topography is defined as an (N, 3) ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"clCgZjI9Tl"},{"type":"link","url":"https://numpy.org/doc/stable/reference/generated/numpy.ndarray.html#numpy.ndarray","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"numpy.ndarray","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"NhfIX48FXv"}],"urlSource":"xref:numpy#numpy.ndarray","internal":false,"protocol":"xref:sphinx","key":"XCLE5QMAdP"},{"type":"text","value":" for 3D simulations.\nHere, we create basic topography for the forward simulation.\nFor user-specific simulations, you may load topography from an XYZ file.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"s1QQerDhHp"}],"key":"dB8XrOpIYw"}],"key":"FDru2p8vwZ"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2025-05-23T21:16:21.069979Z","iopub.status.busy":"2025-05-23T21:16:21.069475Z","iopub.status.idle":"2025-05-23T21:16:21.078320Z","shell.execute_reply":"2025-05-23T21:16:21.077191Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"# Generate some topography\nx_topo, y_topo = np.meshgrid(\n    np.linspace(-2100, 2100, 141), np.linspace(-2100, 2100, 141)\n)\nz_topo = 410.0 + 140.0 * (1 / np.pi) * (\n    np.arctan((x_topo - 500 * np.sin(np.pi * y_topo / 2800) - 400.0) / 200.0)\n    - np.arctan((x_topo - 500 * np.sin(np.pi * y_topo / 2800) + 400.0) / 200.0)\n)","key":"mXy8pQ1Etj"},{"type":"output","id":"Hr9JRW-mG-nQIITdWY2xY","data":[],"key":"IQ8l3t1oVb"}],"key":"GXHf84vLVk"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2025-05-23T21:16:21.081967Z","iopub.status.busy":"2025-05-23T21:16:21.081701Z","iopub.status.idle":"2025-05-23T21:16:21.087485Z","shell.execute_reply":"2025-05-23T21:16:21.086315Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"# Turn into a (N, 3) numpy.ndarray\nx_topo, y_topo, z_topo = mkvc(x_topo), mkvc(y_topo), mkvc(z_topo)\ntopo_xyz = np.c_[mkvc(x_topo), mkvc(y_topo), mkvc(z_topo)]","key":"GUpuC9wq8g"},{"type":"output","id":"eWlcS2kQdRcO-vM-Jv8Jr","data":[],"key":"NJFo2F62WD"}],"key":"hGP9zVyj4P"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2025-05-23T21:16:21.090986Z","iopub.status.busy":"2025-05-23T21:16:21.090709Z","iopub.status.idle":"2025-05-23T21:16:22.418454Z","shell.execute_reply":"2025-05-23T21:16:22.417586Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"# Plot the topography\nfig = plt.figure(figsize=(6, 6))\nax = fig.add_axes([0.1, 0.1, 0.8, 0.8], projection=\"3d\")\nax.set_zlim([-400, 400])\nax.scatter3D(topo_xyz[:, 0], topo_xyz[:, 1], topo_xyz[:, 2], s=0.25, c=\"b\")\nax.set_box_aspect(aspect=None, zoom=0.85)\nax.set_xlabel(\"X (m)\", labelpad=10)\nax.set_ylabel(\"Y (m)\", labelpad=10)\nax.set_zlabel(\"Z (m)\", labelpad=10)\nax.set_title(\"Topography (Exaggerated z-axis)\", fontsize=16, pad=-20)\nax.view_init(elev=45.0, azim=-125)","key":"SydQUEHOBS"},{"type":"output","id":"a-5IgpuOFcu40vWJrE8Gk","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"88f9d8b9fc4c343c8f35c07ef42321e1","path":"/user-tutorials/build/88f9d8b9fc4c343c8f35c07ef42321e1.png"},"text/plain":{"content":"<Figure size 600x600 with 1 Axes>","content_type":"text/plain"}}}],"key":"sCSy8IzNL0"}],"key":"s8ajlgheZg"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Define the IP Survey","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"fX4JrqAIsz"}],"identifier":"define-the-ip-survey","label":"Define the IP Survey","html_id":"define-the-ip-survey","implicit":true,"key":"eMunJHXT9O"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"A full description of elements required to define DC and IP surveys was presented in the ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"T9ebMSYWq8"},{"type":"link","url":"/fwd-dcr-3d","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"3D Forward Simulation of DC Resistivity Data","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"NdP40Rpqlt"}],"urlSource":"../05-dcr/fwd_dcr_3d.ipynb","dataUrl":"/fwd-dcr-3d.json","internal":true,"protocol":"file","key":"MRuGl80TQY"},{"type":"text","value":" tutorial. Here, we take the same approach. The only difference is that our receivers are defined to measure apparent chargeabilities. Because SimPEG uses a linearized formulation for simulating IP data; see ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"eM6iUnQQPP"},{"type":"link","url":"https://docs.simpeg.xyz/latest/content/api/generated/simpeg.electromagnetics.static.induced_polarization.Simulation3DCellCentered.html#simpeg.electromagnetics.static.induced_polarization.simulation3dcellcentered","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Simulation3DCellCentered","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"mj8dn1Wlwd"}],"urlSource":"xref:simpeg#simpeg.electromagnetics.static.induced_polarization.Simulation3DCellCentered","internal":false,"protocol":"xref:sphinx","key":"d5TAhMmHMu"},{"type":"text","value":" or ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"OsoNKWC3Q5"},{"type":"link","url":"https://docs.simpeg.xyz/latest/content/api/generated/simpeg.electromagnetics.static.induced_polarization.Simulation3DNodal.html#simpeg.electromagnetics.static.induced_polarization.simulation3dnodal","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Simulation3DNodal","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"RbSvZJS07j"}],"urlSource":"xref:simpeg#simpeg.electromagnetics.static.induced_polarization.Simulation3DNodal","internal":false,"protocol":"xref:sphinx","key":"CAtmuRdJFB"},{"type":"text","value":", the units of the apparent chargeability data are the same as the units chosen to represent the subsurface chargeabilities..","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"npIVUREntR"}],"key":"c6g0TO4O4A"},{"type":"paragraph","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Here, the survey consists of 5 IP lines that use a dipole-dipole electrode configuration; 1 line along the East-West direction and 2 lines along the North-South direction. Each line is 2000 m in length and has an electrode spacing of 100 m.","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"QrsnP9Rt1x"}],"key":"sp1b2Xy60H"}],"key":"AvAUYHgWIf"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2025-05-23T21:16:22.476536Z","iopub.status.busy":"2025-05-23T21:16:22.476217Z","iopub.status.idle":"2025-05-23T21:16:22.483004Z","shell.execute_reply":"2025-05-23T21:16:22.481870Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"# Define the parameters for each survey line\nsurvey_type = \"dipole-dipole\"\ndimension_type = \"3D\"\ndata_type = \"apparent_chargeability\"\nend_locations_list = [\n    np.r_[-1000.0, 1000.0, 0.0, 0.0],\n    np.r_[-600.0, -600.0, -1000.0, 1000.0],\n    np.r_[-300.0, -300.0, -1000.0, 1000.0],\n    np.r_[0.0, 0.0, -1000.0, 1000.0],\n    np.r_[300.0, 300.0, -1000.0, 1000.0],\n    np.r_[600.0, 600.0, -1000.0, 1000.0],\n]\nstation_separation = 100.0\nnum_rx_per_src = 8","key":"PrACCc1lMg"},{"type":"output","id":"T4p708w3hmm8tM33AgrIg","data":[],"key":"EW8ZyD1D0Q"}],"key":"kNxEu0lOn3"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2025-05-23T21:16:22.485696Z","iopub.status.busy":"2025-05-23T21:16:22.485398Z","iopub.status.idle":"2025-05-23T21:16:24.791550Z","shell.execute_reply":"2025-05-23T21:16:24.790475Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"ip_source_list = []\nfor ii in range(0, len(end_locations_list)):\n    ip_source_list += generate_dcip_sources_line(\n        survey_type,\n        \"apparent_chargeability\",\n        dimension_type,\n        end_locations_list[ii],\n        topo_xyz,\n        num_rx_per_src,\n        station_separation,\n    )\n\n# Define the survey\nsurvey = ip.survey.Survey(ip_source_list)","key":"TLRqqwXqLs"},{"type":"output","id":"cfyO7Z8fvveA32yxOY-au","data":[],"key":"Xrl9Bunm8b"}],"key":"yIPuo5MyB7"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2025-05-23T21:16:24.794515Z","iopub.status.busy":"2025-05-23T21:16:24.794315Z","iopub.status.idle":"2025-05-23T21:16:25.018406Z","shell.execute_reply":"2025-05-23T21:16:25.017431Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"unique_locations = survey.unique_electrode_locations\nfig = plt.figure(figsize=(12, 2.75))\nax1 = fig.add_axes([0.1, 0.1, 0.2, 0.8])\nax1.scatter(unique_locations[:, 0], unique_locations[:, 1], 8, \"r\")\nax1.set_xlabel(\"x (m)\")\nax1.set_ylabel(\"y (m)\")\nax1.set_title(\"Horizontal locations\")\n\npseudo_locations = pseudo_locations(survey)\ninds = (pseudo_locations[:, 1] == 0.0) & (np.abs(pseudo_locations[:, 0]) != 350)\nax2 = fig.add_axes([0.4, 0.1, 0.55, 0.8])\nax2.scatter(pseudo_locations[inds, 0], pseudo_locations[inds, -1], 8, \"r\")\nax2.set_xlabel(\"x (m)\")\nax2.set_ylabel(\"z (m)\")\nax2.set_title(\"Pseudo-locations (EW line)\")\nplt.show()","key":"Uw35oLvaL1"},{"type":"output","id":"zavt2ITn5Q3MAOFKxvw4X","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"e9026ace3b31d734c8ad4fcea45c2e64","path":"/user-tutorials/build/e9026ace3b31d734c8ad4fcea45c2e64.png"},"text/plain":{"content":"<Figure size 1200x275 with 2 Axes>","content_type":"text/plain"}}}],"key":"ZAmAYxTiR6"}],"key":"Di5WNU44td"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Design a (Tree) Mesh","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"cf9ppXPUCO"}],"identifier":"design-a-tree-mesh","label":"Design a (Tree) Mesh","html_id":"design-a-tree-mesh","implicit":true,"key":"H7u4cd23PN"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Here, we generate a tree mesh based on the survey geometry. We use the same mesh that was generated for the ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"oyp7efFQm0"},{"type":"link","url":"/fwd-dcr-3d","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"3D Forward Simulation of DC Resistivity Data","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"RbacJe3gqS"}],"urlSource":"../05-dcr/fwd_dcr_3d.ipynb","dataUrl":"/fwd-dcr-3d.json","internal":true,"protocol":"file","key":"hFFPKiPvTN"},{"type":"text","value":" tutorial. The best-practices for generating meshes for DC/IP simulations is presented in the ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"uyR29GgtPP"},{"type":"link","url":"/fwd-dcr-2d","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"2.5D Forward Simulation of DC Resistivity Data","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"MV7dTGqAC3"}],"urlSource":"../05-dcr/fwd_dcr_2d.ipynb","dataUrl":"/fwd-dcr-2d.json","internal":true,"protocol":"file","key":"QkaMod1OPI"},{"type":"text","value":" tutorial.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"FxkIqjpiDE"}],"key":"TVf19oMGdX"}],"key":"vuBxTH6ls5"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2025-05-23T21:16:25.021878Z","iopub.status.busy":"2025-05-23T21:16:25.021684Z","iopub.status.idle":"2025-05-23T21:16:25.735696Z","shell.execute_reply":"2025-05-23T21:16:25.734511Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"# Defining domain size and minimum cell size\ndh = 25.0  # base cell width\ndom_width_x = 8000.0  # domain width x\ndom_width_y = 8000.0  # domain width y\ndom_width_z = 4000.0  # domain width z\n\n# Number of base mesh cells in each direction. Must be a power of 2\nnbcx = 2 ** int(np.round(np.log(dom_width_x / dh) / np.log(2.0)))  # num. base cells x\nnbcy = 2 ** int(np.round(np.log(dom_width_y / dh) / np.log(2.0)))  # num. base cells y\nnbcz = 2 ** int(np.round(np.log(dom_width_z / dh) / np.log(2.0)))  # num. base cells z\n\n# Define the base mesh\nhx = [(dh, nbcx)]\nhy = [(dh, nbcy)]\nhz = [(dh, nbcz)]\nmesh = TreeMesh([hx, hy, hz], x0=\"CCN\", diagonal_balance=True)\n\n# Shift top to maximum topography\nmesh.origin = mesh.origin + np.r_[0.0, 0.0, z_topo.max()]\n\n# Mesh refinement based on surface topography\nk = np.sqrt(np.sum(topo_xyz[:, 0:2] ** 2, axis=1)) < 1200\nmesh.refine_surface(topo_xyz[k, :], padding_cells_by_level=[0, 4, 4], finalize=False)\n\n# Mesh refinement near electrodes.\nmesh.refine_points(unique_locations, padding_cells_by_level=[6, 6, 4], finalize=False)\n\n# Finalize the mesh\nmesh.finalize()","key":"t5pWigt7S9"},{"type":"output","id":"ys1auP1HSq60sbcHNu2b8","data":[],"key":"Dwg6P7Bepu"}],"key":"HOVHbLlW8g"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Define the Active Cells","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"J7O5HjOSBL"}],"identifier":"define-the-active-cells","label":"Define the Active Cells","html_id":"define-the-active-cells","implicit":true,"key":"DuXHB5J1mo"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Use the ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"uxtmke6LIa"},{"type":"link","url":"https://discretize.simpeg.xyz/en/main/api/generated/discretize.utils.active_from_xyz.html#discretize.utils.active_from_xyz","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"active_from_xyz","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"gvS2N6qIKT"}],"urlSource":"xref:discretize#discretize.utils.active_from_xyz","internal":false,"protocol":"xref:sphinx","key":"tKAKonZ8UN"},{"type":"text","value":" utility function to obtain the indices of the active mesh cells from topography (e.g. cells below surface).","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"mEZhj8RZbw"}],"key":"c2aQCuZuP5"}],"key":"octvZ8GODJ"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2025-05-23T21:16:25.739261Z","iopub.status.busy":"2025-05-23T21:16:25.739058Z","iopub.status.idle":"2025-05-23T21:16:26.170187Z","shell.execute_reply":"2025-05-23T21:16:26.169081Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"# Indices of the active mesh cells from topography (e.g. cells below surface)\nactive_cells = active_from_xyz(mesh, topo_xyz)\n\n# number of active cells\nn_active = np.sum(active_cells)","key":"YE9t6iN3KU"},{"type":"output","id":"5rdf4dzbMCVAsFWR8k8QK","data":[],"key":"yyZOaSQCf5"}],"key":"wcSji1EV2f"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Define the Background Conductivity/Resistivity","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"G2i1w7f1Aa"}],"identifier":"define-the-background-conductivity-resistivity","label":"Define the Background Conductivity/Resistivity","html_id":"define-the-background-conductivity-resistivity","implicit":true,"key":"rfsZAt135T"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"In order to simulate IP data, we require the background conductivity/resistivity defined on the entire mesh. You can generate this directly, or apply the appropriate mapping to different parameterization of the conductivity/resistivity. Here, we generate the same conuductivity model that was used for the ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"OudNNuj9wV"},{"type":"link","url":"/fwd-dcr-3d","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"3D Forward Simulation of DC Resistivity Data","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"JGL890XAWK"}],"urlSource":"../05-dcr/fwd_dcr_3d.ipynb","dataUrl":"/fwd-dcr-3d.json","internal":true,"protocol":"file","key":"VwhS1veM4Q"},{"type":"text","value":" tutorial.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"mGfoC0mZfd"}],"key":"EtpD8n6GZH"}],"key":"RFOUs9RWXe"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2025-05-23T21:16:26.173490Z","iopub.status.busy":"2025-05-23T21:16:26.173239Z","iopub.status.idle":"2025-05-23T21:16:26.177109Z","shell.execute_reply":"2025-05-23T21:16:26.176253Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"# Define electrical conductivities in S/m\nair_conductivity = 1e-8\nbackground_conductivity = 1e-2\nconductor_conductivity = 1e-1\nresistor_conductivity = 1e-3","key":"bLgZXMh43H"},{"type":"output","id":"5-vnP92l5fCpA_Y9r0i0j","data":[],"key":"bv1Nc40Hi8"}],"key":"sO7mjpsoh0"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2025-05-23T21:16:26.180114Z","iopub.status.busy":"2025-05-23T21:16:26.179834Z","iopub.status.idle":"2025-05-23T21:16:26.189543Z","shell.execute_reply":"2025-05-23T21:16:26.188675Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"# Define conductivity model\nconductivity_model = background_conductivity * np.ones(n_active)\n\nind_conductor = model_builder.get_indices_sphere(\n    np.r_[-300.0, 0.0, 100.0], 165.0, mesh.cell_centers[active_cells, :]\n)\nconductivity_model[ind_conductor] = conductor_conductivity\n\nind_resistor = model_builder.get_indices_sphere(\n    np.r_[300.0, 0.0, 100.0], 165.0, mesh.cell_centers[active_cells, :]\n)\nconductivity_model[ind_resistor] = resistor_conductivity","key":"cCkxMtZlvA"},{"type":"output","id":"Lr8XXw0d5FALmVTu5bJYF","data":[],"key":"ovNyI7gfMO"}],"key":"juvUtJKkgu"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2025-05-23T21:16:26.191758Z","iopub.status.busy":"2025-05-23T21:16:26.191498Z","iopub.status.idle":"2025-05-23T21:16:26.199369Z","shell.execute_reply":"2025-05-23T21:16:26.198548Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"# Mapping from conductivity to all mesh cells.\nconductivity_map = maps.InjectActiveCells(mesh, active_cells, air_conductivity)","key":"aceTYWf5e2"},{"type":"output","id":"SlGQxlklSpyZO19pVfkxD","data":[],"key":"xm6ykGq0bF"}],"key":"NXIag4bRnN"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2025-05-23T21:16:26.202289Z","iopub.status.busy":"2025-05-23T21:16:26.202032Z","iopub.status.idle":"2025-05-23T21:16:26.209508Z","shell.execute_reply":"2025-05-23T21:16:26.208577Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"# Mapping to neglect air cells when plotting\nplotting_map = maps.InjectActiveCells(mesh, active_cells, np.nan)","key":"KLSEkr3Aaa"},{"type":"output","id":"rN2l9j7YR94veSnSpydtJ","data":[],"key":"sxb7Z84IPZ"}],"key":"addyVMqrTU"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2025-05-23T21:16:26.212515Z","iopub.status.busy":"2025-05-23T21:16:26.212260Z","iopub.status.idle":"2025-05-23T21:16:26.652317Z","shell.execute_reply":"2025-05-23T21:16:26.651181Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"fig = plt.figure(figsize=(10, 4.5))\n\nnorm = LogNorm(vmin=1e-3, vmax=1e-1)\n\nax1 = fig.add_axes([0.15, 0.15, 0.68, 0.75])\nmesh.plot_slice(\n    plotting_map * conductivity_model,\n    ax=ax1,\n    normal=\"Y\",\n    ind=int(len(mesh.h[1]) / 2),\n    grid=True,\n    pcolor_opts={\"cmap\": mpl.cm.RdYlBu_r, \"norm\": norm},\n)\nax1.set_title(\"Conductivity Model\")\nax1.set_xlabel(\"x (m)\")\nax1.set_ylabel(\"z (m)\")\nax1.set_xlim([-1500, 1500])\nax1.set_ylim([z_topo.max() - 1500, z_topo.max()])\n\nax2 = fig.add_axes([0.84, 0.15, 0.03, 0.75])\ncbar = mpl.colorbar.ColorbarBase(\n    ax2, cmap=mpl.cm.RdYlBu_r, norm=norm, orientation=\"vertical\"\n)\ncbar.set_label(r\"$\\sigma$ [S/m]\", rotation=270, labelpad=15, size=16)","key":"PV4NOB4912"},{"type":"output","id":"tGVM3MphNdS82KgJZ0VId","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"1275325f4a9733dbb0fb2a51b6e98154","path":"/user-tutorials/build/1275325f4a9733dbb0fb2a51b6e98154.png"},"text/plain":{"content":"<Figure size 1000x450 with 2 Axes>","content_type":"text/plain"}}}],"key":"OuZK47Rv0d"}],"key":"dGR8FmUF7M"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Define the Chargeability Model and Mapping","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"z6yrcjk5CA"}],"identifier":"define-the-chargeability-model-and-mapping","label":"Define the Chargeability Model and Mapping","html_id":"define-the-chargeability-model-and-mapping","implicit":true,"key":"oxLkaTzjan"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"The model does not need to be synonymous with the physical property values. But it is common to define chargeability models as the chargeabilities for all subsurface (active) cells. So, what are the units?","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"zDEiHVjVpK"}],"key":"iTlJZx2etc"},{"type":"paragraph","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"SimPEG uses a linearized formulation for simulating IP data; see ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"r2jI3IYHB9"},{"type":"link","url":"https://docs.simpeg.xyz/latest/content/api/generated/simpeg.electromagnetics.static.induced_polarization.Simulation2DCellCentered.html#simpeg.electromagnetics.static.induced_polarization.simulation2dcellcentered","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Simulation2DCellCentered","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"z1Y4H8lV1j"}],"urlSource":"xref:simpeg#simpeg.electromagnetics.static.induced_polarization.Simulation2DCellCentered","internal":false,"protocol":"xref:sphinx","key":"SJmKBx4ojt"},{"type":"text","value":" or ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"BIuglyq3Ow"},{"type":"link","url":"https://docs.simpeg.xyz/latest/content/api/generated/simpeg.electromagnetics.static.induced_polarization.Simulation2DNodal.html#simpeg.electromagnetics.static.induced_polarization.simulation2dnodal","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Simulation2DNodal","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"iu1hWMwDsf"}],"urlSource":"xref:simpeg#simpeg.electromagnetics.static.induced_polarization.Simulation2DNodal","internal":false,"protocol":"xref:sphinx","key":"DN9btz1Zus"},{"type":"text","value":". In this formulation, any standard definition of the chargeability can be used. And the resulting apparent chargeability data will be in terms of the same units; e.g. intrinsic chargeability (V/V or mV/V) or integrated chargeability (ms). If you are simulating secondary voltages, the chargeability model must represent intrinsic chargeabilities (","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"ukuSRxodbe"},{"type":"inlineMath","value":"0 \\leq \\eta \\leq 1","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>0</mn><mo>≤</mo><mi>η</mi><mo>≤</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">0 \\leq \\eta \\leq 1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7804em;vertical-align:-0.136em;\"></span><span class=\"mord\">0</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8304em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">η</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1</span></span></span></span>","key":"ILqMLnr5Su"},{"type":"text","value":") in V/V.","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"aKIntQqnJ2"}],"key":"uTUeLKqUkp"},{"type":"paragraph","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"For this tutorial, we use the intrinsic chargeability in units V/V. Here, the conductive sphere is chargeable, but the resistive sphere and the host are not. Note that unlike DC resistivity, the physical property value defining air cells for IP simulation can be set to zero.","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"tsQYIBJ6hf"}],"key":"qkFu7o9FwK"}],"key":"BfrC4pIPtJ"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2025-05-23T21:16:26.655731Z","iopub.status.busy":"2025-05-23T21:16:26.655519Z","iopub.status.idle":"2025-05-23T21:16:26.659308Z","shell.execute_reply":"2025-05-23T21:16:26.658569Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"# Define intrinsic chargeability model (V/V)\nair_value = 0.0\nbackground_value = 1e-6\nchargeable_value = 0.1","key":"cloBtr4JUB"},{"type":"output","id":"6PseUZQ9_NTdqd8o3X43f","data":[],"key":"vyUEyNNOLO"}],"key":"MHgIgJE7gb"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2025-05-23T21:16:26.662607Z","iopub.status.busy":"2025-05-23T21:16:26.662299Z","iopub.status.idle":"2025-05-23T21:16:26.671402Z","shell.execute_reply":"2025-05-23T21:16:26.670303Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"# Define chargeability model\nchargeability_model = background_value * np.ones(n_active)\n\nind_chargeable = model_builder.get_indices_sphere(\n    np.r_[-350.0, 0.0, 100.0], 160.0, mesh.cell_centers[active_cells, :]\n)\n\nchargeability_model[ind_chargeable] = chargeable_value","key":"pdHPq9F2Op"},{"type":"output","id":"wyIFBqGPQviQOwJdvEXog","data":[],"key":"BflEzwlp2D"}],"key":"aIZcpedQuL"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2025-05-23T21:16:26.674186Z","iopub.status.busy":"2025-05-23T21:16:26.673670Z","iopub.status.idle":"2025-05-23T21:16:26.681573Z","shell.execute_reply":"2025-05-23T21:16:26.680770Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"# Define mapping from model to mesh cells\nchargeability_map = maps.InjectActiveCells(mesh, active_cells, air_value)","key":"tsw9WoX0Xv"},{"type":"output","id":"ce1RQS4VWhcTJpOmFB3oP","data":[],"key":"Gt7gSPymwO"}],"key":"mLcQDx2CqP"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2025-05-23T21:16:26.684659Z","iopub.status.busy":"2025-05-23T21:16:26.684101Z","iopub.status.idle":"2025-05-23T21:16:26.926087Z","shell.execute_reply":"2025-05-23T21:16:26.925284Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"# Plot Chargeability Model\nfig = plt.figure(figsize=(10, 4))\n\nnorm = Normalize(vmin=0.0, vmax=0.1)\n\nax1 = fig.add_axes([0.15, 0.15, 0.67, 0.75])\nmesh.plot_slice(\n    plotting_map * chargeability_model,\n    ax=ax1,\n    normal=\"Y\",\n    ind=int(len(mesh.h[1]) / 2),\n    grid=True,\n    pcolor_opts={\"cmap\": mpl.cm.plasma, \"norm\": norm},\n)\nax1.set_title(\"Chargeability Model\")\nax1.set_xlabel(\"x (m)\")\nax1.set_ylabel(\"z (m)\")\nax1.set_xlim([-1500, 1500])\nax1.set_ylim([z_topo.max() - 1500, z_topo.max()])\n\nax2 = fig.add_axes([0.84, 0.15, 0.03, 0.75])\ncbar = mpl.colorbar.ColorbarBase(\n    ax2, cmap=mpl.cm.plasma, norm=norm, orientation=\"vertical\", format=\"%.2f\"\n)\ncbar.set_label(\"Intrinsic Chargeability [V/V]\", rotation=270, labelpad=15, size=12)","key":"dvLWKe6NOG"},{"type":"output","id":"rewdSj3OQiLcLwBQKbCP5","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"3dacfb17f7303ab4ad3875c7acd9d8c6","path":"/user-tutorials/build/3dacfb17f7303ab4ad3875c7acd9d8c6.png"},"text/plain":{"content":"<Figure size 1000x400 with 2 Axes>","content_type":"text/plain"}}}],"key":"gjkwL1A5oH"}],"key":"MasuyM5fpG"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Project Electrodes to Discretized Topography","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"syt0rFvayR"}],"identifier":"project-electrodes-to-discretized-topography","label":"Project Electrodes to Discretized Topography","html_id":"project-electrodes-to-discretized-topography","implicit":true,"key":"z8kSUKjK8F"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"As explained in the ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"aBqRBe1V1i"},{"type":"link","url":"/fwd-dcr-3d","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"3D Forward Simulation of DC Resistivity Data","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"mTfvTP8du7"}],"urlSource":"../05-dcr/fwd_dcr_3d.ipynb","dataUrl":"/fwd-dcr-3d.json","internal":true,"protocol":"file","key":"WWbqi6JlvL"},{"type":"text","value":" tutorial, we use the ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"FPAxVY71EE"},{"type":"link","url":"https://docs.simpeg.xyz/latest/content/api/generated/simpeg.electromagnetics.static.resistivity.Survey.drape_electrodes_on_topography.html#simpeg.electromagnetics.static.resistivity.survey.drape_electrodes_on_topography","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"drape​_electrodes​_on​_topography","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"QS5vwDEsSq"}],"urlSource":"xref:simpeg#simpeg.electromagnetics.static.resistivity.Survey.drape_electrodes_on_topography","internal":false,"protocol":"xref:sphinx","key":"Wqbjil4PR5"},{"type":"text","value":" method to project the electrodes to the discrete surface topography.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"zjoHDsR5kc"}],"key":"Vp4LZeyshY"}],"key":"q2bTBFm6u6"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2025-05-23T21:16:26.929632Z","iopub.status.busy":"2025-05-23T21:16:26.929348Z","iopub.status.idle":"2025-05-23T21:16:26.997388Z","shell.execute_reply":"2025-05-23T21:16:26.996288Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"survey.drape_electrodes_on_topography(mesh, active_cells, option=\"top\")","key":"aqgMnJXpJs"},{"type":"output","id":"N0yd9mDr7y8BuTbmT_SiQ","data":[],"key":"Yg5Iju7fpG"}],"key":"zfFPZbc0DE"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Define the IP Simulation","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"jseqldw7OJ"}],"identifier":"define-the-ip-simulation","label":"Define the IP Simulation","html_id":"define-the-ip-simulation","implicit":true,"key":"fHxgw2mRFj"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"There are two simulation classes which may be used to simulate 2.5D IP data:","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"OXxdv31gL1"}],"key":"GZ4rifdAYG"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":5,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"paragraph","children":[{"type":"link","url":"https://docs.simpeg.xyz/latest/content/api/generated/simpeg.electromagnetics.static.induced_polarization.Simulation3DNodal.html#simpeg.electromagnetics.static.induced_polarization.simulation3dnodal","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Simulation3DNodel","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"fcdI1Jxtg2"}],"urlSource":"xref:simpeg#simpeg.electromagnetics.static.induced_polarization.Simulation3DNodal","internal":false,"protocol":"xref:sphinx","key":"cryaIrALdp"},{"type":"text","value":", which defines the discrete electric potentials on mesh nodes.","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"tfvCkuHeRF"}],"key":"k0WHtgIpE2"}],"key":"Lhz7rx0kKw"},{"type":"listItem","spread":true,"position":{"start":{"line":6,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"paragraph","children":[{"type":"link","url":"https://docs.simpeg.xyz/latest/content/api/generated/simpeg.electromagnetics.static.induced_polarization.Simulation3DCellCentered.html#simpeg.electromagnetics.static.induced_polarization.simulation3dcellcentered","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"Simulation3DCellCentered","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"KDwBwSgyuU"}],"urlSource":"xref:simpeg#simpeg.electromagnetics.static.induced_polarization.Simulation3DCellCentered","internal":false,"protocol":"xref:sphinx","key":"xsI2BiFqba"},{"type":"text","value":", which defines the discrete electric potentials at cell centers.","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"ErJW3Z72mq"}],"key":"erpurMHFCI"}],"key":"H3h7Ut52eM"}],"key":"OgWmk5qQdj"},{"type":"paragraph","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"For surface DC and IP data, the nodal formulation is more well-suited and will be used here. The cell-centered formulation works well for simulating borehole DC and IP data. To fully define the forward simulation, we need to connect the simulation object to:","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"KN8bxHi2Ox"}],"key":"RYPwwQRWIc"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":10,"column":1},"end":{"line":14,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"paragraph","children":[{"type":"text","value":"the survey","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"gfr1nMUASn"}],"key":"i2tpd4mIx7"}],"key":"EYhaXy8p1N"},{"type":"listItem","spread":true,"position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"children":[{"type":"paragraph","children":[{"type":"text","value":"the mesh","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"VfMZlsKgXR"}],"key":"dRXUZvBz3M"}],"key":"yzrBoeISKn"},{"type":"listItem","spread":true,"position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"children":[{"type":"paragraph","children":[{"type":"text","value":"a background conductivity or resistivity model","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"key":"H6GKK6w2ho"}],"key":"hGmwcT02sf"}],"key":"hEmpaKQXlL"},{"type":"listItem","spread":true,"position":{"start":{"line":13,"column":1},"end":{"line":14,"column":1}},"children":[{"type":"paragraph","children":[{"type":"text","value":"the mapping from the chargeability model to the mesh","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"key":"o77bJcjtC1"}],"key":"R2GjbSTLyU"}],"key":"oTlwLj9oai"}],"key":"pF4Bo8EskX"},{"type":"paragraph","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"children":[{"type":"text","value":"If working with electrical conductivity, use the ","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"key":"enrE0OsKGk"},{"type":"inlineCode","value":"sigma","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"key":"hflrk9bxSV"},{"type":"text","value":" keyword argument to define the background conductivity on the entire mesh. If working with electrical resistivity, use the ","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"key":"Qcp19FvUaP"},{"type":"inlineCode","value":"rho","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"key":"BRX8Zz10Lr"},{"type":"text","value":" keyword argument to define the background resistivity on the entire mesh. The ","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"key":"tGVnoKyfbW"},{"type":"inlineCode","value":"etaMap","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"key":"ffO4ifZsXp"},{"type":"text","value":" is used to define the mapping from the chargeability model to the chargeabilities on the entire mesh.","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"key":"KwfNI2e3TC"}],"key":"nV1yCVYZN3"}],"key":"zRZnyUt0d7"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2025-05-23T21:16:27.001388Z","iopub.status.busy":"2025-05-23T21:16:27.001182Z","iopub.status.idle":"2025-05-23T21:16:27.495313Z","shell.execute_reply":"2025-05-23T21:16:27.494172Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"ip_simulation = ip.Simulation3DNodal(\n    mesh,\n    survey=survey,\n    etaMap=chargeability_map,\n    sigma=conductivity_map * conductivity_model,\n)","key":"xJ8YTpYEQi"},{"type":"output","id":"P4YYW06VMp4uL8DKPG8oW","data":[],"key":"P7rjXLr2tC"}],"key":"Rmw0GntXxu"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Simulate IP Data","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"jtX3gj0oAt"}],"identifier":"simulate-ip-data","label":"Simulate IP Data","html_id":"simulate-ip-data","implicit":true,"key":"m324iNyxlQ"}],"key":"deReG4dQFo"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2025-05-23T21:16:27.498898Z","iopub.status.busy":"2025-05-23T21:16:27.498609Z","iopub.status.idle":"2025-05-23T21:16:51.616124Z","shell.execute_reply":"2025-05-23T21:16:51.615026Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"dpred_ip = ip_simulation.dpred(chargeability_model)","key":"yLm9l9dsmP"},{"type":"output","id":"R3Ufrk5FWPhKsPz02LYuC","data":[{"name":"stderr","output_type":"stream","text":"/t40array/ssoler/miniforge3/envs/simpeg-user-tutorials/lib/python3.12/site-packages/simpeg/base/pde_simulation.py:490: DefaultSolverWarning: Using the default solver: Pardiso. \n\nIf you would like to suppress this notification, add \nwarnings.filterwarnings('ignore', simpeg.utils.solver_utils.DefaultSolverWarning)\n to your script.\n  return get_default_solver(warn=True)\n"}],"key":"ao2Ft3BvsY"}],"key":"FEqqvayaDH"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Plot IP Data in Pseudosection","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"y9HWfK5kQX"}],"identifier":"plot-ip-data-in-pseudosection","label":"Plot IP Data in Pseudosection","html_id":"plot-ip-data-in-pseudosection","implicit":true,"key":"nacqvailYw"}],"key":"X8kvNveTyE"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Plot 3D Pseudosection","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"RmD6JUsRD8"}],"identifier":"plot-3d-pseudosection","label":"Plot 3D Pseudosection","html_id":"plot-3d-pseudosection","implicit":true,"key":"PPDL33yiFX"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"For general 3D survey configurations, we can use the ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"RNMa0fhMDX"},{"type":"link","url":"simpeg#simpeg.electromagnetics.static.utils.plot_3d_pseudosection","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"plot​_3d​_pseudosection","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"CDxIQLvhp5"}],"urlSource":"simpeg#simpeg.electromagnetics.static.utils.plot_3d_pseudosection","key":"t7ED5Egfmd"},{"type":"text","value":" utility function to plot 3D pseudosection data. For large datasets or for surveys with unconventional electrode geometry, interpretation can be challenging if we plot every datum. Here, we plot 3 out of the 6 survey lines to better image anomalous structures. To plot ALL of the data, simply remove the keyword argument ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"rJ4kSdB3Vo"},{"type":"emphasis","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"plane_points","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"tKFDxilBdr"}],"key":"mdk7rMWfMx"},{"type":"text","value":" when calling ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"W2YNzHTlzM"},{"type":"emphasis","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"plot_3d_pseudosection","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"mb1XJVa26y"}],"key":"sO4Mtmb1x5"},{"type":"text","value":". To use this utility, you must have Python’s ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"L4ybp0nyjj"},{"type":"link","url":"https://plotly.com/python/","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"plotly","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"sOgUTuQAiE"}],"urlSource":"https://plotly.com/python/","key":"IVQ38WXyiV"},{"type":"text","value":" package.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"nIQT5iuh1M"}],"key":"QOkrldwdSK"}],"key":"TLc6rYNGm0"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2025-05-23T21:16:51.619592Z","iopub.status.busy":"2025-05-23T21:16:51.619245Z","iopub.status.idle":"2025-05-23T21:16:51.624977Z","shell.execute_reply":"2025-05-23T21:16:51.624396Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"# Empty list for plane points\nplane_points = []\n\n# 3-points defining the plane for EW survey line\np1, p2, p3 = np.array([-1000, 0, 0]), np.array([1000, 0, 0]), np.array([0, 0, -1000])\nplane_points.append([p1, p2, p3])\n\n# NS at x = -300 m\np1, p2, p3 = (\n    np.array([-300, -1000, 0]),\n    np.array([-300, 1000, 0]),\n    np.array([-300, 0, -1000]),\n)\nplane_points.append([p1, p2, p3])\n\n# NS at x = 300 m\np1, p2, p3 = (\n    np.array([300, -1000, 0]),\n    np.array([300, 1000, 0]),\n    np.array([300, 0, -1000]),\n)\nplane_points.append([p1, p2, p3])","key":"PSE4LK5HiO"},{"type":"output","id":"R4OgAMxSJyGlsKCVUCAnK","data":[],"key":"mWDOayUNBO"}],"key":"R2olE7c6q2"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2025-05-23T21:16:51.627254Z","iopub.status.busy":"2025-05-23T21:16:51.626955Z","iopub.status.idle":"2025-05-23T21:16:51.632538Z","shell.execute_reply":"2025-05-23T21:16:51.631860Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"if has_plotly:\n    fig = plot_3d_pseudosection(\n        survey,\n        dpred_ip,\n        vlim=[0.0, np.max(dpred_ip)],\n        scale=\"linear\",\n        units=\"V/V\",\n        plane_points=plane_points,\n        plane_distance=15,\n        marker_opts={\"colorscale\": \"plasma\"},\n    )\n\n    fig.update_layout(\n        title_text=\"Apparent Chargeability\",\n        title_x=0.5,\n        title_font_size=24,\n        width=650,\n        height=500,\n        scene_camera=dict(center=dict(x=0.05, y=0, z=-0.4)),\n    )\n\n    #     plotly.io.show(fig)\n    html_str = plotly.io.to_html(fig)\n    display(HTML(html_str))\n\nelse:\n    print(\"INSTALL 'PLOTLY' TO VISUALIZE 3D PSEUDOSECTIONS\")","key":"khiLnM252X"},{"type":"output","id":"v9rTO_3ia8pIPV83bpWxw","data":[{"name":"stdout","output_type":"stream","text":"INSTALL 'PLOTLY' TO VISUALIZE 3D PSEUDOSECTIONS\n"}],"key":"Yw1YxXSaWL"}],"key":"usM6iavegN"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Plot Individual Lines in 2D Pseudosection","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"V5ENnFZmnC"}],"identifier":"plot-individual-lines-in-2d-pseudosection","label":"Plot Individual Lines in 2D Pseudosection","html_id":"plot-individual-lines-in-2d-pseudosection","implicit":true,"key":"tgQNkLZxdz"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"For conventional DC resistivity surveys, the electrodes are located along a set of survey lines. If we know which the survey line associated with each datum, we can parse the 3D survey into a set of 2D survey lines. Then we can plot individual pseudosections for each survey line. This was detailed in the ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"h7bF1HaESs"},{"type":"link","url":"/fwd-dcr-3d","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"3D Forward Simulation of DC Resistivity Data","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"SQHCcURmwk"}],"urlSource":"../05-dcr/fwd_dcr_3d.ipynb","dataUrl":"/fwd-dcr-3d.json","internal":true,"protocol":"file","key":"Bw70J0D2C8"},{"type":"text","value":" tutorial. Here, we have 6 survey lines, each of which has the same number of data. So assigning a line ID to each datum is easy. You may need to do something more sophisticated in other cases.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"jsyvqgl5y4"}],"key":"oOqYJBupKG"}],"key":"pyRg6f5pXm"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2025-05-23T21:16:51.634951Z","iopub.status.busy":"2025-05-23T21:16:51.634654Z","iopub.status.idle":"2025-05-23T21:16:51.638647Z","shell.execute_reply":"2025-05-23T21:16:51.638027Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"# Define the line IDs for all data\nn_lines = len(end_locations_list)\nn_data_per_line = int(survey.nD / n_lines)\nlineID = np.hstack([(ii + 1) * np.ones(n_data_per_line) for ii in range(n_lines)])","key":"xJS2oJucLH"},{"type":"output","id":"VGzUqes1FqZdq3-eSpwnR","data":[],"key":"XMUehcA9Ry"}],"key":"rBrlD5aqMo"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Here, we use the ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"SuY3nVxYrZ"},{"type":"link","url":"simpeg#simpeg.electromagnetics.static.utils.convert_survey_3d_to_2d_lines","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"convert​_survey​_3d​_to​_2d​_lines","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"pd8t5Cw7d0"}],"urlSource":"simpeg#simpeg.electromagnetics.static.utils.convert_survey_3d_to_2d_lines","key":"nQFiz12Etg"},{"type":"text","value":" to generate the list of 2D surveys.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"nTPotb5xT8"}],"key":"dPfvdRjNG8"}],"key":"HlAdfvZ5Oc"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2025-05-23T21:16:51.640953Z","iopub.status.busy":"2025-05-23T21:16:51.640693Z","iopub.status.idle":"2025-05-23T21:16:51.673195Z","shell.execute_reply":"2025-05-23T21:16:51.672602Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"survey_2d_list, index_list = convert_survey_3d_to_2d_lines(\n    survey, lineID, data_type=\"apparent_chargeability\", output_indexing=True\n)","key":"Io0T272A8K"},{"type":"output","id":"yuKsJyBlGY9s0OouHRsoQ","data":[],"key":"OJFn5zrxmr"}],"key":"ACRVq5Qzrm"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Next, we create list of 2D apparent chargeabilities.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"ihDkzxDiWo"}],"key":"MXYlxbTkCi"}],"key":"jKS0CIVyou"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2025-05-23T21:16:51.675492Z","iopub.status.busy":"2025-05-23T21:16:51.675232Z","iopub.status.idle":"2025-05-23T21:16:51.678630Z","shell.execute_reply":"2025-05-23T21:16:51.678044Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"dobs_2d_list = []\napparent_chargeability_2d = []\nfor ind in index_list:\n    dobs_2d_list.append(dpred_ip[ind])\n    apparent_chargeability_2d.append(dpred_ip[ind])","key":"W9ScPWQ71b"},{"type":"output","id":"c8gh0TCBC8DFsE-95zjLG","data":[],"key":"O57oXG1Zdq"}],"key":"R2Np2sD0Li"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Now we can use the ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"qtKUWBogLb"},{"type":"link","url":"simpeg#simpeg.electromagnetics.static.utils.plot_2d_pseudosection","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"plot​_2d​_pseudosection","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"ySAZb3vv5e"}],"urlSource":"simpeg#simpeg.electromagnetics.static.utils.plot_2d_pseudosection","key":"q4czsCuXte"},{"type":"text","value":" utility function to plot the pseudosection for the desired survey line.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"BF3hPwaJJT"}],"key":"ndVAnN2g2Y"}],"key":"OejXy4G3h8"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2025-05-23T21:16:51.680939Z","iopub.status.busy":"2025-05-23T21:16:51.680682Z","iopub.status.idle":"2025-05-23T21:16:51.879751Z","shell.execute_reply":"2025-05-23T21:16:51.878984Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"line_index = 0\n\nfig = plt.figure(figsize=(8, 2.75))\n\nax1 = fig.add_axes([0.1, 0.1, 0.7, 0.8])\ncax1 = fig.add_axes([0.82, 0.1, 0.025, 0.8])\nplot_pseudosection(\n    survey_2d_list[line_index],\n    apparent_chargeability_2d[line_index],\n    \"contourf\",\n    ax=ax1,\n    cax=cax1,\n    scale=\"linear\",\n    cbar_label=\"V/V\",\n    mask_topography=True,\n    contourf_opts={\"levels\": 20, \"cmap\": mpl.cm.plasma},\n)\nax1.set_title(\"Apparent Chargeability (V/V)\")\n\nplt.show()","key":"hMQNIR8zLm"},{"type":"output","id":"bJ6wSiXDChnlG0P_8Dw6w","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"556bc783603cafc0bf974ffa0aa538c7","path":"/user-tutorials/build/556bc783603cafc0bf974ffa0aa538c7.png"},"text/plain":{"content":"<Figure size 800x275 with 2 Axes>","content_type":"text/plain"}}}],"key":"TMiMdns9TN"}],"key":"iQaHI8Hmny"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"strong","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Optional:","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"KAk3IM0G01"}],"key":"LWvT8KE3na"},{"type":"text","value":" Write data and topography","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"IuuI0eo43N"}],"key":"nTuNId41Pn"}],"key":"bEubO0gvdT"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2025-05-23T21:16:51.882724Z","iopub.status.busy":"2025-05-23T21:16:51.882518Z","iopub.status.idle":"2025-05-23T21:16:51.887640Z","shell.execute_reply":"2025-05-23T21:16:51.887037Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"if write_output:\n    dir_path = os.path.sep.join([\".\", \"fwd_ip_3d_outputs\"]) + os.path.sep\n    if not os.path.exists(dir_path):\n        os.mkdir(dir_path)\n\n    # Add 10% Gaussian noise to each datum\n    rng = np.random.default_rng(seed=433)\n    std = 5e-3 * np.ones_like(dpred_ip)\n    noise = rng.normal(scale=std, size=len(dpred_ip))\n    dobs = dpred_ip + noise\n\n    # Create dictionary that stores line IDs\n    out_dict = {\"LINEID\": lineID}\n\n    # Create a survey with the original electrode locations\n    # and not the shifted ones\n    source_list = []\n    for ii in range(0, len(end_locations_list)):\n        source_list += generate_dcip_sources_line(\n            survey_type,\n            data_type,\n            dimension_type,\n            end_locations_list[ii],\n            topo_xyz,\n            num_rx_per_src,\n            station_separation,\n        )\n    survey_original = ip.survey.Survey(source_list)\n\n    # Write out data at their original electrode locations (not shifted)\n    data_obj = data.Data(survey_original, dobs=dobs, standard_deviation=std)\n\n    fname = dir_path + \"ip_data.xyz\"\n    write_dcip_xyz(\n        fname,\n        data_obj,\n        data_header=\"APP_CHG\",\n        uncertainties_header=\"UNCERT\",\n        out_dict=out_dict,\n    )\n\n    fname = dir_path + \"topo_xyz.txt\"\n    np.savetxt(fname, topo_xyz, fmt=\"%.4e\")","key":"WWKNKqfLWv"},{"type":"output","id":"1oP-9QuyYxIeHeuFcs31R","data":[],"key":"P3BHA10dlX"}],"key":"ki7tEKAvrv"}],"key":"ikIK3KItQX"},"references":{"cite":{"order":[],"data":{}}},"footer":{"navigation":{"prev":{"title":"2.5D IP Forward Simulation","url":"/fwd-ip-2d","group":"SimPEG User Tutorials"},"next":{"title":"2.5D IP Inversion","url":"/inv-ip-2d","group":"SimPEG User Tutorials"}}},"domain":"http://localhost:3000"}