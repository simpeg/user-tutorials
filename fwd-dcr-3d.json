{"kind":"Notebook","sha256":"1322c3c957408a0397a65d41a3b958c5e14b7bf01b3308d2855097fbcd01f8e2","slug":"fwd-dcr-3d","location":"/notebooks/05-dcr/fwd_dcr_3d.ipynb","dependencies":[],"frontmatter":{"title":"3D Forward Simulation","content_includes_title":false,"kernelspec":{"name":"python3","display_name":"Python 3 (ipykernel)","language":"python"},"authors":[{"nameParsed":{"literal":"Devin Cowan","given":"Devin","family":"Cowan"},"name":"Devin Cowan","affiliations":["University of British Columbia"],"id":"contributors-myst-generated-uid-0"},{"nameParsed":{"literal":"Santiago Soler","given":"Santiago","family":"Soler"},"name":"Santiago Soler","affiliations":["University of British Columbia"],"id":"contributors-myst-generated-uid-1"}],"license":{"content":{"id":"CC-BY-4.0","name":"Creative Commons Attribution 4.0 International","free":true,"CC":true,"url":"https://creativecommons.org/licenses/by/4.0/"},"code":{"id":"MIT","name":"MIT License","osi":true,"free":true,"url":"https://opensource.org/licenses/MIT"}},"github":"https://github.com/simpeg/user-tutorials","subject":"SimPEG User Tutorials","keywords":["geophysics","inversions","python","open-source"],"affiliations":[{"id":"University of British Columbia","name":"University of British Columbia"}],"exports":[{"format":"ipynb","filename":"fwd_dcr_3d.ipynb","url":"/user-tutorials/build/fwd_dcr_3d-130511532de18a3a4ab3b6c8cc9decc0.ipynb"}]},"mdast":{"type":"root","children":[{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"admonition","class":"caution","children":[{"type":"admonitionTitle","children":[{"type":"text","value":"Intermediate notebook","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"fcc5vmztqU"}],"key":"nJJy6pGt1R"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"This tutorial focusses on intermediate level functionality within SimPEG. Basic functionality within SimPEG is not discussed in detail, as we assume the user is already familiar.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"SWV4tu2XtZ"}],"key":"vicEIINLJx"}],"key":"aXnR6yV9Qv"}],"key":"ts8gLkqOZp"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"admonition","class":"caution","children":[{"type":"admonitionTitle","children":[{"type":"text","value":"Medium-weight notebook","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"LDl7RiW2PT"}],"key":"GfTPwp98Aa"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Requires moderate computational resources. Run-times may exceed several minutes and require up to 8 GB of available RAM.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"BpRbqq4Z3k"}],"key":"fUIDznIITP"}],"key":"GDm521l12f"}],"key":"IFtESXV2tl"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"strong","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Author:","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"dNyYDaLKP2"}],"key":"N7bOcvjmWm"},{"type":"text","value":" Devin C. Cowan","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"KXQ3DAehBW"}],"key":"rNGFXw9yt0"},{"type":"paragraph","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"strong","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Keywords:","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"kJUfuJijJy"}],"key":"WPeECfOqNf"},{"type":"text","value":" DC Resistivity, forward simulation, 3D, apparent resistivity, tree mesh.","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"jkanPudBAV"}],"key":"ApFoOKOFgM"},{"type":"paragraph","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"strong","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"Summary:","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"OHR2bInrFi"}],"key":"vzG0vt3ov8"},{"type":"text","value":" Here we use the module ","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"ldcTeWyoyH"},{"type":"link","url":"https://docs.simpeg.xyz/latest/content/api/simpeg.electromagnetics.static.resistivity.html#module-simpeg.electromagnetics.static.resistivity","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"simpeg​.electromagnetics​.static​.resistivity","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"eFAojZ2v7V"}],"urlSource":"myst:simpeg#simpeg.electromagnetics.static.resistivity","internal":false,"protocol":"xref:sphinx","key":"KSnRVY85of"},{"type":"text","value":" to simulate 3D DC resistivity data on a tree mesh. Most of the functionality required for this tutorial was presented in the ","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"DWuOctdDAL"},{"type":"link","url":"/fwd-dcr-2d","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"2.5D Forward Simulation","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"jkqpm0lMMo"}],"urlSource":"fwd_dcr_2d.ipynb","dataUrl":"/fwd-dcr-2d.json","internal":true,"protocol":"file","key":"vdnEtKeowr"},{"type":"text","value":" tutorial. We strongly urge the reader to work through the 2.5D tutorial prior to working through this one, as we will avoid verbose repitition of content.","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"N0EP79egJH"}],"key":"SeKLZ5W0nC"},{"type":"paragraph","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"children":[{"type":"strong","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"children":[{"type":"text","value":"Learning Objectives:","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"key":"DakELAXBhe"}],"key":"goX1lXaYVV"}],"key":"OyhJglXeEY"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":15,"column":1},"end":{"line":19,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"children":[{"type":"text","value":"Demonstrating 3D forward simulation of DC resistivity data with SimPEG.","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"key":"zys7ppxdS7"}],"key":"YUsscAAjyo"},{"type":"listItem","spread":true,"position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"children":[{"type":"text","value":"Specific aspects of designing 3D DC resistivity surveys.","position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"key":"is44pUhjv1"}],"key":"ZjJE4fpiB9"},{"type":"listItem","spread":true,"position":{"start":{"line":17,"column":1},"end":{"line":17,"column":1}},"children":[{"type":"text","value":"Generating and plotting models on 3D meshes.","position":{"start":{"line":17,"column":1},"end":{"line":17,"column":1}},"key":"JHKJ4DldyF"}],"key":"msiuxEFUJq"},{"type":"listItem","spread":true,"position":{"start":{"line":18,"column":1},"end":{"line":18,"column":1}},"children":[{"type":"text","value":"How to plot 3D data in pseudosection.","position":{"start":{"line":18,"column":1},"end":{"line":18,"column":1}},"key":"bqFNj2Xxqa"}],"key":"oPnalWKpEO"},{"type":"listItem","spread":true,"position":{"start":{"line":19,"column":1},"end":{"line":19,"column":1}},"children":[{"type":"text","value":"Computational resource considerations for 3D DC resistivity simulations.","position":{"start":{"line":19,"column":1},"end":{"line":19,"column":1}},"key":"oqrRX4H70T"}],"key":"BlBpnszMyw"}],"key":"mMFEbCgGOZ"}],"key":"PWc60q09xY"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Import Modules","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"WlGLH2jUtd"}],"identifier":"import-modules","label":"Import Modules","html_id":"import-modules","implicit":true,"key":"U6JD81mU5v"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Here, we import all of the functionality required to run the notebook for the tutorial exercise. All of the functionality specific to DC resistivity is imported from ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"xxoSUlyJqc"},{"type":"link","url":"https://docs.simpeg.xyz/latest/content/api/simpeg.electromagnetics.static.resistivity.html#module-simpeg.electromagnetics.static.resistivity","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"simpeg​.electromagnetics​.static​.resistivity","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"WfxdFiZiyj"}],"urlSource":"myst:simpeg#simpeg.electromagnetics.static.resistivity","internal":false,"protocol":"xref:sphinx","key":"IAjDaHkOYu"},{"type":"text","value":".\nWe also import some useful utility functions from ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"yvCzVbuYN5"},{"type":"link","url":"https://docs.simpeg.xyz/latest/content/api/simpeg.utils.html#module-simpeg.utils","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"simpeg.utils","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"hwxfGguz7q"}],"urlSource":"myst:simpeg#simpeg.utils","internal":false,"protocol":"xref:sphinx","key":"VOX8mxx5O7"},{"type":"text","value":". To simulate DC resistivity data, we need to define our problem geometry on a numerical grid (or mesh).\nTo generate the mesh, we use the ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"FLQRH6BdCu"},{"type":"link","url":"https://discretize.simpeg.xyz/en/main","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"discretize","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"V4RDDDY6eS"}],"urlSource":"https://discretize.simpeg.xyz/en/main","key":"UnDLKYMmUc"},{"type":"text","value":" package.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"HmfY3px5p4"}],"key":"cSzYOkERmm"}],"key":"NyqRqycJjB"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-07-17T17:49:44.588173Z","iopub.status.busy":"2024-07-17T17:49:44.587636Z","iopub.status.idle":"2024-07-17T17:49:48.067334Z","shell.execute_reply":"2024-07-17T17:49:48.065785Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"# SimPEG functionality\nfrom simpeg import maps, data\nfrom simpeg.utils import model_builder\nfrom simpeg.utils.io_utils.io_utils_electromagnetics import write_dcip_xyz\nfrom simpeg.electromagnetics.static import resistivity as dc\nfrom simpeg.electromagnetics.static.utils.static_utils import (\n    generate_dcip_sources_line,\n    pseudo_locations,\n    plot_pseudosection,\n    apparent_resistivity_from_voltage,\n    geometric_factor,\n    convert_survey_3d_to_2d_lines,\n)\n\ntry:\n    import plotly\n    from simpeg.electromagnetics.static.utils.static_utils import plot_3d_pseudosection\n    from IPython.core.display import display, HTML\n\n    has_plotly = True\nexcept ImportError:\n    has_plotly = False\n    pass\n\n# discretize functionality\nfrom discretize import TreeMesh\nfrom discretize.utils import mkvc, active_from_xyz\n\n# Common Python functionality\nimport os\nimport numpy as np\nimport matplotlib as mpl\nimport matplotlib.pyplot as plt\nfrom matplotlib.colors import LogNorm\n\nmpl.rcParams.update({\"font.size\": 14})\n\nwrite_output = False  # Optional","key":"h8PcrhbuKY"},{"type":"output","id":"7Mh1j2WCOqUHEmqxSnLt_","data":[],"key":"wfiupSOQpk"}],"key":"J3ESN9LYAb"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Define the Topography","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"ZD5qO3wF7W"}],"identifier":"define-the-topography","label":"Define the Topography","html_id":"define-the-topography","implicit":true,"key":"K3DkFjb4RW"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Surface topography is defined as an (N, 3) ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"zoZBcvuyaZ"},{"type":"link","url":"https://numpy.org/doc/stable/reference/generated/numpy.ndarray.html#numpy.ndarray","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"numpy.ndarray","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"HVypgKxNaJ"}],"urlSource":"myst:numpy#numpy.ndarray","internal":false,"protocol":"xref:sphinx","key":"WhcbRYMlo0"},{"type":"text","value":" for 3D simulations.\nHere, we create basic topography for the forward simulation.\nFor user-specific simulations, you may load topography from an XYZ file.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"lSQ3pbveDO"}],"key":"LrZxBwd6Sl"}],"key":"an7PDnDlXC"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-07-17T17:49:48.073573Z","iopub.status.busy":"2024-07-17T17:49:48.073061Z","iopub.status.idle":"2024-07-17T17:49:48.082444Z","shell.execute_reply":"2024-07-17T17:49:48.081451Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"# Generate some topography\nx_topo, y_topo = np.meshgrid(\n    np.linspace(-2100, 2100, 141), np.linspace(-2100, 2100, 141)\n)\nz_topo = 410.0 + 140.0 * (1 / np.pi) * (\n    np.arctan((x_topo - 500 * np.sin(np.pi * y_topo / 2800) - 400.0) / 200.0)\n    - np.arctan((x_topo - 500 * np.sin(np.pi * y_topo / 2800) + 400.0) / 200.0)\n)","key":"UkXHCOgN5E"},{"type":"output","id":"iX_W52omZ_rFckRHl8H7H","data":[],"key":"m2B3Htbane"}],"key":"u96wIcikvQ"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-07-17T17:49:48.087210Z","iopub.status.busy":"2024-07-17T17:49:48.086894Z","iopub.status.idle":"2024-07-17T17:49:48.093150Z","shell.execute_reply":"2024-07-17T17:49:48.091923Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"# Turn into a (N, 3) numpy.ndarray\nx_topo, y_topo, z_topo = mkvc(x_topo), mkvc(y_topo), mkvc(z_topo)\ntopo_xyz = np.c_[mkvc(x_topo), mkvc(y_topo), mkvc(z_topo)]","key":"geLzXA8Ndk"},{"type":"output","id":"I0VxPqEO5n5_54X_i8Yjr","data":[],"key":"dpM4HoWcdq"}],"key":"MhB2Sow1Ey"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-07-17T17:49:48.097787Z","iopub.status.busy":"2024-07-17T17:49:48.097426Z","iopub.status.idle":"2024-07-17T17:49:48.981316Z","shell.execute_reply":"2024-07-17T17:49:48.980667Z"},"scrolled":false},"children":[{"type":"code","lang":"python","executable":true,"value":"# Plot the topography\nfig = plt.figure(figsize=(6, 6))\nax = fig.add_axes([0.1, 0.1, 0.8, 0.8], projection=\"3d\")\nax.set_zlim([-400, 400])\nax.scatter3D(topo_xyz[:, 0], topo_xyz[:, 1], topo_xyz[:, 2], s=0.25, c=\"b\")\nax.set_box_aspect(aspect=None, zoom=0.85)\nax.set_xlabel(\"X (m)\", labelpad=10)\nax.set_ylabel(\"Y (m)\", labelpad=10)\nax.set_zlabel(\"Z (m)\", labelpad=10)\nax.set_title(\"Topography (Exaggerated z-axis)\", fontsize=16, pad=-20)\nax.view_init(elev=45.0, azim=-125)","key":"VxJdXNN80u"},{"type":"output","id":"SBjajQ17QHMO6rr2o4Uqt","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"a4588c6d6068d11b604923cb7620b5f7","path":"/user-tutorials/build/a4588c6d6068d11b604923cb7620b5f7.png"},"text/plain":{"content":"<Figure size 600x600 with 1 Axes>","content_type":"text/plain"}}}],"key":"MwFV92SCNH"}],"key":"mW2HSXhh8k"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Define the Survey","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"uG2fkcO3F3"}],"identifier":"define-the-survey","label":"Define the Survey","html_id":"define-the-survey","implicit":true,"key":"aSEWeqTRDP"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Descriptions of the elements required to construct DC resistivity surveys were covered in the ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"GqTbUgQjav"},{"type":"link","url":"/fwd-dcr-2d","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"2.5D Forward Simulation","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"qFTRmd98Ll"}],"urlSource":"fwd_dcr_2d.ipynb","dataUrl":"/fwd-dcr-2d.json","internal":true,"protocol":"file","key":"rFxhh9OIK7"},{"type":"text","value":" tutorial. The only difference is that for 3D surveys, XYZ locations are required for each electrode location. Once again, there are three approaches one might use to generate the a DC resistivity survey. The final approach will be used to simulate the data for this tutorial.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"yZyJfEXWeD"}],"key":"m3UCKi5V84"}],"key":"hoqeNhoPgs"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"strong","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Option A: Define each source and its associated receivers directly","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"cvEDtgtCPW"}],"key":"ewSvPAkkBH"}],"key":"A2YnWyGGbr"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"We used this approach in our ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"UCp0oeFjbP"},{"type":"link","url":"/fwd-dcr-2d","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"2.5D Forward Simulation","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"A0Rddwy5EC"}],"urlSource":"fwd_dcr_2d.ipynb","dataUrl":"/fwd-dcr-2d.json","internal":true,"protocol":"file","key":"Nxg0Z4I1EL"},{"type":"text","value":" tutorial. For a 3D simulation however, current electrode locations are defined as (3,) ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"bb21jHZxfm"},{"type":"link","url":"https://numpy.org/doc/stable/reference/generated/numpy.array.html#numpy.array","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"numpy.array","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"mBwn38mFUX"}],"urlSource":"myst:numpy#numpy.array","internal":false,"protocol":"xref:sphinx","key":"BfdeQH69Ph"},{"type":"text","value":" and the associated set of potential electrode locations are defined as (N, 3) ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"whVP2kSuYn"},{"type":"link","url":"https://numpy.org/doc/stable/reference/generated/numpy.ndarray.html#numpy.ndarray","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"numpy.ndarray","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"WkDP8mfuDI"}],"urlSource":"myst:numpy#numpy.ndarray","internal":false,"protocol":"xref:sphinx","key":"vLtMCIj2y2"},{"type":"text","value":". This approach is somewhat cumbersome for generating synthetic 3D examples, so we will use a survey generation utility instead (Option C).","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"U5KDOR0FTZ"}],"key":"IZs9tXpsI5"}],"key":"zd4RDsCe5B"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"strong","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Option B: Survey from ABMN electrode locations","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"ZS9plSta6u"}],"key":"Lg0mWLUH7n"}],"key":"jXkgTqjjbV"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"If we have (N, 3) ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"Zs8efr8zBc"},{"type":"link","url":"https://numpy.org/doc/stable/reference/generated/numpy.ndarray.html#numpy.ndarray","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"numpy.ndarray","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"uhf7BnG6p0"}],"urlSource":"myst:numpy#numpy.ndarray","internal":false,"protocol":"xref:sphinx","key":"kiI9nUsen1"},{"type":"text","value":" containing the A, B, M and N electrode locations for each datum (loaded or created), we can use the ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"ofbgIBXdtr"},{"type":"link","url":"https://docs.simpeg.xyz/latest/content/api/generated/simpeg.electromagnetics.static.utils.generate_survey_from_abmn_locations.html#simpeg.electromagnetics.static.utils.generate_survey_from_abmn_locations","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"generate​_survey​_from​_abmn​_locations","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"PavKzfLWQO"}],"urlSource":"myst:simpeg#simpeg.electromagnetics.static.utils.generate_survey_from_abmn_locations","internal":false,"protocol":"xref:sphinx","key":"YmMEHcilhn"},{"type":"text","value":" to generate the survey automatically.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"xik8nfW2j0"}],"key":"NEDzGy8xgH"}],"key":"AQoA8BARok"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"strong","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Option C: Survey from a set of survey lines","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"nXWABEr5xA"}],"key":"DC1FX2PMFM"}],"key":"ILRMFM1xa3"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"If the survey is comprised of a set of DC resistivity lines, we can use the ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"gNc7QwQrn6"},{"type":"link","url":"https://docs.simpeg.xyz/latest/content/api/generated/simpeg.electromagnetics.static.utils.generate_dcip_sources_line.html#simpeg.electromagnetics.static.utils.generate_dcip_sources_line","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"generate​_dcip​_sources​_line","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"BqfCdOL7NX"}],"urlSource":"myst:simpeg#simpeg.electromagnetics.static.utils.generate_dcip_sources_line","internal":false,"protocol":"xref:sphinx","key":"juS15omXfu"},{"type":"text","value":" utility function to define the survey. Here we define the DC resistivity survey that is used simulate the tutorial data. The survey consists of 3 DC resistivity lines that use a dipole-dipole electrode configuration; 1 line along the East-West direction and 2 lines along the North-South direction. Each line is 2000 m in length and has an electrode spacing of 100 m.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"ZcQICiXrXW"}],"key":"siqlrnBHOH"}],"key":"Rq3E0Cms5N"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-07-17T17:49:48.988620Z","iopub.status.busy":"2024-07-17T17:49:48.988316Z","iopub.status.idle":"2024-07-17T17:49:51.310727Z","shell.execute_reply":"2024-07-17T17:49:51.309919Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"# Define the parameters for each survey line\nsurvey_type = \"dipole-dipole\"\ndata_type = \"volt\"\ndimension_type = \"3D\"\nend_locations_list = [\n    np.r_[-1000.0, 1000.0, 0.0, 0.0],\n    np.r_[-600.0, -600.0, -1000.0, 1000.0],\n    np.r_[-300.0, -300.0, -1000.0, 1000.0],\n    np.r_[0.0, 0.0, -1000.0, 1000.0],\n    np.r_[300.0, 300.0, -1000.0, 1000.0],\n    np.r_[600.0, 600.0, -1000.0, 1000.0],\n]  # [x0, x1, y0, y1]\nstation_separation = 100.0\nnum_rx_per_src = 8\n\n# The source lists for each line can be appended to create the source\n# list for the whole survey.\nsource_list = []\nfor ii in range(0, len(end_locations_list)):\n    source_list += generate_dcip_sources_line(\n        survey_type,\n        data_type,\n        dimension_type,\n        end_locations_list[ii],\n        topo_xyz,\n        num_rx_per_src,\n        station_separation,\n    )\n\n# Define the survey\nsurvey = dc.survey.Survey(source_list)","key":"Bbhc8BICXf"},{"type":"output","id":"RHHBMloZ33Fwj20U5eg73","data":[],"key":"WvCMEmZyeA"}],"key":"cHC5eXG8dr"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Here we plot the electrode locations. We use the ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"qrO4CZ6SGG"},{"type":"link","url":"https://docs.simpeg.xyz/latest/content/api/generated/simpeg.electromagnetics.static.resistivity.Survey.unique_electrode_locations.html#simpeg.electromagnetics.static.resistivity.survey.unique_electrode_locations","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"unique​_electrode​_locations","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"gHRRj9r5Zx"}],"urlSource":"myst:simpeg#simpeg.electromagnetics.static.resistivity.Survey.unique_electrode_locations","internal":false,"protocol":"xref:sphinx","key":"Sx0WTvnjAr"},{"type":"text","value":" method to extract the unique electrode locations from the survey and the ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"OWH6C6Axll"},{"type":"link","url":"https://docs.simpeg.xyz/latest/content/api/generated/simpeg.electromagnetics.static.utils.pseudo_locations.html#simpeg.electromagnetics.static.utils.pseudo_locations","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"pseudo_locations","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"RONzmvbJgg"}],"urlSource":"myst:simpeg#simpeg.electromagnetics.static.utils.pseudo_locations","internal":false,"protocol":"xref:sphinx","key":"RYuqFa9dcW"},{"type":"text","value":" utility to extract the pseudo-location.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"bHmhcycMn3"}],"key":"ScWWyOzZfh"}],"key":"M74igZsSyx"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-07-17T17:49:51.315629Z","iopub.status.busy":"2024-07-17T17:49:51.315393Z","iopub.status.idle":"2024-07-17T17:49:51.561462Z","shell.execute_reply":"2024-07-17T17:49:51.560703Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"unique_locations = survey.unique_electrode_locations\nfig = plt.figure(figsize=(12, 2.75))\nax1 = fig.add_axes([0.1, 0.1, 0.2, 0.8])\nax1.scatter(unique_locations[:, 0], unique_locations[:, 1], 8, \"r\")\nax1.set_xlabel(\"x (m)\")\nax1.set_ylabel(\"y (m)\")\nax1.set_title(\"Horizontal locations\")\n\npseudo_locations_xyz = pseudo_locations(survey)\ninds = pseudo_locations_xyz[:, 1] == 0.0\nax2 = fig.add_axes([0.4, 0.1, 0.55, 0.8])\nax2.scatter(pseudo_locations_xyz[inds, 0], pseudo_locations_xyz[inds, -1], 8, \"r\")\nax2.set_xlabel(\"x (m)\")\nax2.set_ylabel(\"z (m)\")\nax2.set_title(\"Pseudo-locations (EW line)\")\nplt.show()","key":"h5T10bABo4"},{"type":"output","id":"YuLfaTadZkbYRVHQWjNqT","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"8203984dc341fcca80c29164ccbbb665","path":"/user-tutorials/build/8203984dc341fcca80c29164ccbbb665.png"},"text/plain":{"content":"<Figure size 1200x275 with 2 Axes>","content_type":"text/plain"}}}],"key":"R6N96jxa0U"}],"key":"uULdrLkV6C"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Design a (Tree) Mesh","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"nT26fVhvDh"}],"identifier":"design-a-tree-mesh","label":"Design a (Tree) Mesh","html_id":"design-a-tree-mesh","implicit":true,"key":"tSn4waGqPw"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"strong","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Standard approach for DC/IP:","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"sLAroOco8T"}],"key":"lprbbVgk6f"},{"type":"text","value":" The standard approach presented in the ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"Ir70c67bwE"},{"type":"link","url":"/fwd-dcr-2d","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"2.5D Forward Simulation","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"Yd4MZlRvfi"}],"urlSource":"fwd_dcr_2d.ipynb","dataUrl":"/fwd-dcr-2d.json","internal":true,"protocol":"file","key":"idawDejJMK"},{"type":"text","value":" tutorial also applies to forward simulations in 3D. And the same methods are used to refine the tree mesh around electrodes, topography, etc... For 3D simulations however, we may need to consider limitations in computational resources which are not encountered in 2.5D simulations. Because 3D simulations require discretization along a third direction, the number of cells in the mesh is proportional ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"zfX0SS2lmA"},{"type":"inlineMath","value":"h^{-3}","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>h</mi><mrow><mo>−</mo><mn>3</mn></mrow></msup></mrow><annotation encoding=\"application/x-tex\">h^{-3}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8141em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">h</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">−</span><span class=\"mord mtight\">3</span></span></span></span></span></span></span></span></span></span></span></span>","key":"y6Y8LAqvrP"},{"type":"text","value":"; where ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"oVVOhcbTXy"},{"type":"inlineMath","value":"h","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>h</mi></mrow><annotation encoding=\"application/x-tex\">h</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">h</span></span></span></span>","key":"zZNNsxU4Vx"},{"type":"text","value":" is the minimum cell edge length. Therefore the minimum cell size used for 3D simulations is generally coarser than the minimum cell size used for 2.5D simulations.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"aEwN5a2wUy"}],"key":"sjWUP44miX"},{"type":"paragraph","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"strong","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Tutorial mesh:","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"JpMZy03o5L"}],"key":"YofpdVPevi"},{"type":"text","value":" Here, a minimum cell width of 25 m (or 1/4 the minimum electrode spacing) is used within our survey region. The largest electrode spacing was 1000 m, so a the padding was extended at least 3000 m from the survey region. Using the ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"sv4w4ABx9c"},{"type":"link","url":"https://discretize.simpeg.xyz/en/main/api/generated/discretize.TreeMesh.refine_surface.html#discretize.treemesh.refine_surface","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"refine_surface","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"GJwVtDF9iS"}],"urlSource":"myst:discretize#discretize.TreeMesh.refine_surface","internal":false,"protocol":"xref:sphinx","key":"pNGHcfoK4n"},{"type":"text","value":" method, we refine the tree mesh where there is significant topography. And using the ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"DmE1MzRxsR"},{"type":"link","url":"https://discretize.simpeg.xyz/en/main/api/generated/discretize.TreeMesh.refine_points.html#discretize.treemesh.refine_points","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"refine_points","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"s9aiZNHIy4"}],"urlSource":"myst:discretize#discretize.TreeMesh.refine_points","internal":false,"protocol":"xref:sphinx","key":"g3LUveMubH"},{"type":"text","value":" methods, we refine based on electrodes locations. Visit the ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"XemnrK9LUb"},{"type":"link","url":"https://discretize.simpeg.xyz/en/main/api/generated/discretize.TreeMesh.html#discretize.treemesh","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"tree mesh","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"gqDmSjWF8R"}],"urlSource":"myst:discretize#discretize.TreeMesh","internal":false,"protocol":"xref:sphinx","key":"r9RXcdfvXa"},{"type":"text","value":" API to see additional refinement methods.","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"UHN5tHYrVo"}],"key":"fdNn45gPto"}],"key":"CDhVybRAjk"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-07-17T17:49:51.566870Z","iopub.status.busy":"2024-07-17T17:49:51.566638Z","iopub.status.idle":"2024-07-17T17:49:52.280949Z","shell.execute_reply":"2024-07-17T17:49:52.279967Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"# Defining domain size and minimum cell size\ndh = 25.0  # base cell width\ndom_width_x = 8000.0  # domain width x\ndom_width_y = 8000.0  # domain width y\ndom_width_z = 4000.0  # domain width z\n\n# Number of base mesh cells in each direction. Must be a power of 2\nnbcx = 2 ** int(np.round(np.log(dom_width_x / dh) / np.log(2.0)))  # num. base cells x\nnbcy = 2 ** int(np.round(np.log(dom_width_y / dh) / np.log(2.0)))  # num. base cells y\nnbcz = 2 ** int(np.round(np.log(dom_width_z / dh) / np.log(2.0)))  # num. base cells z\n\n# Define the base mesh\nhx = [(dh, nbcx)]\nhy = [(dh, nbcy)]\nhz = [(dh, nbcz)]\nmesh = TreeMesh([hx, hy, hz], x0=\"CCN\")\n\n# Shift top to maximum topography\nmesh.origin = mesh.origin + np.r_[0.0, 0.0, z_topo.max()]\n\n# Mesh refinement based on surface topography\nk = np.sqrt(np.sum(topo_xyz[:, 0:2] ** 2, axis=1)) < 1200\nmesh.refine_surface(topo_xyz[k, :], padding_cells_by_level=[0, 4, 4], finalize=False)\n\n# Mesh refinement near electrodes.\nmesh.refine_points(unique_locations, padding_cells_by_level=[6, 6, 4], finalize=False)\n\n# Finalize the mesh\nmesh.finalize()","key":"vR6IezENaL"},{"type":"output","id":"3ZFvzTzEpJ4KDyLRCN1fk","data":[],"key":"LwpllFdp7j"}],"key":"qWZCaD2uPe"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Define the Active Cells","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"MFWqpx5Oio"}],"identifier":"define-the-active-cells","label":"Define the Active Cells","html_id":"define-the-active-cells","implicit":true,"key":"w84ZelCpDD"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Simulated geophysical data are dependent on the subsurface distribution of physical property values. As a result, the cells lying below the surface topography are commonly referred to as ‘active cells’. And air cells, whose physical property values are fixed, are commonly referred to as ‘inactive cells’. Here, the discretize ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"B5p9O16iKg"},{"type":"link","url":"https://discretize.simpeg.xyz/en/main/api/generated/discretize.utils.active_from_xyz.html#discretize.utils.active_from_xyz","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"active_from_xyz","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"qn3D1jsmxR"}],"urlSource":"myst:discretize#discretize.utils.active_from_xyz","internal":false,"protocol":"xref:sphinx","key":"kdThFnL45t"},{"type":"text","value":" utility function is used to find the indices of the active cells using the mesh and surface topography. The output quantity is a ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"SFR56z8qTG"},{"type":"inlineCode","value":"bool","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"yo9xW8PA5t"},{"type":"text","value":" array.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"JLBXgxpUcA"}],"key":"aTRep1EFc6"}],"key":"EDCTiDUzYX"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-07-17T17:49:52.286507Z","iopub.status.busy":"2024-07-17T17:49:52.286135Z","iopub.status.idle":"2024-07-17T17:49:52.841983Z","shell.execute_reply":"2024-07-17T17:49:52.841042Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"# Indices of the active mesh cells from topography (e.g. cells below surface)\nactive_cells = active_from_xyz(mesh, topo_xyz)\n\n# number of active cells\nn_active = np.sum(active_cells)","key":"dvxelcA8bZ"},{"type":"output","id":"v9El1flf2oq4fZfYvUSZQ","data":[],"key":"IqVJggdc5V"}],"key":"AXGG1lxgmv"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Models and Mappings","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"ZoknnOjgql"}],"identifier":"models-and-mappings","label":"Models and Mappings","html_id":"models-and-mappings","implicit":true,"key":"ghrN9kKdB3"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"In SimPEG, the term ‘model’ is not necessarily synonymous with the set of physical property values defined on the mesh. For example, the model may be defined as the logarithms of the physical property values, or be the parameters defining a layered Earth geometry. Models in SimPEG are 1D ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"BrzahFLCgY"},{"type":"link","url":"https://numpy.org/doc/stable/reference/generated/numpy.ndarray.html#numpy.ndarray","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"numpy.ndarray","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"g4WnZnutf9"}],"urlSource":"myst:numpy#numpy.ndarray","internal":false,"protocol":"xref:sphinx","key":"LVR4qYKeDY"},{"type":"text","value":" whose lengths are\nequal to the number of model parameters.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"a7vVNZb7uL"}],"key":"GWhyrUDhiD"},{"type":"paragraph","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"Classes within the ","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"PDMgJsraz4"},{"type":"link","url":"https://docs.simpeg.xyz/latest/content/api/generated/simpeg.maps.IdentityMap.html#simpeg.maps.identitymap","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"simpeg.maps","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"BroLXi55Pv"}],"urlSource":"myst:simpeg#simpeg.maps.IdentityMap","internal":false,"protocol":"xref:sphinx","key":"po3aFx91Zp"},{"type":"text","value":" module are used to define the mapping that connects the model to the physical property values used in the DC resistivity simulation. Sophisticated mappings can be defined by combining multiple mapping objects. But in the simplest case, the mapping is an identity map and the model consists of the conductivity/resistivity values for all mesh cells (including air).","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"wvG13XDWj3"}],"key":"JNunVXMI4e"},{"type":"paragraph","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"When simulating DC resistivity data, we have the choice of using resistivity or conductivity to define the Earth’s electrical properties. Here, we define the model and its associate mapping for two cases:","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"lSCI6rl51r"}],"key":"goxxwn7QPI"},{"type":"list","ordered":true,"start":1,"spread":false,"position":{"start":{"line":9,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"The model consists of the conductivity values for all active cells","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"QRRxPWuwUq"}],"key":"xWRZYbaCjb"},{"type":"listItem","spread":true,"position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"text","value":"The model consists of the log-resistivity values for all active cells","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"OvneYfp3lX"}],"key":"I9lrAq9EsU"}],"key":"R5Sv9oYnR9"}],"key":"mBH2QhFetC"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Define the Model","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"pgtstyRief"}],"identifier":"define-the-model","label":"Define the Model","html_id":"define-the-model","implicit":true,"key":"vKxF7QE2RB"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"The units for resistivity are ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"yulKmmJf8g"},{"type":"inlineMath","value":"\\Omega m","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">Ω</mi><mi>m</mi></mrow><annotation encoding=\"application/x-tex\">\\Omega m</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord\">Ω</span><span class=\"mord mathnormal\">m</span></span></span></span>","key":"CFqVw33spt"},{"type":"text","value":" and the units for conductivity are ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"gEvYBKDppc"},{"type":"inlineMath","value":"S/m","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>S</mi><mi mathvariant=\"normal\">/</mi><mi>m</mi></mrow><annotation encoding=\"application/x-tex\">S/m</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"mord\">/</span><span class=\"mord mathnormal\">m</span></span></span></span>","key":"HXoMxziGjW"},{"type":"text","value":".","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"PFTbfU79tt"}],"key":"sp111AmFaW"}],"key":"rOPqaMNBVN"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-07-17T17:49:52.847441Z","iopub.status.busy":"2024-07-17T17:49:52.847188Z","iopub.status.idle":"2024-07-17T17:49:52.851129Z","shell.execute_reply":"2024-07-17T17:49:52.850468Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"# Define conductivity values in S/m (take reciprocal for resistivities in Ohm m)\nair_conductivity = 1e-8\nbackground_conductivity = 1e-2\nconductor_conductivity = 1e-1\nresistor_conductivity = 1e-3","key":"sbT5ZOMg2p"},{"type":"output","id":"drfMoKy1LiB_-zFu4Unsw","data":[],"key":"LS0N5zZRD3"}],"key":"JT4Zotn47h"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-07-17T17:49:52.855996Z","iopub.status.busy":"2024-07-17T17:49:52.855592Z","iopub.status.idle":"2024-07-17T17:49:52.874608Z","shell.execute_reply":"2024-07-17T17:49:52.873079Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"# Define conductivity model\nconductivity_model = background_conductivity * np.ones(n_active)\n\nind_conductor = model_builder.get_indices_sphere(\n    np.r_[-300.0, 0.0, 100.0], 165.0, mesh.cell_centers[active_cells, :]\n)\nconductivity_model[ind_conductor] = conductor_conductivity\n\nind_resistor = model_builder.get_indices_sphere(\n    np.r_[300.0, 0.0, 100.0], 165.0, mesh.cell_centers[active_cells, :]\n)\nconductivity_model[ind_resistor] = resistor_conductivity\n\n# Define log-resistivity model\nlog_resistivity_model = np.log(1 / conductivity_model)","key":"QUhzI0mYQR"},{"type":"output","id":"QAAdcUXddD6EqPEfGgGw7","data":[],"key":"Hmm4P8tr1f"}],"key":"PTGEHqVyc8"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Mapping from the Model to the Mesh","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"QO01n4ezep"}],"identifier":"mapping-from-the-model-to-the-mesh","label":"Mapping from the Model to the Mesh","html_id":"mapping-from-the-model-to-the-mesh","implicit":true,"key":"RPoTNMCiZ2"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"For our first case, we use the ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"yoBLE8EH0H"},{"type":"link","url":"https://docs.simpeg.xyz/latest/content/api/generated/simpeg.maps.InjectActiveCells.html#simpeg.maps.injectactivecells","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"simpeg​.maps​.InjectActiveCells","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"zvSyTpOnM4"}],"urlSource":"myst:simpeg#simpeg.maps.InjectActiveCells","internal":false,"protocol":"xref:sphinx","key":"pYhCu7ZnLh"},{"type":"text","value":" mapping. This mapping projects quantities defined on the active cells to the entire mesh, and sets a constant value for all inactive cells. ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"I0wnK8Ggt4"},{"type":"strong","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Important:","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"td1zAjBnPB"}],"key":"WNY18RdVv4"},{"type":"text","value":" we set all inactive (air) cells to 1e-8 S/m instead of 0. This is done to ensure that the linear system constructed to solve the PDE for the DC resistivity problem is well-conditioned.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"OM6QaiRviI"}],"key":"ZDGD42DD9p"},{"type":"paragraph","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"For the second case, we use both the ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"xHkoUZShsE"},{"type":"link","url":"https://docs.simpeg.xyz/latest/content/api/generated/simpeg.maps.InjectActiveCells.html#simpeg.maps.injectactivecells","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"simpeg​.maps​.InjectActiveCells","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"AbbPj5GrTz"}],"urlSource":"myst:simpeg#simpeg.maps.InjectActiveCells","internal":false,"protocol":"xref:sphinx","key":"mVDLX2Umbl"},{"type":"text","value":" and ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"BRy62RTf6Y"},{"type":"link","url":"https://docs.simpeg.xyz/latest/content/api/generated/simpeg.maps.ExpMap.html#simpeg.maps.expmap","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"simpeg.maps.ExpMap","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"Gsx72QPZZR"}],"urlSource":"myst:simpeg#simpeg.maps.ExpMap","internal":false,"protocol":"xref:sphinx","key":"u5w8cgklck"},{"type":"text","value":" mappings; the latter of which takes the natural exponential. ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"ekEutmtSKm"},{"type":"strong","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Important:","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"vh0I2sJXz3"}],"key":"pOmijCrBTe"},{"type":"text","value":" we set all inactive (air) cells to 1e8 ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"rTKOBHGioT"},{"type":"inlineMath","value":"\\Omega m","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">Ω</mi><mi>m</mi></mrow><annotation encoding=\"application/x-tex\">\\Omega m</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord\">Ω</span><span class=\"mord mathnormal\">m</span></span></span></span>","key":"wKHPUuVYTs"},{"type":"text","value":" instead of ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"u6CsrzRM1T"},{"type":"text","value":"∞","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"JkdSt5bgUu"},{"type":"text","value":". Once again, this is done to ensure that the linear system constructed to solve the PDE for the DC resistivity problem is well-conditioned.","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"NiXpTQHdHS"}],"key":"IAhOgbpLrl"}],"key":"diFjAkl76Y"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-07-17T17:49:52.878640Z","iopub.status.busy":"2024-07-17T17:49:52.878348Z","iopub.status.idle":"2024-07-17T17:49:52.892843Z","shell.execute_reply":"2024-07-17T17:49:52.891624Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"# Conductivity map. Model parameters are conductivities for all active cells.\nconductivity_map = maps.InjectActiveCells(mesh, active_cells, air_conductivity)\n\n# Resistivity map. Model parameters are log-resistivities for all active cells.\nlog_resistivity_map = maps.InjectActiveCells(\n    mesh, active_cells, 1 / air_conductivity\n) * maps.ExpMap(nP=n_active)","key":"tDAKo0Ytaj"},{"type":"output","id":"T2pSDLEF8hbaWD8eRP5Gd","data":[],"key":"itw89oFpHu"}],"key":"ZAyR53RQA4"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Plot the Model","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"wYzlEZAR4o"}],"identifier":"plot-the-model","label":"Plot the Model","html_id":"plot-the-model","implicit":true,"key":"OgF5qs8oID"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"To show the geometry of the problem, we plot the conductivity model using the ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"DAVyT3c8GZ"},{"type":"link","url":"https://discretize.simpeg.xyz/en/main/api/generated/discretize.TreeMesh.plot_slice.html#discretize.treemesh.plot_slice","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"plot_slice","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"ToG6BVtnY1"}],"urlSource":"myst:discretize#discretize.TreeMesh.plot_slice","internal":false,"protocol":"xref:sphinx","key":"IMnwnNnwMP"},{"type":"text","value":" method.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"ckQzCMoj9j"}],"key":"dZOcGeTI8B"}],"key":"eZXlXuYMV4"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-07-17T17:49:52.896734Z","iopub.status.busy":"2024-07-17T17:49:52.896466Z","iopub.status.idle":"2024-07-17T17:49:52.903142Z","shell.execute_reply":"2024-07-17T17:49:52.902405Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"# Generate a mapping to ignore inactice cells in plot\nplotting_map = maps.InjectActiveCells(mesh, active_cells, np.nan)","key":"KrvosuzERb"},{"type":"output","id":"6eGajpDyEYfq2UfHByc6c","data":[],"key":"gdbyKHUFiH"}],"key":"iKmqbzieLp"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-07-17T17:49:52.907257Z","iopub.status.busy":"2024-07-17T17:49:52.907021Z","iopub.status.idle":"2024-07-17T17:49:53.520800Z","shell.execute_reply":"2024-07-17T17:49:53.519848Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"fig = plt.figure(figsize=(10, 4.5))\n\nnorm = LogNorm(vmin=1e-3, vmax=1e-1)\n\nax1 = fig.add_axes([0.15, 0.15, 0.68, 0.75])\nmesh.plot_slice(\n    plotting_map * conductivity_model,\n    ax=ax1,\n    normal=\"Y\",\n    ind=int(len(mesh.h[1]) / 2),\n    grid=True,\n    pcolor_opts={\"cmap\": mpl.cm.RdYlBu_r, \"norm\": norm},\n)\nax1.set_title(\"Conductivity Model\")\nax1.set_xlabel(\"x (m)\")\nax1.set_ylabel(\"z (m)\")\nax1.set_xlim([-1500, 1500])\nax1.set_ylim([z_topo.max() - 1500, z_topo.max()])\n\nax2 = fig.add_axes([0.84, 0.15, 0.03, 0.75])\ncbar = mpl.colorbar.ColorbarBase(\n    ax2, cmap=mpl.cm.RdYlBu_r, norm=norm, orientation=\"vertical\"\n)\ncbar.set_label(\"$\\sigma$ [S/m]\", rotation=270, labelpad=15, size=16)","key":"AH9gyWshkS"},{"type":"output","id":"D2OF_m3oXsnjJRD-rrcTe","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"e1923492c7c288b99af1f02ae3b3d4ac","path":"/user-tutorials/build/e1923492c7c288b99af1f02ae3b3d4ac.png"},"text/plain":{"content":"<Figure size 1000x450 with 2 Axes>","content_type":"text/plain"}}}],"key":"Rw6ycZrqji"}],"key":"PyUsoPykVU"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Project Electrodes to Discretized Topography","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"qsgV8QjkMZ"}],"identifier":"project-electrodes-to-discretized-topography","label":"Project Electrodes to Discretized Topography","html_id":"project-electrodes-to-discretized-topography","implicit":true,"key":"pBAF3OiX4W"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Surface DC resistivity data will not be modeled accurately if the electrodes are modeled as living above or below the surface. It is especially problematic when electrodes are modeled as living in the air. Prior to simulating surface DC resistivity data, we must project the electrodes from their true elevation to the surface of the ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"j85EqlAlzK"},{"type":"emphasis","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"discretized","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"YSHxKu8kAT"}],"key":"TRchZ75jpF"},{"type":"text","value":" topography. This is done using the ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"ti194gmxkR"},{"type":"link","url":"https://docs.simpeg.xyz/latest/content/api/generated/simpeg.electromagnetics.static.resistivity.Survey.drape_electrodes_on_topography.html#simpeg.electromagnetics.static.resistivity.survey.drape_electrodes_on_topography","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"drape​_electrodes​_on​_topography","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"ogckWapKke"}],"urlSource":"myst:simpeg#simpeg.electromagnetics.static.resistivity.Survey.drape_electrodes_on_topography","internal":false,"protocol":"xref:sphinx","key":"bzZPlwK2Ck"},{"type":"text","value":" method.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"neNK9BhkHH"}],"key":"ZUaLJZyjP0"}],"key":"K5rLXv9YRT"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-07-17T17:49:53.526280Z","iopub.status.busy":"2024-07-17T17:49:53.526017Z","iopub.status.idle":"2024-07-17T17:49:53.562325Z","shell.execute_reply":"2024-07-17T17:49:53.561484Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"survey.drape_electrodes_on_topography(mesh, active_cells, option=\"top\")","key":"qKovnwLlbI"},{"type":"output","id":"KUkkd6wWUzO5mEcfWq0Hn","data":[],"key":"kz9N8RTWNI"}],"key":"cgL3nIVV2M"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Define the Forward Simulation","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"bjuQdJGbTv"}],"identifier":"define-the-forward-simulation","label":"Define the Forward Simulation","html_id":"define-the-forward-simulation","implicit":true,"key":"mpLDPs9Cn1"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"In SimPEG, the physics of the forward simulation is defined by creating an instance of an appropriate simulation class. There are two simulation classes which may be used to simulate 3D DC resistivity data:","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"OahTgvJtH0"}],"key":"tc8SVo2v1c"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":5,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"link","url":"https://docs.simpeg.xyz/latest/content/api/generated/simpeg.electromagnetics.static.resistivity.Simulation3DNodal.html#simpeg.electromagnetics.static.resistivity.simulation3dnodal","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Simulation3DNodel","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"RuWYapI5qg"}],"urlSource":"myst:simpeg#simpeg.electromagnetics.static.resistivity.Simulation3DNodal","internal":false,"protocol":"xref:sphinx","key":"xHSu6Ahc07"},{"type":"text","value":", which defines the discrete electric potentials on mesh nodes.","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"hb5ly0S7Mo"}],"key":"JF8ySwCsDT"},{"type":"listItem","spread":true,"position":{"start":{"line":6,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"link","url":"https://docs.simpeg.xyz/latest/content/api/generated/simpeg.electromagnetics.static.resistivity.Simulation3DCellCentered.html#simpeg.electromagnetics.static.resistivity.simulation3dcellcentered","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"Simulation3DCellCentered","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"NnDLpVG5pE"}],"urlSource":"myst:simpeg#simpeg.electromagnetics.static.resistivity.Simulation3DCellCentered","internal":false,"protocol":"xref:sphinx","key":"wZVBD32Coo"},{"type":"text","value":", which defines the discrete electric potentials at cell centers.","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"zrZy2yhZhq"}],"key":"etgUZZn9cT"}],"key":"PQ2sNQMHk0"},{"type":"paragraph","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"For surface DC resistivity data, the nodal formulation is more well-suited and will be used here. The cell-centered formulation works well for simulating borehole DC resistivity data. Here, we define two simulation objects, one where the model defines the subsurface conductivities, and one where the model defines subsurface log-resistivities. When our model is used to define subsurface electric conductivity, the mapping is set using the ","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"HdwwDohnad"},{"type":"inlineCode","value":"sigmaMap","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"g1RFibtVSd"},{"type":"text","value":" keyword argument. However when our model is used to define subsurface electric resistivity, the mapping must be set using the ","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"AJ6AK31khg"},{"type":"inlineCode","value":"rhoMap","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"BbCGJLsiNK"},{"type":"text","value":" keyword argument","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"GvrDgH003V"}],"key":"LCg1TPVfJC"}],"key":"gmSbUMsSrj"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-07-17T17:49:53.566606Z","iopub.status.busy":"2024-07-17T17:49:53.566365Z","iopub.status.idle":"2024-07-17T17:49:54.088788Z","shell.execute_reply":"2024-07-17T17:49:54.087951Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"# DC simulation for a conductivity model\nsimulation_con = dc.simulation.Simulation3DNodal(\n    mesh, survey=survey, sigmaMap=conductivity_map\n)\n\n# DC simulation for a log-resistivity model\nsimulation_res = dc.simulation.Simulation3DNodal(\n    mesh, survey=survey, rhoMap=log_resistivity_map\n)","key":"DuekiZOVv1"},{"type":"output","id":"AT27Y_LzP_8G8Zj_AAIzo","data":[],"key":"YBBylgMiNb"}],"key":"v67iGR1bnW"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Predict DC Resistivity Data","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"qK9hLZFCxR"}],"identifier":"predict-dc-resistivity-data","label":"Predict DC Resistivity Data","html_id":"predict-dc-resistivity-data","implicit":true,"key":"x50gZMAezJ"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Once any simulation within SimPEG has been properly constructed, simulated data for a given model vector can be computed using the ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"BiboMkZ53M"},{"type":"link","url":"https://docs.simpeg.xyz/latest/content/api/generated/simpeg.simulation.BaseSimulation.dpred.html#simpeg.simulation.basesimulation.dpred","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"dpred","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"nQrSNU7BFs"}],"urlSource":"myst:simpeg#simpeg.simulation.BaseSimulation.dpred","internal":false,"protocol":"xref:sphinx","key":"Fmw2uREUvm"},{"type":"text","value":" method. Note that despite the difference in how we defined the models representing the Earth’s electrical properties, the data predicted by both simulations is equivalent.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"pm0oqg7UnU"}],"key":"sAPVMKvzAh"}],"key":"af2tnMozaa"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-07-17T17:49:54.094073Z","iopub.status.busy":"2024-07-17T17:49:54.093823Z","iopub.status.idle":"2024-07-17T17:50:09.012403Z","shell.execute_reply":"2024-07-17T17:50:09.011081Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"dpred_con = simulation_con.dpred(conductivity_model)","key":"T3GWVZtsWa"},{"type":"output","id":"bogjZQO5BearP4KDKQfaN","data":[],"key":"tH12x4Uvuz"}],"key":"xuYMFaiJFM"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-07-17T17:50:09.016577Z","iopub.status.busy":"2024-07-17T17:50:09.016291Z","iopub.status.idle":"2024-07-17T17:50:25.349574Z","shell.execute_reply":"2024-07-17T17:50:25.348418Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"dpred_res = simulation_res.dpred(log_resistivity_model)","key":"G0KZC05GU0"},{"type":"output","id":"3yfhIlhAHNZKkav8amUmN","data":[],"key":"dtkQ82b4G8"}],"key":"LfJrGMmtXR"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-07-17T17:50:25.354454Z","iopub.status.busy":"2024-07-17T17:50:25.354173Z","iopub.status.idle":"2024-07-17T17:50:25.359788Z","shell.execute_reply":"2024-07-17T17:50:25.359137Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"print(\"MAX ABSOLUTE ERROR = {}\".format(np.max(np.abs(dpred_con - dpred_res))))","key":"iNEuc6Gljj"},{"type":"output","id":"DXXaMSNQmuB6Iu21B9LAi","data":[{"name":"stdout","output_type":"stream","text":"MAX ABSOLUTE ERROR = 4.440892098500626e-16\n"}],"key":"wQiZMl4XwR"}],"key":"gTKQfaXxbn"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Convert Normalized Voltages to Apparent Conductivities","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Mnm58xvOtk"}],"identifier":"convert-normalized-voltages-to-apparent-conductivities","label":"Convert Normalized Voltages to Apparent Conductivities","html_id":"convert-normalized-voltages-to-apparent-conductivities","implicit":true,"key":"JDBtfCESWb"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"In this tutorial, the receivers were defined to simulation normalized voltage data. Here, we use the ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"Sp32dfXb26"},{"type":"link","url":"simpeg#simpeg.electromagnetics.static.utils.apparent_resistivity_from_voltage","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"apparent​_resistivity​_from​_voltage","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"trgxZxvNd2"}],"urlSource":"simpeg#simpeg.electromagnetics.static.utils.apparent_resistivity_from_voltage","key":"FZKLb2khCm"},{"type":"text","value":" utility function to convert the data to apparent resistivities, then take the reciprocal to obtain apparent conductivities.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"dd9jLr2wVU"}],"key":"Q14wH2ajwU"}],"key":"qEBDHMASue"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-07-17T17:50:25.364754Z","iopub.status.busy":"2024-07-17T17:50:25.364469Z","iopub.status.idle":"2024-07-17T17:50:25.376261Z","shell.execute_reply":"2024-07-17T17:50:25.375632Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"apparent_conductivity = apparent_resistivity_from_voltage(survey, dpred_con) ** -1","key":"kk3Qu9fvr1"},{"type":"output","id":"yWGV1yNRpEoFAVpUtzlVj","data":[],"key":"UiOUavOPDs"}],"key":"RcgcKI7std"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Plot Data in Pseudosection","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Z0mi1tHvlD"}],"identifier":"plot-data-in-pseudosection","label":"Plot Data in Pseudosection","html_id":"plot-data-in-pseudosection","implicit":true,"key":"hHwkt58jGN"}],"key":"fk87ftEpyz"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Plot 3D Pseudosection","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"jGOqMM8Xsw"}],"identifier":"plot-3d-pseudosection","label":"Plot 3D Pseudosection","html_id":"plot-3d-pseudosection","implicit":true,"key":"m1Gs6XaoQJ"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"For general 3D survey configurations, we can use the ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"m3isoiwI1L"},{"type":"link","url":"simpeg#simpeg.electromagnetics.static.utils.plot_3d_pseudosection","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"plot​_3d​_pseudosection","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"bEmx5ss5ib"}],"urlSource":"simpeg#simpeg.electromagnetics.static.utils.plot_3d_pseudosection","key":"vC3VaVyBhu"},{"type":"text","value":" utility function to plot 3D pseudosection data. For large datasets or for surveys with unconventional electrode geometry, interpretation can be challenging if we plot every datum. Here, we plot 3 out of the 6 survey lines to better image anomalous structures. To plot ALL of the data, simply remove the keyword argument ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"KA6BM5edPo"},{"type":"emphasis","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"plane_points","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"meP3SGNeOs"}],"key":"fAeMz3wxQd"},{"type":"text","value":" when calling ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"SnSoCifapa"},{"type":"emphasis","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"plot_3d_pseudosection","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"o42XxNtVWE"}],"key":"c1uyGGan7L"},{"type":"text","value":". To use this utility, you must have Python’s ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"tWqg00jyhC"},{"type":"link","url":"https://plotly.com/python/","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"plotly","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"L9dv4Eh54R"}],"urlSource":"https://plotly.com/python/","key":"gFhQRBASJ4"},{"type":"text","value":" package.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"P3nf6N0v4Z"}],"key":"yyv78FVXPG"}],"key":"c3lQoBgTzQ"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-07-17T17:50:25.380307Z","iopub.status.busy":"2024-07-17T17:50:25.379959Z","iopub.status.idle":"2024-07-17T17:50:25.385575Z","shell.execute_reply":"2024-07-17T17:50:25.384911Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"# Empty list for plane points\nplane_points = []\n\n# 3-points defining the plane for EW survey line\np1, p2, p3 = np.array([-1000, 0, 0]), np.array([1000, 0, 0]), np.array([0, 0, -1000])\nplane_points.append([p1, p2, p3])\n\n# NS at x = -300 m\np1, p2, p3 = (\n    np.array([-300, -1000, 0]),\n    np.array([-300, 1000, 0]),\n    np.array([-300, 0, -1000]),\n)\nplane_points.append([p1, p2, p3])\n\n# NS at x = 300 m\np1, p2, p3 = (\n    np.array([300, -1000, 0]),\n    np.array([300, 1000, 0]),\n    np.array([300, 0, -1000]),\n)\nplane_points.append([p1, p2, p3])","key":"YT2ac8xKcT"},{"type":"output","id":"Nzj_II56v6m9Zt2YL9S-w","data":[],"key":"sQvVAsCtSc"}],"key":"xUxkKGamks"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-07-17T17:50:25.389168Z","iopub.status.busy":"2024-07-17T17:50:25.388911Z","iopub.status.idle":"2024-07-17T17:50:25.394480Z","shell.execute_reply":"2024-07-17T17:50:25.393823Z"},"scrolled":false},"children":[{"type":"code","lang":"python","executable":true,"value":"if has_plotly:\n    fig = plot_3d_pseudosection(\n        survey,\n        apparent_conductivity,\n        scale=\"log\",\n        units=\"S/m\",\n        plane_points=plane_points,\n        plane_distance=15,\n        marker_opts={\"colorscale\": \"RdYlBu_r\"},\n    )\n\n    fig.update_layout(\n        title_text=\"Apparent Conductivity\",\n        title_x=0.5,\n        title_font_size=24,\n        width=650,\n        height=500,\n        scene_camera=dict(center=dict(x=0.05, y=0, z=-0.4)),\n    )\n\n    #     plotly.io.show(fig)\n    html_str = plotly.io.to_html(fig)\n    display(HTML(html_str))\n\nelse:\n    print(\"INSTALL 'PLOTLY' TO VISUALIZE 3D PSEUDOSECTIONS\")","key":"avUsN2EuQK"},{"type":"output","id":"cgQZ7lVObHr5TvXVtFjHz","data":[{"name":"stdout","output_type":"stream","text":"INSTALL 'PLOTLY' TO VISUALIZE 3D PSEUDOSECTIONS\n"}],"key":"xFOYAJHa9a"}],"key":"qSR56W1Vgm"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Plot Individual Lines in 2D Pseudosection","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"IGvvN26x0Z"}],"identifier":"plot-individual-lines-in-2d-pseudosection","label":"Plot Individual Lines in 2D Pseudosection","html_id":"plot-individual-lines-in-2d-pseudosection","implicit":true,"key":"SAEU3v6dSL"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"For conventional DC resistivity surveys, the electrodes are located along a set of survey lines. If we know which the survey line associated with each datum, we can parse the 3D survey into a set of 2D survey lines. Then we can plot individual pseudosections for each survey line. Here, we have 6 survey lines, each of which has the same number of data. So assigning a line ID to each datum is easy. You may need to do something more sophisticated in other cases.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"rffewyhAYs"}],"key":"DxZFoWadu5"}],"key":"pUjCE1Dpch"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-07-17T17:50:25.398121Z","iopub.status.busy":"2024-07-17T17:50:25.397823Z","iopub.status.idle":"2024-07-17T17:50:25.402955Z","shell.execute_reply":"2024-07-17T17:50:25.402099Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"# line IDs\nn_lines = len(end_locations_list)\nn_data_per_line = int(survey.nD / n_lines)\nlineID = np.hstack([(ii + 1) * np.ones(n_data_per_line) for ii in range(n_lines)])","key":"yWxepReHQm"},{"type":"output","id":"fcHOAAnBdqse702gMB5B3","data":[],"key":"srpX0BGIct"}],"key":"ZxTdmBYql4"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Here, we use the ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"pQrWxYz2Yc"},{"type":"link","url":"simpeg#simpeg.electromagnetics.static.utils.convert_survey_3d_to_2d_lines","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"convert​_survey​_3d​_to​_2d​_lines","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"f51EG94rZW"}],"urlSource":"simpeg#simpeg.electromagnetics.static.utils.convert_survey_3d_to_2d_lines","key":"TwkiJTVUlG"},{"type":"text","value":" to generate the list of 2D surveys.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"VtAhvjCymm"}],"key":"CszGlxPIRT"}],"key":"m2kj2FIpE4"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-07-17T17:50:25.406282Z","iopub.status.busy":"2024-07-17T17:50:25.405903Z","iopub.status.idle":"2024-07-17T17:50:25.456271Z","shell.execute_reply":"2024-07-17T17:50:25.455488Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"survey_2d_list, index_list = convert_survey_3d_to_2d_lines(\n    survey, lineID, data_type=\"volt\", output_indexing=True\n)","key":"wddmXEAA7I"},{"type":"output","id":"3AAnlQtv3jos-QpiTzkwx","data":[],"key":"AGv8QCG1P9"}],"key":"K0E6lieHRk"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Next, we create list of 2D apparent conductivities. Note that if you converted observed data then computed apparent conductivities, you would be doing so assuming 2D survey geometry and the values would not match those on the 3D pseudosection plot!","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"WqAYtVTyhv"}],"key":"Yj49mR07fU"}],"key":"ZvgUs5jFLx"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-07-17T17:50:25.459676Z","iopub.status.busy":"2024-07-17T17:50:25.459445Z","iopub.status.idle":"2024-07-17T17:50:25.463354Z","shell.execute_reply":"2024-07-17T17:50:25.462703Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"dobs_2d_list = []\napparent_conductivities_2d = []\nfor ind in index_list:\n    dobs_2d_list.append(dpred_con[ind])\n    apparent_conductivities_2d.append(apparent_conductivity[ind])","key":"rSJmgaWpNT"},{"type":"output","id":"bjkrnZ11nW5VCGvlireca","data":[],"key":"vdCZQX9dI1"}],"key":"jQIheGNr5D"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Now we can use the ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"QOljCBJkK5"},{"type":"link","url":"simpeg#simpeg.electromagnetics.static.utils.plot_2d_pseudosection","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"plot​_2d​_pseudosection","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"dJd4P0YQXV"}],"urlSource":"simpeg#simpeg.electromagnetics.static.utils.plot_2d_pseudosection","key":"bOvCo655sk"},{"type":"text","value":" utility function to plot the pseudosection for the desired survey line.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"dKYcSfFO8Y"}],"key":"u77YBkXhMy"}],"key":"GrtHiYMvJY"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-07-17T17:50:25.467214Z","iopub.status.busy":"2024-07-17T17:50:25.466983Z","iopub.status.idle":"2024-07-17T17:50:25.699326Z","shell.execute_reply":"2024-07-17T17:50:25.698698Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"# Line index\nline_ind = 0\n\n# Plot apparent conductivity pseudo-section\nfig = plt.figure(figsize=(8, 2.75))\nax1 = fig.add_axes([0.1, 0.15, 0.75, 0.78])\nplot_pseudosection(\n    survey_2d_list[line_ind],\n    dobs=apparent_conductivities_2d[line_ind],\n    plot_type=\"contourf\",\n    ax=ax1,\n    scale=\"log\",\n    cbar_label=\"S/m\",\n    mask_topography=True,\n    contourf_opts={\"levels\": 20, \"cmap\": mpl.cm.RdYlBu_r},\n)\nax1.set_title(\"Apparent Conductivity\")\nplt.show()","key":"Ll3QjWGm3m"},{"type":"output","id":"iBcdpi51jzwTcguOVtiob","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"fed133ea9587c96ab30c26437aab85e6","path":"/user-tutorials/build/fed133ea9587c96ab30c26437aab85e6.png"},"text/plain":{"content":"<Figure size 800x275 with 2 Axes>","content_type":"text/plain"}}}],"key":"O5nWjJroIg"}],"key":"byp70EOy8X"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"strong","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Optional:","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"iL5NgiEnyC"}],"key":"LEPxSrRLe6"},{"type":"text","value":" Write DC resistivity data and topography.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"I54Y8mC1ck"}],"key":"qsc8g9SlmA"}],"key":"dUyFfVliPH"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2024-07-17T17:50:25.704497Z","iopub.status.busy":"2024-07-17T17:50:25.704261Z","iopub.status.idle":"2024-07-17T17:50:25.710683Z","shell.execute_reply":"2024-07-17T17:50:25.710068Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"if write_output:\n    dir_path = os.path.sep.join([\".\", \"fwd_dcr_3d_outputs\"]) + os.path.sep\n    if not os.path.exists(dir_path):\n        os.mkdir(dir_path)\n\n    # Add 10% Gaussian noise to each datum\n    np.random.seed(433)\n    std = 0.1 * np.abs(dpred_con)\n    noise = std * np.random.normal(size=len(dpred_con))\n    dobs = dpred_con + noise\n\n    # Create dictionary that stores line IDs\n    out_dict = {\"LINEID\": lineID}\n\n    # Create a survey with the original electrode locations\n    # and not the shifted ones\n    source_list = []\n    for ii in range(n_lines):\n        source_list += generate_dcip_sources_line(\n            survey_type,\n            data_type,\n            dimension_type,\n            end_locations_list[ii],\n            topo_xyz,\n            num_rx_per_src,\n            station_separation,\n        )\n    survey_original = dc.survey.Survey(source_list)\n\n    # Write out data at their original electrode locations (not shifted)\n    data_obj = data.Data(survey_original, dobs=dobs, standard_deviation=std)\n\n    fname = dir_path + \"dc_data.xyz\"\n    write_dcip_xyz(\n        fname,\n        data_obj,\n        data_header=\"V/A\",\n        uncertainties_header=\"UNCERT\",\n        out_dict=out_dict,\n    )\n\n    fname = dir_path + \"topo_xyz.txt\"\n    np.savetxt(fname, topo_xyz, fmt=\"%.4e\")","key":"c3cuofZjFP"},{"type":"output","id":"th3IWAne4r30Evjq5W27N","data":[],"key":"fgmfwKaYLh"}],"key":"t7GSZUNj2G"}],"key":"JVxHvl0Yjy"},"references":{"cite":{"order":[],"data":{}}},"footer":{"navigation":{"prev":{"title":"2.5D Forward Simulation","url":"/fwd-dcr-2d","group":"SimPEG User Tutorials"},"next":{"title":"1D Inversion for a Single Sounding","url":"/inv-dcr-1d","group":"SimPEG User Tutorials"}}},"domain":"http://localhost:3000"}